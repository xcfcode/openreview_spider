{"notes": [{"id": "rJl4BsR5KX", "original": "H1lerc30um", "number": 79, "cdate": 1538087739999, "ddate": null, "tcdate": 1538087739999, "tmdate": 1545355392874, "tddate": null, "forum": "rJl4BsR5KX", "replyto": null, "invitation": "ICLR.cc/2019/Conference/-/Blind_Submission", "content": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 11, "writable": false, "overwriting": [], "revisions": false, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Blind_Submission", "rdate": null, "ddate": null, "expdate": null, "duedate": 1538085600000, "tmdate": 1538142958393, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values": ["ICLR.cc/2019/Conference"]}, "forum": null, "readers": {"values": ["everyone"]}, "replyto": null, "content": {"authorids": {"values-regex": ".*"}, "authors": {"values": ["Anonymous"]}}, "writers": {"values": ["ICLR.cc/2019/Conference"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": null, "taskCompletionCount": null, "transform": null, "cdate": 1538142958393}}, "tauthor": "OpenReview.net"}, {"id": "Skgrz2cxgV", "original": null, "number": 1, "cdate": 1544756236769, "ddate": null, "tcdate": 1544756236769, "tmdate": 1545354518330, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "rJl4BsR5KX", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Meta_Review", "content": {"metareview": "the proposed approach of predicting k nearest neighbouring examples as an auxiliary task is an interesting idea. however, the submission should have studied further on how those examples are predicted (e.g., sequence prediction is one, but you could try set prediction, or so on) rather than how sequential prediction of nearest neighbours is done together with different types of classifiers (many of which are arguably not necessarily suitable for classification,) which was a sentiment shared by all the reviewers. \n\nmore careful investigation of different ways in which nearest neighbour prediction could be incorporated and more careful/thorough analysis on how the incorporation of this auxiliary task changes the behaviours or properties of the representation would make it a much better paper (also with clearer writing.)", "confidence": "4: The area chair is confident but not absolutely certain", "recommendation": "Reject", "title": "nearest neighbour prediction as an auxiliary task"}, "signatures": ["ICLR.cc/2019/Conference/Paper79/Area_Chair1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference/Paper79/Area_Chair1"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Meta_Review", "rdate": null, "ddate": null, "expdate": null, "duedate": 1541548800000, "tmdate": 1545353344268, "tddate": null, "super": null, "final": null, "reply": {"forum": "rJl4BsR5KX", "replyto": "rJl4BsR5KX", "readers": {"description": "Select all user groups that should be able to read this comment. Selecting 'All Users' will allow paper authors, reviewers, area chairs, and program chairs to view this comment.", "values": ["everyone"]}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values-regex": "ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+"}, "content": {"title": {"order": 1, "value-regex": ".{1,500}", "description": "Brief summary of your review.", "required": true}, "metareview": {"order": 2, "value-regex": "[\\S\\s]{1,5000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.", "required": true}, "recommendation": {"order": 3, "value-dropdown": ["Accept (Oral)", "Accept (Poster)", "Reject"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The area chair is absolutely certain", "4: The area chair is confident but not absolutely certain", "3: The area chair is somewhat confident", "2: The area chair is not sure", "1: The area chair's evaluation is an educated guess"], "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper79/Area_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": false, "taskCompletionCount": null, "transform": null, "cdate": 1545353344268}}}, {"id": "Bke-YtWv1V", "original": null, "number": 8, "cdate": 1544128889271, "ddate": null, "tcdate": 1544128889271, "tmdate": 1544128889271, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "rJgh5oCAA7", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "content": {"title": "Response 2", "comment": "Thank you for the response. Our intuition is that in classification tasks, the distance between manifolds of different classes should be large and the distance between manifolds of the same class should be small. Therefore, letting neural networks mimic kNN would combine neural networks with the desired distance property of kNN. Our model learns the class label distribution and puts regularizations on it by means of nearest neighbor label distributions & features.\n\nIn such a situation, the order of the nearest neighbors should matter, but should not be very crucial since they are regularizations. We have completed another experiment where we swap the order of the first nearest neighbor and the last nearest neighbor (F-1 score in each dataset is split by \u201c/\u201d below):\n\nOriginal V2VSLS: 92.07/94.97/86.24/69.87\nSwapped: 91.15/93.81/85.35/68.44\n\nThere is a consistent decrease of F-1 between the original model and the model where we swap the first NN and the last NN. We claim that the order of NN matters, but not drastically. This is due to the loss function having a KL divergence term between the ground truth label and the final predicted label with a high weight, but the weights of regularizations are much smaller so that they have a minor effect.\n"}, "signatures": ["ICLR.cc/2019/Conference/Paper79/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621622068, "tddate": null, "super": null, "final": null, "reply": {"forum": "rJl4BsR5KX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper79/Authors|ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621622068}}}, {"id": "H1g1StWDJE", "original": null, "number": 7, "cdate": 1544128822765, "ddate": null, "tcdate": 1544128822765, "tmdate": 1544128822765, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "BJlWxJz4yE", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "content": {"title": "Response 1", "comment": "Thank you for the response. Our intuition is that in classification tasks, the distance between manifolds of different classes should be large and the distance between manifolds of the same class should be small. Therefore, letting neural networks mimic kNN would combine neural networks with the desired distance property of kNN. Our model learns the class label distribution and puts regularizations on it by means of nearest neighbor label distributions & features.\n\nIn such a situation, the order of the nearest neighbors should matter, but should not be very crucial since they are regularizations. We have completed another experiment where we swap the order of the first nearest neighbor and the last nearest neighbor (F-1 score in each dataset is split by \u201c/\u201d below):\n\nOriginal V2VSLS: 92.07/94.97/86.24/69.87\nSwapped: 91.15/93.81/85.35/68.44\n\nThere is a consistent decrease of F-1 between the original model and the model where we swap the first NN and the last NN. We claim that the order of NN matters, but not drastically. This is due to the loss function having a KL divergence term between the ground truth label and the final predicted label with a high weight, but the weights of regularizations are much smaller so that they have a minor effect.\n"}, "signatures": ["ICLR.cc/2019/Conference/Paper79/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621622068, "tddate": null, "super": null, "final": null, "reply": {"forum": "rJl4BsR5KX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper79/Authors|ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621622068}}}, {"id": "BJlWxJz4yE", "original": null, "number": 6, "cdate": 1543933672717, "ddate": null, "tcdate": 1543933672717, "tmdate": 1543933672717, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "rkgbdjlFaX", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "content": {"title": "Still unclear what is successfully being learned", "comment": "You showed that training to learn something about a local neighborhood of the output can help train better neural networks.  I interpret your additional experiments to show that you are learning more than the a trivial single vector pointing to higher-probability outputs, but are not really learning the exact KNN sequence. Similar to Reviewer 2 I still think that a loss function based on the sets of n.n. of the same/different classes is more related to what is actually learnable by this method.  Since you are still not able to provide intuition about what aspect of the class-specific probability distributions is actually being learned, I've downgraded my rating."}, "signatures": ["ICLR.cc/2019/Conference/Paper79/AnonReviewer1"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper79/AnonReviewer1", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621622068, "tddate": null, "super": null, "final": null, "reply": {"forum": "rJl4BsR5KX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper79/Authors|ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621622068}}}, {"id": "H1gRKNG9nm", "original": null, "number": 3, "cdate": 1541182597663, "ddate": null, "tcdate": 1541182597663, "tmdate": 1543932142093, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "rJl4BsR5KX", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Review", "content": {"title": "Training to predict kNN features and labels improves generalization.", "review": "This work uses sequence-to-sequence and memory network neural nets to learn a\nnetwork that not only predicts a label, but also predicts nearest neighbors and\ntheir label.  The intuition is that by training on a related but harder task,\nthe network is forced to learn not just about sampled points but about the\nbehavior in regions around the actual training examples.\n\nTheir work shows that imposing these additional requirements on the model does\nresult in better performance on unseen data, where only the label of the unseen\ndata point is required as output.  They show that learning more about the \nglobal {feature,label} distribution improves F1 scores, and suggest that their\nmethods can be used as an example generator for datasets with class imbalance.\n\nThe writing was clear.  I had only 1 misunderstanding that cause me trouble,\nnamely the first sentence of \"Classification\", where I might put the word\n'benchmark' up front rather than at the end of this somewhat long sentence.\nBy the time 'knn benchmark' appeared some paragraphs later, I realized I\nhad missed something, and had to backtrack.\n\nFigs 1--3 are only viewable on screen with fairly extreme magnification. I\nfound different viewers varied in legibility at these extreme zoom settings.\nHowever, when expanded so y-axis numbers could be deciphered, it turned out\nthat actual improvements in F1 score were rather modest.\n\nFor 4 datasets, their F1 scores of their best method, V2VSLS, improved by ~ 1.5\nto 6%.  They found that their methods were less affected by out-of-core\ncomputation than the benchmark kNN F1 scores.\n\nI did have some questions about the problem formulation.  I did not really\nunderstand why the models wanted to reproduce the exact ordering of the\nnearest neighbors, other than this is easy to formulate.  This makes sense\nfor n.n. label sequences, where further points might be in some neighboring\nclass.  But for predicting the feature vectors of n.n., it seems that the\nexact order is not robust, in the sense very small distance changes can cause\nabrupt shifts in the target nearest-neghbor ordering.  Is there some way\nfor me to understand why this does not pose a problem?  Or is there perhaps\na way to make the loss function a bit less dependent on the precise order\nof the generated feature vector sequence?\n\nIn the computational experiments, with the choice of datasets, it was often\nhard for me to judge how much different aspects of their 4 network structures\nwere really being excercised.  The main issue is the all problems used only\n2--3 classes.  I could not guess what fraction of data points had actual label\nchanges within the 5 n.n..  For many datasets, \"same class\" might be a pretty\ngood predictor of nearest neighbor label.\n\nAlternatively, one can consider the other extreme, of very many classes.\nDoes it still make sense to try to predict the order of nearest neighbor labels in\nsuch a setting?\n\nThe authors provide evidence of some performance improvement, but I would\nencourage them to provide some intuition about what the networks are actually\nlearning.  Some of this can be done with their existing data.\n\nFor example, on average, what are the distances from predicted feature vectors\nto the actual nn feature vectors?  If the feature sequence is typically badly\npredicted, then this might allow the authors to propose that the network is\n*actually* learning some simpler features of the the distributions underlying\nan actual {feature,label} sequence.  This might allow simplified training losses,\nbased, on things like direction and distance to same-label cluster center,\ndirection+distance to average same-class nn.s, direction and distance to\nclosest differently labeled cluster, etc.  Or does their data suggest that\ntheir models are actually learning the precise nearest neighbor ordering?\n\nSuch considerations might be able to improve the OOC training, since\n\"global\" aspects of the distribution features (like \"cluster center\")\nremain approx. valid as training batches changes.\n\nThe other question I had was with the oversampling proposition.  The extent\nof class imbalance in the datasets is not described.  Perhaps it belongs in\nTable 1.  Their approach seems a lot of work for modest gains usually available\nwith oversampling.  Can the authors provide any guideline for how many members a\nminority class should have before using their sequence-to-sequence technique?\n\nPros: they improve generalization to unseen data.\nCons: their models are considerably more complex, and they do not analyze their\ndata in enough detail to suggest whether their complexity is necessary, or perhaps\ncould be reduced.  Figures are too small (many unreadable in printed copy).\nDatasets have very few classes and the extent to which nearest neighbors are\nof different class not reported.\n", "rating": "6: Marginally above acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper79/AnonReviewer1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": true, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Review", "cdate": 1542234542596, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "rJl4BsR5KX", "replyto": "rJl4BsR5KX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335644493, "tmdate": 1552335644493, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "HyxLBU-9h7", "original": null, "number": 2, "cdate": 1541178941920, "ddate": null, "tcdate": 1541178941920, "tmdate": 1543592913102, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "rJl4BsR5KX", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Review", "content": {"title": "need more clear writing and strong experimental results", "review": "I had a hard time understanding this paper. The approach is clearly about combining kNN with neural networks, but it wasn\u2019t clear how it is done. After reading the whole paper, my guess is that kNN is done on raw data first, and then its results are used for training a neural network. In particular, a network is trained to predict the labels of neighboring samples, which are obtained by kNN beforehand. A simple figure explaining it in the introduction would be very helpful since the idea is not that complex. \n\nAlso, the authors also fail to give an adequate explanation on why the method works. The only reason I can think of is that this regularization forces the model to detect if a sample near a class boundary. This is because when a sample is far from boundaries and surrounded by samples of the same class, the model would simply predict that class label. The same is true when predicting out-of-sample vectors because the average position of K'th neighbor is likely to overlap with the input sample due to the randomness of sampling. \n\nI don\u2019t really see why a memory-based model is introduced. The external memory is used for holding random samples. It is not clear how the model can use such random samples for making predictions. Also, the authors give no explanation to why it should help. The results also don\u2019t show the benefit of a memory-based model. Maybe the authors should look into models that output a set instead of a sequence since neighbors are more like a set in their structure.\n\nThe experimental results show clear improvements over basic baselines, so the method is doing some regularization. However, I'm not very familiar with datasets used here and their state-of-art. They are relatively low dimensional compared to usual datasets used in deep learning. It is not clear if the method can scale to high dimensional data such as images. The vanilla neural network is not really a strong baseline here. Since the authors proposed a regularization technique, it should be compared with other regularization techniques in neural networks.\n\nPros:\n- a simple idea\n- encouraging experimental results\n\nCons:\n- confusing read\n- no clear intuition is given\n- restricted to low-dimensional datasets\n- strong baselines needed\n- the plots are too small to see (impossible to see when printed)\n\nOther comments:\n- The authors are using the term \"feature vector\" to refer to a data point. However, in the context of neural networks, \"feature vector\" often means a hidden representation of a neural network. \n- why repeat \"randomly draw B samples\" R times? why not directly sample RxB samples?\n- \"it is quite implausible that only affine ...\" any evidence to support this?\n- The model is not really \"sequence-to-sequence\" since the input is not a sequence.\n", "rating": "5: Marginally below acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper79/AnonReviewer2"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": true, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Review", "cdate": 1542234542596, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "rJl4BsR5KX", "replyto": "rJl4BsR5KX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335644493, "tmdate": 1552335644493, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "rJgh5oCAA7", "original": null, "number": 5, "cdate": 1543592851767, "ddate": null, "tcdate": 1543592851767, "tmdate": 1543592851767, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "BJglP0xKaQ", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "content": {"title": "still need more works", "comment": "I increased my score since I do agree that \"it also needs to learn its nearest feature vectors\" is an interesting approach and the experimental results support it. However, I still think the paper needs more work. The memory network wasn't an appropriate model to use here. Even seq2seq model is not a perfect fit since neighbors don't have sequential structure. I think the new swap experiment confirms that. I would suggest to use set models (deepset, transformer) instead. Also, I think more investigation is needed to understand why the method works. "}, "signatures": ["ICLR.cc/2019/Conference/Paper79/AnonReviewer2"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper79/AnonReviewer2", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621622068, "tddate": null, "super": null, "final": null, "reply": {"forum": "rJl4BsR5KX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper79/Authors|ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621622068}}}, {"id": "H1lEoAxtpm", "original": null, "number": 3, "cdate": 1542160028310, "ddate": null, "tcdate": 1542160028310, "tmdate": 1542396882580, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "SyL9ahOnm", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "content": {"title": "Response3", "comment": "Thank you very much for the comments. Regarding the first point, we can regard the input as the sequence of length 1, and then the seq2seq model can be applied in this situation.\n\nRegarding the second point, an order is quite natural \u2013 based on the distance from the sample. In summary, while there is no direct order, the order based on the distance makes sense in our opinion. When predicting the label of a sample, the model tries to predict $k$ probability distributions and mimic \u201cmajority voting.\u201d We have also tried changing the loss function to be less (or not) dependent on the order of the feature vector sequence: we tried changing the sum of MSE losses (Sum (X^T_i \u2013 X^P_i)^2) to the MSE loss between every X^P_i and the average feature vector (Sum (X^T_i)/k) or the feature vector X itself. The experiments show that our current loss function (dependent sequence) outperforms these options (independent or less dependent sequence). To get a better handle on the order, we are currently conducting an experiment where we swap some elements in the order. We will post here the findings as soon as we have them. \n\n[UPDATE] To get a better handle on the order of nearest neighbors, we have tried to arbitrarily swap the 1st and the 3rd element in the order, and the results only have a tiny difference. The results are shown below (4 datasets):\nV2VSLS: 92.07/94.97/86.24/69.87\nSwapped: 91.79/94.56/85.99/69.42\nThese numbers are based on the average of five runs. The results suggest that the order of nearest neighbors does not have a big impact. Note also that in our loss function there is a KL divergence term between the ground truth label and the final predicted label with a high weight.\n\nRegarding the third point, in our results, our model outperforms a fine-tuned neural network (with regularization, using the Adam optimization algorithm, etc.), random forest, XGBoosting etc., which we consider as the state-of-the-art general classifiers. For example, XGBoosting is a frequent winner in many Kaggle competitions. \n\n[UPDATE] We have also implemented the algorithm from Wang et al (2017), which also utilized the nearest neighbors to make predictions. The comparison is shown below (4 datasets):\nV2VSLS: 92.07/94.97/86.24/69.87\nMemory Network: 79.36/77.98/75.17/61.83\nWang: 64.18/69.64/54.29/52.18\nIn the implementation of Wang, we have fine-tuned the hyperparameters: K, I, Learning rate. The optimizer used is Adam. These numbers are based on the average of five runs. There is a gap between our models and Wang\u2019s model, and we were unable to further improve the Wang's model. \n\nRegarding the fourth point, I assume you were referring to the memory networks models and V2VS. That is correct \u2013 we wanted to assess whether those different structures would improve the performance, and unfortunately, they do not perform well. We are reporting these results in order for other researchers not to spend time on such attempts. However, the V2VSLS performance is excellent, and therefore V2VSLS is the main method our work suggests.\n"}, "signatures": ["ICLR.cc/2019/Conference/Paper79/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621622068, "tddate": null, "super": null, "final": null, "reply": {"forum": "rJl4BsR5KX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper79/Authors|ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621622068}}}, {"id": "BJglP0xKaQ", "original": null, "number": 2, "cdate": 1542159960064, "ddate": null, "tcdate": 1542159960064, "tmdate": 1542396803579, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "HyxLBU-9h7", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "content": {"title": "Response2", "comment": "Thank you very much for the comments. Your understanding is correct \u2013 kNN is done on raw data first, then the results are used for training a neural network. Regarding the reason of why the method works, we postulate that this is because the model is forced to learn more than just the final label of a sample; it also needs to learn its nearest feature vectors. The idea is similar to an autoencoder, which is able to compress and then recover the data. By projecting the data to a lower dimensional space, the model is forced to learn the most representative information of inputs, so that the compressed information can be used to recover the original data. If the model is forced to reconstruct more complex information from compressed information, it is expected that it needs to work harder and thus to produce more exact predictions. \n\nRegarding the reason why we consider a memory network, the structure of a vanilla memory network fits perfectly with our original thought: after each hop of a memory network, the network outputs a label or a feature vector. This is very similar to the sequence to sequence concept. However, experiments show that the memory network family does not perform well \u2013 the sequence to sequence family works much better. We wanted to assess whether those different structures would improve the performance, and unfortunately, they do not perform well. We are reporting these results in order for other researchers not to spend time on such attempts.\n\nRegarding  the comment about baseline models, we have fine-tuned the vanilla neural network with dropout regularization. The baseline result in the paper already includes this regularization. We have also tried the L1/L2 regularization, but dropout outperforms them on the baseline neural network model.\n\nFor the point \u2018the model is not really a sequence to sequence model since the input is not a sequence,\u2019 we can in fact regard the input as the sequence of length 1, and then the seq2seq model can be applied in this situation. \n\nFor the point \u2018\"it is quite implausible that only affine ...\" any evidence to support this,\u2019 for example the two linking rings are not easy to separate if we only use affine transformation etc.\n\nRegarding \u2018why repeat \"randomly draw B samples\" R times? why not directly sample RxB samples,\u2019 our assumption is that at most B samples can fit to computer memory (and thus RxB cannot). Randomly drawing B samples R times fixes this problem.\n\n[UPDATE] To get a better handle on the order of nearest neighbors, we have tried to arbitrarily swap the 1st and the 3rd element in the order, and the results only have a tiny difference. The results are shown below (4 datasets):\nV2VSLS: 92.07/94.97/86.24/69.87\nSwapped: 91.79/94.56/85.99/69.42\nThese numbers are based on the average of five runs. The results suggest that the order of nearest neighbors does not have a big impact. Note also that in our loss function there is a KL divergence term between the ground truth label and the final predicted label with a high weight.\n\n[UPDATE] We have also implemented the algorithm from Wang et al (2017), which also utilized the nearest neighbors to make predictions. The comparison is shown below (4 datasets):\nV2VSLS: 92.07/94.97/86.24/69.87\nMemory Network: 79.36/77.98/75.17/61.83\nWang: 64.18/69.64/54.29/52.18\nIn the implementation of Wang, we have fine-tuned the hyperparameters: K, I, Learning rate. The optimizer used is Adam. These numbers are based on the average of five runs. There is a gap between our models and Wang\u2019s model, and we were unable to further improve the Wang's model. "}, "signatures": ["ICLR.cc/2019/Conference/Paper79/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621622068, "tddate": null, "super": null, "final": null, "reply": {"forum": "rJl4BsR5KX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper79/Authors|ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621622068}}}, {"id": "rkgbdjlFaX", "original": null, "number": 1, "cdate": 1542159208678, "ddate": null, "tcdate": 1542159208678, "tmdate": 1542396560610, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "H1gRKNG9nm", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "content": {"title": "Response1", "comment": "Thank you very much for the comments. For the issue of ordering of nearest neighbors, we postulate that this is because when predicting the label of a sample, the model tries to predict k probability distributions and mimic \u201cmajority voting.\u201d For example, for a sample x, the predicted label sequence is, say, [2,1,1,1,2], the final predicted label would very likely be the same if the predicted label sequence is [1,2,1,1,2], due to \u201cmajority voting.\u201d An order is quite natural \u2013 based on the distance from the sample. In summary, while there is no direct order, the order based on the distance makes sense in our opinion. To get a better handle on the order, we are currently conducting an experiment where we swap some elements in the order. We will post here the findings as soon as we have them. \n\n[UPDATE] We have tried to swap the 1st and the 3rd element in the order, and the results only have a tiny difference. The results are shown below (4 datasets):\nV2VSLS: 92.07/94.97/86.24/69.87\nSwapped: 91.79/94.56/85.99/69.42\nThese numbers are based on the average of five runs. The results suggest that the order of nearest neighbors does not have a big impact. Note also that in our loss function there is a KL divergence term between the ground truth label and the final predicted label with a high weight.\n\n[UPDATE] We have also implemented the algorithm from Wang et al (2017), which also utilized the nearest neighbors to make predictions. The comparison is shown below (4 datasets):\nV2VSLS: 92.07/94.97/86.24/69.87\nMemory Network: 79.36/77.98/75.17/61.83\nWang: 64.18/69.64/54.29/52.18\nIn the implementation of Wang, we have fine-tuned the hyperparameters: K, I, Learning rate. The optimizer used is Adam. These numbers are based on the average of five runs. There is a gap between our models and Wang\u2019s model, and we were unable to further improve the Wang's model. \n\nRegarding your suggestion of changing the loss function to be less dependent on the order of the feature vector sequence, we have actually tried to change the sum of MSE losses (Sum (X^T_i \u2013 X^P_i)^2) to the MSE loss between every X^P_i and the average feature vector (Sum (X^T_i)/k) or the feature vector X itself. The experiments have showed that our current loss function outperforms these options. \n\nRegarding the second issue of how many members a minority class should have before using the seq2seq technique, the minority class proportions for our four datasets vary from approximately 3% to 30% (thanks for the note - we will include such information in Table 1), and our proposed seq2seq technique works well in this range. Since its performance is more stable than other oversampling techniques, we suggest trying this model in the oversampling task as long as the minority class consists of less than 30% of all samples. "}, "signatures": ["ICLR.cc/2019/Conference/Paper79/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621622068, "tddate": null, "super": null, "final": null, "reply": {"forum": "rJl4BsR5KX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper79/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper79/Authors|ICLR.cc/2019/Conference/Paper79/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers", "ICLR.cc/2019/Conference/Paper79/Authors", "ICLR.cc/2019/Conference/Paper79/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621622068}}}, {"id": "SyL9ahOnm", "original": null, "number": 1, "cdate": 1541094797517, "ddate": null, "tcdate": 1541094797517, "tmdate": 1541534302133, "tddate": null, "forum": "rJl4BsR5KX", "replyto": "rJl4BsR5KX", "invitation": "ICLR.cc/2019/Conference/-/Paper79/Official_Review", "content": {"title": "Combine KNN of each training data point into the neural network models, but the motivation does not make sense.", "review": "To exploit the near neighbor/manifold features, this paper proposes to combine k-nearest neighbors of each training data point into the neural network models.  Specifically, the authors propose two families of models built on the popular sequence to sequence neural network models and memory network models, which mimic the k-nearest neighbors model in model learning. Besides, the final label of the classification task will be learned, a sequence of nearest neighbor labels and a sequence of out-of-sample feature vectors (for oversampling) will be also learned in the same time, similar with the multi-task approaches. Since the proposed models are based k-nearest neighbor calculations, which is time-consuming, they also design an algorithm for the \u2018out-of-core\u2019 situation, say load a small portion of data each time to approximately calculate the neighbors. Experiments show that some proposed models work better than baselines in classification and oversampling.\nStrong points:\n(1) As similar with the multi-task setting, the proposed model can output some side useful results, such as oversampling vectors.\n(2) The proposed models work well on the \u2018out-of-core\u2019 situation, which shows that the models are robust.\nConcerns or suggestions:\n(1) The training data $x$ is just one data point, it is not a sequence of data. So the idea to model it in a sequence to sequence setting does not make sense.\n(2) K-nearest neighbors are a set but not a sequence. To model them as a sequence is also strange. The i-th nearest neighbor does not necessarily dependent on the i-1-th nearest neighbor. For example, we consider the one-dimensional case, the focus data may lie between its first and second nearest neighbors. In this case, there is no clear sequence dependence from the second neighbor to the first neighbor. \n(3) The experiments are not sufficient. They only compare with some weak baselines, such as KNN. As the classification task, there are many state-of-the-art models. Besides of these standard classification models, we strongly suggest comparing with the previous method, Wang et al. (2017), which also proposes to combine the k-nearest neighbors into memory network models. I am surprised that the authors did not compare with this very related work. In my opinion, the idea of utilizing nearest neighbors as external memory in Wang et al. (2017) makes more senses.\n(4) The experimental results of some proposed sub-models (key parts of final models) are even worse than the basic kNN model. I should say that the results are not good enough to support the proposed methods. ", "rating": "4: Ok but not good enough - rejection", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper79/AnonReviewer3"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks", "abstract": "k-Nearest Neighbors is one of the most fundamental but effective classification models. In this paper, we propose two families of models built on a sequence to sequence model and a memory network model to mimic the k-Nearest Neighbors model, which generate a sequence of labels, a sequence of out-of-sample feature vectors and a final label for classification, and thus they could also function as oversamplers. We also propose `out-of-core' versions of our models which assume that only a small portion of data can be loaded into memory. Computational experiments show that our models outperform k-Nearest Neighbors, a feed-forward neural network and a memory network, due to the fact that our models must produce additional output and not just the label. As an oversampler on imbalanced datasets, the sequence to sequence kNN model often outperforms Synthetic Minority Over-sampling Technique and Adaptive Synthetic Sampling.\n", "paperhash": "xu|knearest_neighbors_by_means_of_sequence_to_sequence_deep_neural_networks_and_memory_networks", "authorids": ["yimingxu2020@u.northwestern.edu", "d-klabjan@northwestern.edu"], "authors": ["Yiming Xu", "Diego Klabjan"], "keywords": [], "pdf": "/pdf/51acf3f6c9e86f207f689eceabd764aa5d591a52.pdf", "_bibtex": "@misc{\nxu2019knearest,\ntitle={k-Nearest Neighbors by Means of Sequence to Sequence Deep Neural Networks and Memory Networks},\nauthor={Yiming Xu and Diego Klabjan},\nyear={2019},\nurl={https://openreview.net/forum?id=rJl4BsR5KX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper79/Official_Review", "cdate": 1542234542596, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "rJl4BsR5KX", "replyto": "rJl4BsR5KX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper79/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335644493, "tmdate": 1552335644493, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper79/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}], "count": 12}