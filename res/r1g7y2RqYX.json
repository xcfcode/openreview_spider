{"notes": [{"id": "BJeOQ0NqCm", "original": null, "number": 2, "cdate": 1543290400155, "ddate": null, "tcdate": 1543290400155, "tmdate": 1548885348710, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "SklckBGU3X", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Official_Comment", "content": {"title": "Convergence, parameters and hyper-parameters, and experimental setting", "comment": "Thank you for your comments, please see our responses below.\n\n\u201cConvergence issues; the algorithm may go wrong; bifurcation rate can be too slow/fast:\u201d\nIndeed, a limited number of layers might give an exact solution to the quadratic criterion in Eq. (2). However, our results imply that using few iterations with learned weights outperforms a converged solution using heuristic weights.\nBecause our model optimizes accuracy, each point point in Fig, 4 corresponds not only to a different T but also to different learned weights, making it difficult to compare convergence across points.\nWhile bifurcation can potentially change the rate of convergence, it does not have to. Since the bifurcation parameters (\\theta^\\tau) are learned, and since \\theta^\\tau = 0 implies no change in rates, bifurcation will be used (by learning that \\theta^\\tau != 0) only if it results in better performance.\n\n\u201cIs introducing entropy always helpful?\u201d:\nSince the entropy parameters (\\theta^e) are learned, and because \\theta^e = 0 implies uniform weights (like in LP), the model will learn to use entropy only if it results in improved performance. The same applies to KL divergence.\n\n\u201cDifference in experimental setting and results from GCN:\u201d\nThe main differences between our setup and GCN are the number of labeled nodes and how they can be used. In GCN labeled nodes are partitioned into training (20 nodes per class) and validation (500 additional nodes). While training sets are kept small (3.6% for Citeseer, 5.2% for CoRA, and 0.3% for pubmed), the total number of labeled nodes (training+validation) is rather large (18.6%, 23.6%, and 2.8% of all nodes, respectively), and a huge portion of labeled nodes is pre-allocated for validation (81%, 78%, and 89% of labeled data, respectively) and so can only be used for tuning, not training. This puts methods that require little or no tuning (such as LP, over which our method is built) at an immediate disadvantage. \nIn our view, methods should be free to choose how to best use the available labeled data, be it for training, tuning, or other. We have experimented in the GCN setting, allowing our model to use all labeled data for training. While our model outperforms GCN (83.4 vs. 79.6 on CoRA and 69.8 vs. 67.5 on Citeseer, averaged over 10 random splits), this may also seem unfair, since other baselines might also benefit from a allocation of the labeled budget. There also several other issues with the \u201cstandard\u201d setting used in GCN - see the recent paper by Shchur et al. (2018) [1] for details.\nDue to the above, our solution was to revert to the classic SSL experimental setting used in numerous papers, where a fixed percentage of labeled nodes are drawn uniformly at random. We used 1% as it is a reasonable number in the range of the GCN setting, and allowed us to fully train all baselines for all settings and datasets over 10 random splits in a reasonable amount of time.\n\n\u201cNumber of GCN layers:\u201d\nWe use the published GCN code which has one graph-convolution layer and is used in their paper.\n\n\u201cToo many hyperparameters to tune\u201d:\nPlease note that we have only *one* network-related hyper-parameter that requires tuning - the number of layers (T). As Fig. 4 shows, choosing T can be made robust by using bifurcation. All other model parameters (denoted by \\theta) are learned. The regularization coefficient \\lambda is chosen by standard cross validation.\n\n\u201cMinor points\u201d:\nThank you for these, we will fix them.\n\n[1] Shchur, O., Mumme, M., Bojchevski, A., & G\u00fcnnemann, S. (2018). Pitfalls of Graph Neural Network Evaluation. arXiv preprint arXiv:1811.05868."}, "signatures": ["ICLR.cc/2019/Conference/Paper972/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621606327, "tddate": null, "super": null, "final": null, "reply": {"forum": "r1g7y2RqYX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper972/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper972/Authors|ICLR.cc/2019/Conference/Paper972/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621606327}}}, {"id": "S1l6GGSqR7", "original": null, "number": 3, "cdate": 1543291412735, "ddate": null, "tcdate": 1543291412735, "tmdate": 1548885340496, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "HJxISgAn2m", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Official_Comment", "content": {"title": "Clarifications, justifications, and updates", "comment": "Thank you for your comments. Below please find details describing our modeling and experimental choices. The updated paper includes an enriched related materials section and GAT as a baseline. Fig. 4 quantifies the added value of the bifurcation component.\n\n\u201cTotal number of parameters, and compared to other methods?\u201d\nThe total number of parameters is between 12 and 44, depending on dataset and experimental setting. Based on their published codes, GCN has 23,040 and GAT has 92,391 for CoRA. We use 38. These include:\n- Weights: 30 edge features, some are per-class (Appendix B)\n- Attention: 2 parameters per class, one for entropy and one for divergence (Sec. 3.1)\n- Bifurcation: 2 parameters (Eq. (13))\n\n\u201cRelation to papers by Saha et al. and Cilberto et al.\u201d:\nThe above papers propose methods for multi-task learning (Saha et. al for online, Ciliberto et al. for batch), and consider relations between tasks, which are fixed and given as input. Our paper focuses on semi-supervised learning, and considers weighted relations between examples, which are learned.\n\n\u201cDiscern contribution of learning the weights vs propagating labels instead of embeddings\u201d:\nThe LP baseline, which we generalize, propagates labels with fixed weights. Fig. 4 shows the how adding bifurcation (LPN_bif) compares to only learning weights (LPN_nobif).\n\n\u201cPlease specify that \\theta are learned\u201d:\nWe will clarify this.\n\n\u201cEntropy and divergence - inversely proportional?\u201d:\nWe use *negative* entropy and *negative* divergence (see Eq. (11) and above). This aligns with your intuition.\n\n\u201cUse threshold for rounding instead of bifurcation\u201d:\n\u201cHard\u201d rounding is non-differentiable, and cannot be used efficiently with back-propagation. Bifurcation is differentiable, and much more expressive than simple rounding. It can interpolate between \u201crounding up\u201d (large \\tau) and \u201crounding down\u201d to uniform (\\tau-->zero), or result in no rounding (\\tau=1). \n\n\u201cAre a, b tuned using cross-validation? Can't we learn them?\u201d:\nBoth a and b (=\\theta^\\tau) are learned, not tuned.\n\n\u201cCan\u2019t the loss in Eq. (14) be replaced by the standard empirical loss?\u201d:\nUnfortunately, no. With the standard empirical loss, Eq. (14) becomes degenerate. This is because the it compares the true and predicted labels of the labeled nodes. As in LP, predicted labels of labeled nodes are set to their true labels, so the loss is always 0. This is also noted in Zhang & Lee (2007).\n\n\u201cIf available, how are node features used?\u201d:\nNode features are used to parameterize edge weights (Eq. (7) & appendix B). Sec. 2.2 now includes more details.\n\n\u201cWhy is k chosen to be equal to 1%?\u201d:\nWe chose 1% as it is a reasonable number in the range of those used in GCN and others (3.6%, 5.2%, and 0.3%). Note that we re-train all baselines on all datasets over 10 random splits in two experimental settings, which requires considerable computational resources.\n\n\u201cReduce features to avoid overfitting\u201d:\nThe overall number of parameters we use is very small, especially compared to other methods. We observed that reducing the number of features only degrades performance.\n\n\u201cDifferences from GCN\u201d:\nThere are several notable differences, most of which become apparent when comparing the form of classifiers proposed by each method. The classifier of GCN is f(x, W; \\theta), while ours is f(y; W(x; \\theta)). This means that:\n- GCN operates on features, while we propagate labels. The benefit of propagating labels is that labeled information is used not only to penalize wrong predictions (in the loss), but also to *generate* predictions. This is the hallmark of the LP algorithm, which we adopt.\n- GCN assumes edge weights W are given as input. These are typically set heuristically. In contrast, our method learns weights by optimizing predictive accuracy.\n- GCN uses node features x to generate embeddings, and hence does not apply to tasks where node features are not available. For our method, when features are available, we use them to parametrize W. When they are not available, we use the information-gated attention mechanism.\n\n\u201cNo comparison to GraphSage:\u201d\nGraphSage applies to an inductive learning setting. Our method is designed for a transductive learning setting.\n\n\u201cExplain \u2018LPN_nobif degrades with large T\u2019\u201d:\nFig. 4 shows that without bifurcation, accuracy can be sensitive to T. Adding bifurcation provides robustness. This is true even when the effects of bifurcation are subtle (\\tau~=1).\n\n\u201cTrend in Table 1; why is performance poor for Flickr?\u201d:\nFlickr is dense compared to others (edge/node ratio of 60:1, vs. between 1.5:1 and 5.3:1). To reduce the computational load, we sparsify the graph, which may explain the low accuracy.\n\n\u201cUncertainty estimates\u201d:\nNow added."}, "signatures": ["ICLR.cc/2019/Conference/Paper972/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621606327, "tddate": null, "super": null, "final": null, "reply": {"forum": "r1g7y2RqYX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper972/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper972/Authors|ICLR.cc/2019/Conference/Paper972/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621606327}}}, {"id": "rkg5ufBcAQ", "original": null, "number": 4, "cdate": 1543291506442, "ddate": null, "tcdate": 1543291506442, "tmdate": 1548885328945, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "rJxDdu4A37", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Official_Comment", "content": {"title": "Comments", "comment": "Thank you for your comments, please see our responses below.\n\n\u201cNot sure I understand dynamic weights\u201d:\nYes, this is correct. The attention mechanism turns incoming soft labels (h^t) into edge weights (a^{t+1}). For given parameters \\theta^\\alpha, the attention function \\alpha is indeed fixed, but since soft labels change as they pass through the layers, so do the edge weights. When viewed as a label-propagation mechanism, weights can be thought of as changing over time.\n\n\u201cWhat is \\theta^\\tau in Eq. (13):\n\\theta^\\tau is defined just above Eq. (13) - it is simply the concatenation of a and b. The left hand side can be written as \\tau(t;a,b). In general, we use \\theta to denote parameters, and the corresponding superscript to denote what they parameterize. We will make this clearer.\n\n\u201cThe term \u2018time\u2019 is misleading\u201d:\nWe apologize for this inclarity. Indeed, we use time, iterations, and number of layers (or depth) interchangeably. This is because the network\u2019s layers simulate the iterations of LP, which we think of as applied over time. We will clarify this.\n\n\u201cHow are raw features incorporated in the loss?\u201d:\nWe use \u201craw\u201d features to parameterize edge weights. This means that the weight w_{ij} of an edge (i,j) is a function of various edge measures \\phi_{ij}, some of which are derived from raw node features (see appendix B). The function is parameterized by \\theta^\\phi - the exact form is given in Eq. (7). Edge weights then determine the predicted labels (through the label propagation mechanism), and predictions are plugged into the loss function in Eq. (14), where they are evaluated against the ground-truth labels.\n"}, "signatures": ["ICLR.cc/2019/Conference/Paper972/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621606327, "tddate": null, "super": null, "final": null, "reply": {"forum": "r1g7y2RqYX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper972/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper972/Authors|ICLR.cc/2019/Conference/Paper972/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621606327}}}, {"id": "r1g7y2RqYX", "original": "r1gXQxCYKm", "number": 972, "cdate": 1538087899061, "ddate": null, "tcdate": 1538087899061, "tmdate": 1545355435918, "tddate": null, "forum": "r1g7y2RqYX", "replyto": null, "invitation": "ICLR.cc/2019/Conference/-/Blind_Submission", "content": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 13, "writable": false, "overwriting": [], "revisions": true, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Blind_Submission", "rdate": null, "ddate": null, "expdate": null, "duedate": 1538085600000, "tmdate": 1538142958393, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values": ["ICLR.cc/2019/Conference"]}, "forum": null, "readers": {"values": ["everyone"]}, "replyto": null, "content": {"authorids": {"values-regex": ".*"}, "authors": {"values": ["Anonymous"]}}, "writers": {"values": ["ICLR.cc/2019/Conference"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": null, "taskCompletionCount": null, "transform": null, "cdate": 1538142958393}}, "tauthor": "OpenReview.net"}, {"id": "BJl9M8YrgE", "original": null, "number": 1, "cdate": 1545078289680, "ddate": null, "tcdate": 1545078289680, "tmdate": 1545354480970, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Meta_Review", "content": {"metareview": "This  paper is on graph based semi-supervised learning where the goal is to develop an approach to jointly the node labeling function together with the edge weights. A natural way to formulate this problem as a bi-level optimization problem. However, the authors claim that this approach introduces two main difficulties: (a)  the \"upper\" objective function is itself the solution to the \"lower\" optimization problem (Eq. (2)), and (b) optimization is challenging (Eq. (3)). The AC disagrees. Firstly, there is a close connection between the constrained version and the regression version of the problem (e.g., Belkin, Matveeva and Niyogi) -- the former is infact a special case of the latter for a certain choice of regularization parameter. The latter reduces to an linear system. The outer problem can be optimized using standard gradient descent using the implicit function theorem trick common in bilevel optimization. Reviewers have also raised concerns about clarity, and experimental support in this paper and comparisons with related work.  ", "confidence": "5: The area chair is absolutely certain", "recommendation": "Reject", "title": "formulation unconvincing; Clarity, experimental support needs improvement."}, "signatures": ["ICLR.cc/2019/Conference/Paper972/Area_Chair1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference/Paper972/Area_Chair1"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Meta_Review", "rdate": null, "ddate": null, "expdate": null, "duedate": 1541548800000, "tmdate": 1545353013918, "tddate": null, "super": null, "final": null, "reply": {"forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "readers": {"description": "Select all user groups that should be able to read this comment. Selecting 'All Users' will allow paper authors, reviewers, area chairs, and program chairs to view this comment.", "values": ["everyone"]}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper972/Area_Chair[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values-regex": "ICLR.cc/2019/Conference/Paper972/Area_Chair[0-9]+"}, "content": {"title": {"order": 1, "value-regex": ".{1,500}", "description": "Brief summary of your review.", "required": true}, "metareview": {"order": 2, "value-regex": "[\\S\\s]{1,5000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.", "required": true}, "recommendation": {"order": 3, "value-dropdown": ["Accept (Oral)", "Accept (Poster)", "Reject"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The area chair is absolutely certain", "4: The area chair is confident but not absolutely certain", "3: The area chair is somewhat confident", "2: The area chair is not sure", "1: The area chair's evaluation is an educated guess"], "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper972/Area_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": false, "taskCompletionCount": null, "transform": null, "cdate": 1545353013918}}}, {"id": "HJxISgAn2m", "original": null, "number": 2, "cdate": 1541361725582, "ddate": null, "tcdate": 1541361725582, "tmdate": 1543768585216, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Official_Review", "content": {"title": "Method for non-linear label propagation while learning the network weights simultaneously. Insufficient comparison to related methods, insufficient experimental evidence and explanation for the results. ", "review": "**** After Revision ***********\nI thank the authors for diligently revising the paper according to the reviewers' suggestions. I have increased my score for the paper. I still think the experimental evaluation can be more thorough. For example, it would be good to show the effect of varying the \\tau parameter and the number of available labels (k). It would also be good to experiment with the Flickr graph without any sparsification and to add uncertainty estimates to the results in Table 1. \n**** After Revision ***********\n\nThis paper proposes a framework for non-linear label propagation where the weights are learned simultaneously. There are model specific and experimental setup design decisions that require justification. There also needs to be a number of ablation studies to justify the effectiveness of the different components of this framework.  Finally, there seems to be an insufficient comparison (both experimentally and theoretically) to the large amount of related literature. \n- What is the total number of parameters in the proposed network? Please clarify how this is \"relatively few parameters\" as compared to other methods. \n- Please compare how your method for learning weights relates to the following papers and the references therein [1,2]\n[1] Online Learning of Multiple Tasks and Their Relationships. Saha et al, AISTATS, 2011. \n[2] Convex Learning of Multiple Tasks and their Structure, Cilberto et al, 2015. \n- It would be good to have an ablation study in order to discern what is the contribution of learning the weights vs propagating labels (instead of embeddings). \n- For clarity, please specify that \\theta are the parameters to be learned. \n- Please explain the intuition of using entropy and KL divergence for the attention weights. Shouldn't the attention for an edge be inversely proportional to the entropy i.e. the attention should be higher if the neighboring node's label is more certain?\n- Instead of the bifurcation mechanism proposed in section 3.2, isn't it possible to use a threshold to round the resulting prediction to a hard label?\n- In equation 13, are the hyper-parameters a, b tuned using cross-validation? Can't we learn the \\tau in the same training procedure? Please justify this design decision?\n- What is the performance if the loss in equation 14 is replaced by the standard empirical loss? There needs to be an ablation study on this. \n- If the node features are available, how are they used in this framework?\n- In the experimental section, why is k chosen to be equal to 1%? Please show results while varying this. \n- Please justify the line \"parameterizes w using a small number (~20) of informative features based on the raw features (e.g., dimensionality reduction), the graph (e.g., edge betweenness), and the labeled set (e.g., distance from labeled nodes). \" Isn't it possible to get similar performance by reducing the number of parameters so that model doesn't overfit?\n- Please clearly state what is the difference in the framework from the Kipf and Welling, 2016 paper?\n- Why isn't there a comparison to methods like Graph-Sage?\n- Please explain this line \"LPNnobif degrades with large T, and even \\tau slightly above 1 makes a difference\"\n- Finally, please explain the trend in the results in Table 1. For example, why is the performance of the proposed method poor on the Flickr dataset, but better on the DBLP dataset?\n- It would good to have uncertainty estimates for the results reported in Table 1. ", "rating": "5: Marginally below acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper972/AnonReviewer2"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": true, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Official_Review", "cdate": 1542234335350, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper972/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335844403, "tmdate": 1552335844403, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper972/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "SkgLUiXWkV", "original": null, "number": 6, "cdate": 1543744333871, "ddate": null, "tcdate": 1543744333871, "tmdate": 1543744333871, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "B1gZxggrcQ", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "content": {"comment": "Thanks for your reply. I appreciate you taking the time to answer. \n\nMy comment regarding the experimental setup was a bit ambiguous. I agree that the fixed split setup of Yang is problematic. Especially because different splits can lead to very different results. What I think makes sense is to follow the same setup regarding fraction of missing labels, evaluation metric etc., but to compute mean and stddev over several (10 or so)  random splits. ", "title": "Thanks"}, "signatures": ["~Mathias_Niepert1"], "readers": ["everyone"], "nonreaders": [], "writers": ["~Mathias_Niepert1", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1542311709072, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values-regex": "~.*|\\(anonymous\\)", "description": "How your identity will be displayed."}, "nonreaders": {"values": []}, "forum": "r1g7y2RqYX", "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "replyto": null, "content": {"comment": {"value-regex": "[\\S\\s]{1,5000}", "required": true, "order": 1, "description": "Your comment or reply (max 5000 characters)."}, "title": {"value-regex": ".{1,500}", "required": true, "order": 0, "description": "Brief summary of your comment."}}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1542311709072}}}, {"id": "rJxDdu4A37", "original": null, "number": 3, "cdate": 1541453935420, "ddate": null, "tcdate": 1541453935420, "tmdate": 1541533535224, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Official_Review", "content": {"title": "deep learning architecture for graph semi-supervised learning", "review": "This paper presents an interesting idea for the following task: given a graph and a subset of labelled nodes, infer the labels on the remaining nodes. Here the authors will make prediction for absent labels based on local averages on the graph of the neighbouring soft labels. The main originality is that the local average is weighted and the weights are learnt. \n\nI had trouble understanding the details of the algorithm and the authors should be more careful in their description of the algorithm. Some points to clarify:\n- section 3.1, I am not sure to understand the 'dynamic weights'. The main point here seems to be the use of an attention mechanism (which does not vary in time) applied to inputs varying in time?\n- section 3.2, I do not understand equation (13). What is \\theta^\\tau, it does not appear in the right-hand term?\n\nI think that using the term time is misleading. Time might refer to epochs in an optimization process, whereas time in Section 3 seems to refer to a number of layers as described in equation (6).\n\nPlease, be more explicit on the use of raw features. How are the similarities described in appendix B incorporated in the loss?\n\nOverall, I think this paper requires a lot of clarification before being published.", "rating": "5: Marginally below acceptance threshold", "confidence": "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper"}, "signatures": ["ICLR.cc/2019/Conference/Paper972/AnonReviewer3"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Official_Review", "cdate": 1542234335350, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper972/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335844403, "tmdate": 1552335844403, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper972/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "SklckBGU3X", "original": null, "number": 1, "cdate": 1540920545857, "ddate": null, "tcdate": 1540920545857, "tmdate": 1541533534767, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Official_Review", "content": {"title": "Interesting idea, but heuristical.", "review": "Summary\nThis paper proposes label propagation network (LPN), a neural network to learn label prediction and similarity measure (weights) between data points simultaneously in semi-supervised setting. The proposed method simulates label propagation steps with the forward pass of LPN, enabling backpropagation through label propagation steps.\n\nStrong points\n- Learning both weights and label predictions in SSL seems to be novel (provided that the author's claim in the related work section is right).\n- Good performance.\n- The paper is generally well written.\n\nConcerns\n- Replacing the label propagation by forward pass of a neural network is an attractive idea, but because of that the convergence guarantee is lost.  As Figure 4 shows, LPN without bifurcation mechanism seems to suffer from convergence issue as the number of evaluation step grows. I guess that the algorithm may go wrong even with bifurcation mechanism for some data, for example if the bifurcation rate grows too fast/slow.\n- The original label propagation works with weights without entropy. Does introducing entropy term (e(h_i;theta)) is always helpful? For instance, if some data points erroneously get certain during initial iterations, the whole algorithm may fail.\n- The performance reported for GCN is quite different from what is presented in the GCN paper, and authors explain that this is due to the different experimental setting. For me the performance gap is quite significant to be originated from different experimental setting. Could you elaborate on this? Also, how many GCN layers were used?\n- Too many hyperparameters to tune.\n\nMinor points\n- I think the line above Eq (4) should be like \\tilde w_ij = w_ij / sum_k w_ik.\n- Eq (10) is quite misleading. The original weight w_ij should be symmetric (w_ij = w_ji), but this is not. Also, considering the intuition behind the label propagation, I think Eq (10) should be like alpha_ij(h_i, h_j) = exp(e(h_j) + d(h_i, h_j)), not e(h_i) as written the paper.\n- In the experiments setting, the authors calling their algorithm as DeepLP_alpha and DeepLP_phi. I guess these should be LPN_alpha and LPN_phi.\n", "rating": "6: Marginally above acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper972/AnonReviewer1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Official_Review", "cdate": 1542234335350, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper972/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335844403, "tmdate": 1552335844403, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper972/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "H1xSMZE_9Q", "original": null, "number": 4, "cdate": 1538961677197, "ddate": null, "tcdate": 1538961677197, "tmdate": 1538971676832, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "B1gZxggrcQ", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "content": {"comment": "Using k = 1% for the classical setting is not standard. You should have a careful look in [1, 2] and use the fraction values k in {10%, 20%, ..., 90%} to show the effectiveness of your model. Otherwise, you can report the results on the standard split to compare to other models.\n\n[1] DeepWalk: Online Learning of Social Representations. Perozzi et al. (2014).\n[2] node2vec: Scalable Feature Learning for Networks. Grover & Leskovec (2016)", "title": "Should use the fraction values k in {10%, 20%, ..., 90%}, not using  k = 1%"}, "signatures": ["(anonymous)"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"], "writers": ["(anonymous)", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1542311709072, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values-regex": "~.*|\\(anonymous\\)", "description": "How your identity will be displayed."}, "nonreaders": {"values": []}, "forum": "r1g7y2RqYX", "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "replyto": null, "content": {"comment": {"value-regex": "[\\S\\s]{1,5000}", "required": true, "order": 1, "description": "Your comment or reply (max 5000 characters)."}, "title": {"value-regex": ".{1,500}", "required": true, "order": 0, "description": "Brief summary of your comment."}}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1542311709072}}}, {"id": "Byguq2Sw5Q", "original": null, "number": 3, "cdate": 1538903184361, "ddate": null, "tcdate": 1538903184361, "tmdate": 1538903184361, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "content": {"comment": "Interesting paper! I have three main issues/questions. \n\nFirst, it seems you are not using a standard split on Cora and Pubmed datasets - what is the reason? Could you please better explain in which settings your algorithm works well and in which it does not? (i.e. how sparse should the set of known nodes could be?) Using a common split makes it much easier to compare to other methods. \n\nSecond, I am surprised you do not cite or compare to some \"standard\" graph CNN architectures (you can find a comprehensive review in [8]), such as spectral graph CNNs [1] (a seminal work of Bruna et al. that started the recent interest in this field), spectrum-free methods with polynomial [2] and rational [3] filters or their more recent variations with graph motifs [4]. Alongside with GAT and MoNet, you may want to look into architectures using graph shift operators[6], generalized attention mechanism on dual graphs [5], and dynamic graph update [7]. In particular, [5-6] are state-of-the-art on standard Cora split. \n    \nThird, please note that [5] and [7] allow to learn the graph weights ([5] by performing convolutions on the dual graph, and [6] by updating the graph between layers). Also, in [9], in the context of geometric matrix completion, a learnable diffusion of score values (akin to \"label propagation\" in this context) was used. Perhaps you might want to rephrase some of the novelty statements in your introduction, or at least place them better in the context of prior works. \n\n\n1. Spectral Networks and Locally Connected Networks on Graphs, arXiv:1312.6203.\n\n2. Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering, arXiv:1606.09375\n\n3. CayleyNets: Graph convolutional neural networks with complex rational spectral filters\", arXiv:1705.07664\n      \n4. MotifNet: a motif-based Graph Convolutional Network for directed graphs\", arXiv:1802.01572\n      \n5. Dual-Primal Graph Convolutional Networks, arXiv:1806.00770.\n\n6. ON GRAPH CONVOLUTION FOR GRAPH CNNS, DSW 2018\n\n7. Dynamic Graph CNN for learning on point clouds, arXiv:1712.00268       \n  \n8. Geometric deep learning: going beyond Euclidean data, IEEE Signal Processing Magazine, 34(4):18-42, 2017\n\n9. Geometric matrix completion with recurrent multi-graph neural networks, NIPS 2017\n", "title": "questions about baselines / evaluation"}, "signatures": ["~Michael_Bronstein1"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"], "writers": ["~Michael_Bronstein1", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1542311709072, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values-regex": "~.*|\\(anonymous\\)", "description": "How your identity will be displayed."}, "nonreaders": {"values": []}, "forum": "r1g7y2RqYX", "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "replyto": null, "content": {"comment": {"value-regex": "[\\S\\s]{1,5000}", "required": true, "order": 1, "description": "Your comment or reply (max 5000 characters)."}, "title": {"value-regex": ".{1,500}", "required": true, "order": 0, "description": "Brief summary of your comment."}}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1542311709072}}}, {"id": "B1gZxggrcQ", "original": null, "number": 1, "cdate": 1538748392833, "ddate": null, "tcdate": 1538748392833, "tmdate": 1538748392833, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "SJgzy2ogcm", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Official_Comment", "content": {"title": "Comment on experimental setting + EP paper", "comment": "Thank you for your constructive comments!\n\n1) Our experimental setting follows the classic graph-SSL evaluation scheme used in numerous works (*). The setting used in Yang et al. (2016) and in several other following papers is slightly different. The main difference lies in how data points are partitioned into train, validation, and test sets. In the classic setting, the labeled set is created by sampling k% of the data uniformly at random. The labeled set can then be used for training, validation, or any other usage deemed appropriate, and all other unlabeled points are used for evaluation. In contrast, Yang et al. (2016) uses three distinct sets: (a) a small, class-balanced train set, (b) a designated (and fairly large) validation set, and (c) a test set comprised of only a subset of the unlabeled points.\n\nAs recently pointed out in Oliver et al. (2018), SSL evaluation should be done with care. Based on the above (and other subtle differences), we believe the classic setting is better suited as an evaluation scheme for our paper.\n\n2) Thank you for pointing out the EP paper. We will add it to the related work discussed in the paper. Our approach is different from EP, since our focus is on propagating class labels (as opposed to graph labels that are the focus of EP), and as such the aggregation and non-linearities we employ are tailored for points on the simplex, and our training loss is discriminative. It is quite likely however that the two methods can be combined.\n\n(*) Notable examples include the SSL book Chapelle et al. (2006) and, among others, papers by Zhu et al. (2003); Zhou et al. (2004); Zhang & Lee (2007); Perozzi et al. (2014); Grover & Leskovec (2016); Tang et al. (2015); Monti et al. (2017).\n"}, "signatures": ["ICLR.cc/2019/Conference/Paper972/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621606327, "tddate": null, "super": null, "final": null, "reply": {"forum": "r1g7y2RqYX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper972/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper972/Authors|ICLR.cc/2019/Conference/Paper972/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621606327}}}, {"id": "HJgmkm6eqQ", "original": null, "number": 2, "cdate": 1538474714594, "ddate": null, "tcdate": 1538474714594, "tmdate": 1538520802842, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "SJgzy2ogcm", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "content": {"comment": "Hi Niepert, I read the paper \"Learning Graph Representations with Embedding Propagation\" introducing EP-B last year. I really like the EP-B paper and I would like to prefer it rather than GraphSAGE also published at NIPS 2017, because the EP-B paper has a very nice idea and a well-standard experimental setup for both the transductive and inductive settings that none of graph network-related ICLR submissions (that I have read) doing experiments on Cora/Citeseer/Pubmed cites the paper and follows the same setup. At this time, in my opinion, the *unsupervised* model EP-B is the best model obtaining state-of-the-art results in the transductive and inductive settings on the three datasets, even in comparison with semi-supervised models such as GAT and GCN.", "title": "I really like the EP-B paper"}, "signatures": ["(anonymous)"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"], "writers": ["(anonymous)", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1542311709072, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values-regex": "~.*|\\(anonymous\\)", "description": "How your identity will be displayed."}, "nonreaders": {"values": []}, "forum": "r1g7y2RqYX", "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "replyto": null, "content": {"comment": {"value-regex": "[\\S\\s]{1,5000}", "required": true, "order": 1, "description": "Your comment or reply (max 5000 characters)."}, "title": {"value-regex": ".{1,500}", "required": true, "order": 0, "description": "Brief summary of your comment."}}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1542311709072}}}, {"id": "SJgzy2ogcm", "original": null, "number": 1, "cdate": 1538468825764, "ddate": null, "tcdate": 1538468825764, "tmdate": 1538468825764, "tddate": null, "forum": "r1g7y2RqYX", "replyto": "r1g7y2RqYX", "invitation": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "content": {"comment": "I genuinely enjoyed reading your paper. There are two questions I'd be interested to get your answer for:\n\n(1) Why did you chose an experiment set-up for Cora/Citeseer/Pubmed that's different to the one of previous work? I understand that you rerun all the baselines. But it would still be helpful to have the results for the standard set-up for a more straight-forward comparison. \n\n(2) You might want to consider \"Learning Graph Representations with Embedding Propagation\" (EP; self plug) as related work. It is a NIPS'17 paper that describes how label/feature embeddings can be propagated throughout the graph. It is possible with EP to propagate and learn class label embeddings. Please don't get me wrong. Your method is in several ways novel (as far as I can tell) but since you did not cite EP as related work, I thought I make you aware of it.\n\nThanks!", "title": "Good idea and paper"}, "signatures": ["~Mathias_Niepert1"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper972/Reviewers/Unsubmitted"], "writers": ["~Mathias_Niepert1", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Label Propagation Networks", "abstract": "Graph networks have recently attracted considerable interest, and in particular in the context of semi-supervised learning. These methods typically work by generating node representations that are propagated throughout a given weighted graph.\n\nHere we argue that for semi-supervised learning, it is more natural to consider propagating labels in the graph instead. Towards this end, we propose a differentiable neural version of the classic Label Propagation (LP) algorithm. This formulation can be used for learning edge weights, unlike other methods where weights are set heuristically. Starting from a layer implementing a single iteration of LP, we proceed by adding several important non-linear steps that significantly enhance the label-propagating mechanism.\n\nExperiments in two distinct settings demonstrate the utility of our approach.\n", "keywords": ["semi supervised learning", "graph networks", "deep learning architectures"], "authorids": ["kojinoshiba@college.harvard.edu", "nirr@g.harvard.edu", "amir.globerson@gmail.com"], "authors": ["Kojin Oshiba", "Nir Rosenfeld", "Amir Globerson"], "TL;DR": "Neural net for graph-based semi-supervised learning; revisits the classics and propagates *labels* rather than feature representations", "pdf": "/pdf/a7bafdf3512692ceab6019e7726bb9d71f917e4c.pdf", "paperhash": "oshiba|label_propagation_networks", "_bibtex": "@misc{\noshiba2019label,\ntitle={Label Propagation Networks},\nauthor={Kojin Oshiba and Nir Rosenfeld and Amir Globerson},\nyear={2019},\nurl={https://openreview.net/forum?id=r1g7y2RqYX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper972/Public_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1542311709072, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values-regex": "~.*|\\(anonymous\\)", "description": "How your identity will be displayed."}, "nonreaders": {"values": []}, "forum": "r1g7y2RqYX", "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "replyto": null, "content": {"comment": {"value-regex": "[\\S\\s]{1,5000}", "required": true, "order": 1, "description": "Your comment or reply (max 5000 characters)."}, "title": {"value-regex": ".{1,500}", "required": true, "order": 0, "description": "Brief summary of your comment."}}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": ["ICLR.cc/2019/Conference/Paper972/Authors", "ICLR.cc/2019/Conference/Paper972/Reviewers", "ICLR.cc/2019/Conference/Paper972/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1542311709072}}}], "count": 14}