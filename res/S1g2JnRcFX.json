{"notes": [{"id": "S1g2JnRcFX", "original": "S1gyc_25Fm", "number": 1023, "cdate": 1538087908371, "ddate": null, "tcdate": 1538087908371, "tmdate": 1556887372564, "tddate": null, "forum": "S1g2JnRcFX", "replyto": null, "invitation": "ICLR.cc/2019/Conference/-/Blind_Submission", "content": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 11, "writable": false, "overwriting": [], "revisions": true, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Blind_Submission", "rdate": null, "ddate": null, "expdate": null, "duedate": 1538085600000, "tmdate": 1538142958393, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values": ["ICLR.cc/2019/Conference"]}, "forum": null, "readers": {"values": ["everyone"]}, "replyto": null, "content": {"authorids": {"values-regex": ".*"}, "authors": {"values": ["Anonymous"]}}, "writers": {"values": ["ICLR.cc/2019/Conference"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": null, "taskCompletionCount": null, "transform": null, "cdate": 1538142958393}}, "tauthor": "OpenReview.net"}, {"id": "Ske9ifBkl4", "original": null, "number": 1, "cdate": 1544667810019, "ddate": null, "tcdate": 1544667810019, "tmdate": 1545354505330, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Meta_Review", "content": {"metareview": "This paper analyzes local SGD optimization for strongly convex functions, and proves that local SGD enjoys a linear speedup (in the number of workers and minibatch size) over vanilla SGD, while also communicating less than distributed mini-batch SGD. A similar analysis is also provided for the asynchronous case, and limited empirical confirmation of the theory is provided. The main weakness of the current revision is that it does not yet properly relate this work to two prior publications: Dekel et al., 2012 (https://arxiv.org/pdf/1012.1367.pdf) and Jain et al., 2016 (https://arxiv.org/abs/1610.03774). It is critical that these references and suitable discussion be added in the camera-ready paper, since this issue was the subject of considerable discussion and the authors promised to include the references and discussion in the final paper.", "confidence": "4: The area chair is confident but not absolutely certain", "recommendation": "Accept (Poster)", "title": "Good analysis of local SGD, but still needs discussion of closely related prior work"}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/Area_Chair1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference/Paper1023/Area_Chair1"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Meta_Review", "rdate": null, "ddate": null, "expdate": null, "duedate": 1541548800000, "tmdate": 1545352994575, "tddate": null, "super": null, "final": null, "reply": {"forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "readers": {"description": "Select all user groups that should be able to read this comment. Selecting 'All Users' will allow paper authors, reviewers, area chairs, and program chairs to view this comment.", "values": ["everyone"]}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper1023/Area_Chair[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values-regex": "ICLR.cc/2019/Conference/Paper1023/Area_Chair[0-9]+"}, "content": {"title": {"order": 1, "value-regex": ".{1,500}", "description": "Brief summary of your review.", "required": true}, "metareview": {"order": 2, "value-regex": "[\\S\\s]{1,5000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.", "required": true}, "recommendation": {"order": 3, "value-dropdown": ["Accept (Oral)", "Accept (Poster)", "Reject"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The area chair is absolutely certain", "4: The area chair is confident but not absolutely certain", "3: The area chair is somewhat confident", "2: The area chair is not sure", "1: The area chair's evaluation is an educated guess"], "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Area_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": false, "taskCompletionCount": null, "transform": null, "cdate": 1545352994575}}}, {"id": "ByxMDz1fk4", "original": null, "number": 8, "cdate": 1543791194499, "ddate": null, "tcdate": 1543791194499, "tmdate": 1543791194499, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "r1xRplIR0X", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "content": {"title": "We will address these concerns in the revision", "comment": "Please excuse our negligence of not having included these references in the current revision. We agree that both algorithms work at \u201cthe end of the local SGD spectrum\u201d (H=1 for mini-batch SGD (Deckel et al.), and H=T for the model averaging discussed in (Jain et al.)) and thus merit discussion. \n\nWe will certainly address the concerns (a) [bounded gradient assumption] and (b) [future work]. We agree that future work must deepen the understanding of local SGD further. An important direction could be development of tighter bounds, of the same flavor than the ones that were obtained for the algorithms discussed in (Jain et al.), i.e. considering also bias and variance at different stages of the optimization process.\n\nHowever, as acknowledged by the reviewer, (Jain et al.) consider a less general function class (quadratic functions) and algorithms which are in general different from local SGD (in case H<T). Thus, we don\u2019t see why we should mention (as suggested in [1](a)) that our results are \u201cweaker\u201d than the results in (Jain et al.). Perhaps the reviewer meant the limitations of the bounded gradient assumption? We will include a discussion of this point as indicated above (addressing (a))."}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621613458, "tddate": null, "super": null, "final": null, "reply": {"forum": "S1g2JnRcFX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1023/Authors|ICLR.cc/2019/Conference/Paper1023/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621613458}}}, {"id": "r1xRplIR0X", "original": null, "number": 7, "cdate": 1543557317563, "ddate": null, "tcdate": 1543557317563, "tmdate": 1543557351774, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "Sklci2Dg07", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "content": {"title": "Response", "comment": "Thank you for the clarifications. \n\nIn a sense, the works of Dekel et al , Jain et al are highly relevant references for various reasons (below) that are missed in the latest version of the paper. In particular,\n\n[1] Note that:\n\n(a) this paper's result on local SGD is a weaker upperbound relying on the bounded variance of stochastic gradients assumption (which means that iterates lie in compact set necessitating projections of iterates and so on and so forth - this doesn't reflect practice where projections of SGD's iterates are rarely carried out). \n\n(b) As acknowledged by the authors, note that the work of Dekel et al. (2012) is related to this effort because they presents (potentially the first to the best of my knowledge) analysis of mini-batch SGD, which is one of the ends of the local SGD framework. The work of Dekel et al (2012) also encourages future work (specifically for relative newcomers in the area) by mentioning certain weaknesses in their results.\n\n\n[2] Again, despite working for the least squares case, Jain et al (2016)'s work is highly relevant to this work because:\n(a) they present highly precise results that cover two ends of the local SGD spectrum - mini-batching and model averaging. They also consider batch-size doubling, which indicates that more machines are used at latter stages of the optimization when variance>> bias.\n(b) as acknowledged by the authors, Jain et al (2016) work with significantly weaker assumptions than this paper. In particular, Jain et al rely on fourth moment properties of the input, do not require bounded variance assumption and present bounds applicable on a per-problem basis. \n(c) Jain et al present precise results on the degree of parallelization permitted at different points of time in the optimization - i.e. both when bias >> variance and variance >> bias. In particular, in addition to the situation when variance dominates bias, the results of Jain et al indicate that the bias is not hurt (at the start of optimization) through mini-batching if the batch size is set appropriately (instead of being set to some arbitrarily large value).\n\nI would be willing to know if the authors have any issues with the points relating these works to their paper of local SGD. If not, I would suggest that the authors refer to these papers and write out limitations with their bounds and refer to the strength of certain results (for specific cases). This is to ensure that (a) there are two ways to analyze SGD and related methods (i.e. with/without bounded variance assumptions), and (b) there is future work needed to close the gap with regards to offering a precise analysis of local SGD's precise behavior. "}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/AnonReviewer3"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1023/AnonReviewer3", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621613458, "tddate": null, "super": null, "final": null, "reply": {"forum": "S1g2JnRcFX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1023/Authors|ICLR.cc/2019/Conference/Paper1023/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621613458}}}, {"id": "H1ed8V0TA7", "original": null, "number": 6, "cdate": 1543525455636, "ddate": null, "tcdate": 1543525455636, "tmdate": 1543525455636, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "r1ePa5DeR7", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "content": {"title": "Re: Response", "comment": "Thank you for your reply. I see no issue with the analysis failing to account for large $H$, it obviously would be nice if it could but alas it does not.\n\nI think that this is a well-written paper with an interesting, novel contribution to parallel optimization, and I stand by my opinion that the paper should be accepted to ICLR."}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/AnonReviewer1"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1023/AnonReviewer1", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621613458, "tddate": null, "super": null, "final": null, "reply": {"forum": "S1g2JnRcFX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1023/Authors|ICLR.cc/2019/Conference/Paper1023/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621613458}}}, {"id": "Sklci2Dg07", "original": null, "number": 3, "cdate": 1542646946450, "ddate": null, "tcdate": 1542646946450, "tmdate": 1542646946450, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "Byl1lBwchX", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "content": {"title": "Response to Reviewer 3 - our result captures the bias/variance tradeoff; but we will be more precise with the simplified statements in the introduction", "comment": "Dear Reviewer. We thank you for your time and effort that you invested into reviewing our manuscript and your thoughtful comments. We hope that our answers will settle your concerns.\n\n1) We agree with the reviewer on this comment. The bounds on H derived here have a somewhat theoretical flavor, like the asymptotic bounds derived in (Dekel et al., 2012). Our results show that H=O(sqrt(T)) is asymptotically optimal, however, as the \u201cO\u201d notation hides (problem specific) constants, this might not be the best choice for practical purposes, similar as discussed for the batch size in (Dekel et al., 2012).\n\n2) We like to note a few fundamental differences from (Jain et al, 2016, https://arxiv.org/pdf/1610.03774v4.pdf ). \n(Jain et al. 2016) consider the stochastic approximation problem of Least Squares Regression, under strong convexity and bounded fourth moment assumption (we consider general strongly convex functions, but with more restrictive bounded second moment assumption). They provide analysis for SGD with constant stepsize (we consider decreasing stepsizes) for mini-batch SGD and SGD with tail-averaging. Theorem 6 discusses the averaging of *independent* runs of SGD with tail averaging, however the averaging only happens at the end (i.e. H=T, one-shot averaging). In local SGD the sequences are averaged more often, and after averaging, the sequences become correlated. This algorithm is not addressed in (Jain et al.).\n\n (Jain et al.) show that averaging the solutions of multiple independent runs of SGD does not help when the bias (initial error) dominates the variance. Besides the already stated differences of the algorithm in (Jain et al.) and local SGD, we like to remark that a similar observation can be made in our case: In Corollary 2.3 only the variance terms enjoy a linear speedup, whereas the bias terms do not. We will add a remark on this observation and will be more careful when stating the results (see also 4) below).\n\n3) (Coppola, 2015) show that Iterative Parameter Mixing (IPM) converges, but no speedup from parallelization has been shown (cf. pg. 94, Coppola, 2015, \u201cIn fact, a O(M) penalty is occurred\u201d, where M=H in our notation). We like to thank the reviewer for pointing us to this reference, and to IPM in general (McDonald et al. (2010)). We will update the related work section with those appearances of \u201clocal SGD\u201d in the literature.\n\n4) We agree with the reviewer, that \u201cone can increase the batch size [\u2026] to improve the computation versus communication tradeoff\u201d is an imprecise statement and does only hold when increasing the batch size gives faster convergence (i.e. when variance dominates the bias). When we claim \u201cone can increase the batch size or increase communication interval [\u2026] to improve the computation versus communication tradeoff\u201d we mean the following:\n\nClearly, [Increasing the batch size/decreasing the communication frequency] results in less communication *per iteration*. However, both strategies can also *reduce the total communication* when the variance dominates the bias term (cf. the Theorem, and Corollary 2.3). This was known for mini-batch SGD, and we prove this fact for local SGD in this paper. We will clarify the statement on page 2."}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621613458, "tddate": null, "super": null, "final": null, "reply": {"forum": "S1g2JnRcFX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1023/Authors|ICLR.cc/2019/Conference/Paper1023/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621613458}}}, {"id": "S1gTViwlRQ", "original": null, "number": 2, "cdate": 1542646580796, "ddate": null, "tcdate": 1542646580796, "tmdate": 1542646580796, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "HkxcmSCa2m", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "content": {"title": "Response to Reviewer 2 - we did not consider gradient diversity as we provide data-independent bounds", "comment": "Dear Reviewer. We thank you for your time and effort that you invested into reviewing our manuscript and your favorable assessment of our work. Thanks for pointing us to (Yin et al.), we will add short remark on gradient diversity in the revision (see answer to 1)). We think that decreasing the communication frequency in local SGD is especially helpful (to save communication), when the alternative strategy of increasing the batch size does not give a linear speedup (due to low gradient diversity).\n\nConcerning your minor comments:\n1) Let us consider mini-batch SGD as an example: a *data-independent* worst case analysis, assuming just a bound on the variance on each sample of the stochastic gradient, predicts a linear speed up with respect to batch size. However, in practice, the variance of a single sample (or a batch) could be much lower than predicted by these bounds. Gradient diversity is a *data-dependent\u201d quantity that measures this discrepancy and explains why mini-batch SGD does only enjoy linear speedup for small batch sizes for if the gradient diversity is small (Yin et al.).\n\nOur analysis is *data-independent*, that is why gradient diversity does not appear in our bounds. However, we note that the variance term explicitly appears in our Theorem and allows to extract more fine-grained results for special cases. For instance, the special case mentioned by the reviewer (all functions identical, so no speed-up possible), implies \\sigma = 0, and Corollary 2.3 shows convergence at rate 1/T^2 (which is better than 1/T for the general case). However, for this example a rate of e^(-T) could be obtained with a *constant* stepsize. Our proof only covers decreasing stepsize, thus the suboptimal result is expected.\n\n2) All experiments are conducted for the synchronous versions of the algorithm, for more details on the protocol see also Section D. Besides the randomness used to pick the stochastic gradients for each thread/local sequence, the aggregation of the local sequences after H steps is deterministic. Thus, we (as stated) simulate the number of workers by running the corresponding threads in sequence. This does not change the output of the algorithm. We will make this more precise. Figure 1 shows the theoretical expected behavior, Figure 3 the measured behavior.\n"}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621613458, "tddate": null, "super": null, "final": null, "reply": {"forum": "S1g2JnRcFX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1023/Authors|ICLR.cc/2019/Conference/Paper1023/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621613458}}}, {"id": "r1ePa5DeR7", "original": null, "number": 1, "cdate": 1542646463119, "ddate": null, "tcdate": 1542646463119, "tmdate": 1542646463119, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "BJeqkEXq3m", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "content": {"title": "Response to Reviewer 1 - recovering the rates for one-shot averaging requires modifications to the proof", "comment": "Dear Reviewer. We thank you for your time and effort that you invested into reviewing our manuscript and your favorable assessment of our work.\n\nIndeed, when H -> T, we do not recover the results for one shot averaging. In our proof we leverage the fact that less frequent averaging does not hurt the convergence as long as the local sequences are close (Lemma 3.3). However, when H=T, then Lemma 3.3 is not tight enough. Perhaps it is possible to trade-off the error introduced in Lemma 3.3 for a slower rate (e.g. only sublinear speed up), but right now we do not see how this could be achieved without significant changes to the proof."}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621613458, "tddate": null, "super": null, "final": null, "reply": {"forum": "S1g2JnRcFX", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1023/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1023/Authors|ICLR.cc/2019/Conference/Paper1023/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621613458}}}, {"id": "SJxvQJ4WT7", "original": null, "number": 1, "cdate": 1541648159240, "ddate": null, "tcdate": 1541648159240, "tmdate": 1541648159240, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Public_Comment", "content": {"comment": "Since you are talking about local SGD, or model averaging, these two papers should be cited:\n\"Improving deep neural network acoustic models using generalized maxout networks\" The training method in this paper is exactly same with Local SGD\n\nand this paper\n\"Scalable Training of Deep Learning Machines by Incremental Block Training with Intra-block Parallel Optimization and Blockwise Model-Update Filtering\" This paper propose to build connections between successive synchronizations of \"local sgd\"\n\n\n\n\n", "title": "Several References are missed"}, "signatures": ["(anonymous)"], "readers": ["everyone"], "nonreaders": [], "writers": ["(anonymous)", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Public_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1542311696957, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values-regex": "~.*|\\(anonymous\\)", "description": "How your identity will be displayed."}, "nonreaders": {"values": []}, "forum": "S1g2JnRcFX", "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "replyto": null, "content": {"comment": {"value-regex": "[\\S\\s]{1,5000}", "required": true, "order": 1, "description": "Your comment or reply (max 5000 characters)."}, "title": {"value-regex": ".{1,500}", "required": true, "order": 0, "description": "Brief summary of your comment."}}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": ["ICLR.cc/2019/Conference/Paper1023/Authors", "ICLR.cc/2019/Conference/Paper1023/Reviewers", "ICLR.cc/2019/Conference/Paper1023/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1542311696957}}}, {"id": "HkxcmSCa2m", "original": null, "number": 3, "cdate": 1541428514114, "ddate": null, "tcdate": 1541428514114, "tmdate": 1541533487980, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Review", "content": {"title": "A convergence proof for local SGD is provided. Local SGD (averaging local SGD models, once in a while) can provably provide the same speedup gains as minibatch, but may be able to communicate significantly less.", "review": "The authors of this paper analyze a well known technique for parallel training, where each compute node locally trains a model with SGD, and once in a while the K compute nodes average their models. Local SGD, although not as widely used as mini-batch SGD, can provide some gains in terms of the cost of communication. This can be achieved by decreasing the frequency of synchronization, while locally also increasing the minibatch. \n\nTo the best of my knowledge, the authors are the first to provide a complete theoretical analysis of local SGD for strongly convex functions. They prove that under strong convexity, and the bounded gradients assumption, local SGD will (in the worst case) achieve a linear speedup over vanilla SGD, as long as the parallel models are averaged frequently enough. They show that although frequent averaging is important for speedup, the overall communication cost can be lower than minibatch SGD that may require smaller batches and hence more frequent communication. \n\nThe authors extend their results to the asynchronous case, where a similar convergence bound is derived. The overall theory seems to be partly inspired by the perturbed iterates framework of Mania et al., however the application is novel and interesting.\n\nThe authors include some limited experimental results that validate their bounds.\n\nThis is a well-written paper, that will certainly be of interest to researchers working on stochastic optimization, and distributed learning. The results are interesting and clearly stated. The proofs seem complete and correct, and are easy to follow. \n\nI have two minor comments:\n1) In a recent paper, Dong et al. [1] suggest that for any problem (convex or nonconvex), the largest possible batch size in minibatch SGD that allows for linear speedups will be proportional to \u201cgradient diversity\u201d, i.e., a measure of similarity between the concurrently processed gradients. For example, when all gradient are identical, there is no speedup to be extracted. This diversity term does not seem to appear in the main theorem, as one may expect. For example, the presented bounds still seem to provide speedup gains for the case where all individual n functions are identical (eg minimum grad. diversity). This should not be possible, as there are no parallel speedups to be extracted in this case. I\u2019m wondering how that fact is reflected in the presented bounds (maybe it\u2019s one of the extreme parameter cases that are not covered by the main theorem).\n\n2) The authors do not provide details of their experimental setup. For example it would be useful to know what hardware they implemented their algorithms on. It seems that they run experiments for up to 1K workers. Are these individual cores, or was this the result of hyper-threading? Finally, it\u2019s unclear if Fig 1 is a theoretical, or an experimental curve.\n\n\n\n[1] http://proceedings.mlr.press/v84/yin18a/yin18a.pdf\n", "rating": "8: Top 50% of accepted papers, clear accept", "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/AnonReviewer2"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Review", "cdate": 1542234323706, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335855812, "tmdate": 1552335855812, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "Byl1lBwchX", "original": null, "number": 2, "cdate": 1541203174943, "ddate": null, "tcdate": 1541203174943, "tmdate": 1541533487728, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Review", "content": {"title": "Interesting direction", "review": "This paper presents an analysis of \"local SGD\", which averages estimators obtained by running SGD in separate machines once in a while. The paper presents bounds on \"how frequent\" the estimators required to be averaged in order to yield linear parallelization speedups. This is an interesting paper, but I have some concerns that I will elaborate on below:\n\n[1] This paper's assumption of bounded variance of Stochastic Gradients and drawing conclusions about frequency of averaging does not reflect practical implementations of SGD for Machine Learning contexts. For example, note that in this oracle model, there exists bound on batch size (T^alpha, alpha\\in[1/3,1/2]) that yield linear parallelization speedups (for example, see Dekel et al. (2012)); however, as Dekel et al (2012) note, such bounds are fairly crude estimates on a per-problem basis for practical purposes. These issues naturally continue to exist with regards to the upperbound on the frequency of communication as argued by this paper. \n\n[2] Furthermore, the claim that such a bound on frequency of communication for local SGD which is not known before is not really true. In the convex case, the paper of Jain et al. (2016) presents a precise characterization of when to average of iterates across machines to obtain linear parallelization speedups, and this is a problem dependent quantity that works without assumptions such as bounded variance of stochastic gradients for the least squares problem. Note that, as reflective in practice, this result conveys that averaging the solutions of multiple independent runs of SGD does not help anything when the bias (initial error) dominates the variance. \n\n[3] Note that local SGD has been known for a while and is referred to as Iterative Parameter Mixing in the literature. An example of this is the thesis of Greg Coppola (2015). A more careful literature search can provide more references/results on this topic.\n\n[4] This paper claims that (in page 2) in order to \"improve computation versus communication tradeoff, one can increase the batch size or increase communication interval\". This appears to be an imprecise statement. For example, if I kept increasing batchsize without any limit, and the bias in my problem is much larger than the variance (where bias and variance follows definitions from Bach and Moulines (2011,2013)), this does not lead to any parallelization speedup. This is in contrast to when the variance dominates the bias, wherein, model averaging/increasing batch size helps. What is the reason for the authors to conclude that increasing batch size is equivalent to increasing communication interval?", "rating": "5: Marginally below acceptance threshold", "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/AnonReviewer3"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Review", "cdate": 1542234323706, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335855812, "tmdate": 1552335855812, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "BJeqkEXq3m", "original": null, "number": 1, "cdate": 1541186530498, "ddate": null, "tcdate": 1541186530498, "tmdate": 1541533487523, "tddate": null, "forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "invitation": "ICLR.cc/2019/Conference/-/Paper1023/Official_Review", "content": {"title": "Review: Local SGD converges fast and communicates little", "review": "The authors analyze the local SGD algorithm, where $K$ parallel chains of SGD are run, and the iterates are occasionally synchronized across machines by averaging. For sufficiently short intervals between synchronization, the algorithm achieves the same convergence rate in terms of the number of gradient evaluations as parallel minibatch SGD, but with the advantage that communication can be significantly reduced.\n\nThe algorithm is simple and practical, and the analysis is concise and seems like it could be applicable more generally to other parallel SGD variants.\n\nI am curious about what happens for the analysis of the algorithm when $H$ becomes large. As the authors point out, when $H=T$, this is one-shot averaging which is known to converge. The authors mention not working too hard to optimize the bounds for extreme values of $H$, which is fine, but I wonder if this is possible using their analysis technique, or whether new tools would be necessary.", "rating": "8: Top 50% of accepted papers, clear accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper1023/AnonReviewer1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Local SGD Converges Fast and Communicates Little", "abstract": "Mini-batch stochastic gradient descent (SGD) is state of the art in large scale distributed training. The scheme can reach a linear speed-up with respect to the number of workers, but this is rarely seen in practice as the scheme often suffers from large network delays and bandwidth limits. To overcome this communication bottleneck recent works propose to reduce the communication frequency. An algorithm of this type is local SGD that runs SGD independently in parallel on different workers and averages the sequences only once in a while. This scheme shows promising results in practice, but eluded thorough theoretical analysis.\n    \nWe prove concise convergence rates for local SGD on convex problems and show that it converges at the same rate as mini-batch SGD in terms of number of evaluated gradients, that is, the scheme achieves linear speed-up in the number of workers and mini-batch size. The number of  communication rounds can be reduced up to a factor of T^{1/2}---where T denotes the number of total steps---compared to mini-batch SGD. This also holds for asynchronous implementations.\n\nLocal SGD can also be used for large scale training of deep learning models. The results shown here aim serving as a guideline to further explore the theoretical and practical aspects of local SGD in these applications.", "keywords": ["optimization", "communication", "theory", "stochastic gradient descent", "SGD", "mini-batch", "local SGD", "parallel restart SGD", "distributed training"], "authorids": ["sebastian.stich@epfl.ch"], "authors": ["Sebastian U. Stich"], "TL;DR": "We prove that parallel local SGD achieves linear speedup with much lesser communication than parallel mini-batch SGD.", "pdf": "/pdf/def5d1cad02cd98a56c0bfc930632d8a901fee8c.pdf", "paperhash": "stich|local_sgd_converges_fast_and_communicates_little", "_bibtex": "@inproceedings{\nstich2018local,\ntitle={Local {SGD} Converges Fast and Communicates Little},\nauthor={Sebastian U. Stich},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=S1g2JnRcFX},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1023/Official_Review", "cdate": 1542234323706, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "S1g2JnRcFX", "replyto": "S1g2JnRcFX", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper1023/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335855812, "tmdate": 1552335855812, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper1023/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}], "count": 12}