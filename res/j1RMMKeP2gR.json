{"notes": [{"id": "j1RMMKeP2gR", "original": "F8f0CbtvElB", "number": 1615, "cdate": 1601308179028, "ddate": null, "tcdate": 1601308179028, "tmdate": 1616054953381, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": null, "invitation": "ICLR.cc/2021/Conference/-/Blind_Submission", "content": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "signatures": ["ICLR.cc/2021/Conference"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference"], "details": {"replyCount": 11, "writable": false, "overwriting": [], "revisions": true, "tags": [], "invitation": {"reply": {"readers": {"values-regex": ".*"}, "writers": {"values": ["ICLR.cc/2021/Conference"]}, "signatures": {"values": ["ICLR.cc/2021/Conference"]}, "content": {"authors": {"values": ["Anonymous"]}, "authorids": {"values-regex": ".*"}, "reviewed_version_(pdf)": {"required": false, "description": "Upload a PDF file that ends with .pdf", "value-regex": ".*"}}}, "signatures": ["ICLR.cc/2021/Conference"], "readers": ["everyone"], "writers": ["ICLR.cc/2021/Conference"], "invitees": ["~", "OpenReview.net/Support"], "tcdate": 1601308008205, "tmdate": 1614984599368, "id": "ICLR.cc/2021/Conference/-/Blind_Submission"}}, "tauthor": "OpenReview.net"}, {"id": "XPHEX9KcBQC", "original": null, "number": 1, "cdate": 1610040351161, "ddate": null, "tcdate": 1610040351161, "tmdate": 1610473940126, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Decision", "content": {"title": "Final Decision", "decision": "Accept (Poster)", "comment": "The paper analyzes MDPs with execution delays. Interesting theoretical results and experiments are provided, which show the benefits of the proposed algorithms. However, some issues are highlighted in the reviews, such as the lack of theoretical analysis of the proposed delayed Q-learning method, and the simplicity of the experiments. The latter is at least partially addressed by the authors in the rebuttal, and the new experiments should be incorporated in the final paper. \n"}, "signatures": ["ICLR.cc/2021/Conference/Program_Chairs"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference/Program_Chairs"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "readers": {"values": ["everyone"]}, "writers": {"values": ["ICLR.cc/2021/Conference/Program_Chairs"]}, "signatures": {"values": ["ICLR.cc/2021/Conference/Program_Chairs"]}, "content": {"title": {"value": "Final Decision"}, "decision": {"value-radio": ["Accept (Oral)", "Accept (Spotlight)", "Accept (Poster)", "Reject"]}, "comment": {"value-regex": "[\\S\\s]{0,50000}", "markdown": true}}}, "multiReply": false, "signatures": ["ICLR.cc/2021/Conference"], "readers": ["everyone"], "writers": ["ICLR.cc/2021/Conference"], "invitees": ["ICLR.cc/2021/Conference/Program_Chairs"], "tcdate": 1610040351144, "tmdate": 1610473940107, "id": "ICLR.cc/2021/Conference/Paper1615/-/Decision"}}}, {"id": "AlPR4TZrPmE", "original": null, "number": 2, "cdate": 1603850893722, "ddate": null, "tcdate": 1603850893722, "tmdate": 1606790330662, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Review", "content": {"title": "A learning-based approach to solving MDPs with control or observation delays", "review": "This paper reminds us of the problem of delayed interaction (in control or observation) with MDPs, provides two theoretical formulations of the problem, and then a deep RL-based approach. \n\nThis is an interesting problem that has not been much talked about in the recent literature as far as I know.  It seems plausible that it would come up in real situations although the paper only shows us artificially delayed versions of artificial problems.  The paper would be much stronger if it were to address some real applications (in which, for example, we could see whether the approximate predictive model works well enough).\n\nThe theoretical analysis of the augmentation approach seems reasonable (but I did not check the math).  However, since the m-AMDP is another MDP, could we not just use existing computation-time analysis of PI (or VI or LP-solving) applied to the m-AMDP?  Or, if this bound is smaller (because it's taking advantage of special structure in the mAMDP), that's cool, and it should be clearly pointed out.\n\nI wasn't quite clear on the contribution of the execution-delay MDP formulation.  It was interesting, but didn't seem to lead to any new algorithmic approaches (and in fact seems to present some substantial algorithmic challenges) and it isn't obvious to me what makes it better than the augmented formulation.   If it was intended to be a lead-in to Delayed-Q, then I didn't quite see the connection and it would be good to make it clearer.\n\nThe delayed-Q algorithm seems sensible.   I didn't understand the phrase \"this method relies on the environment not being entirely stochastic\".   Perhaps this is an allusion to the fact that it's using a determinized \"point\" prediction of the next state?  Although the paper makes it clear that this is an approximation, it would have been nice to have a concrete example of a kind of MDP where this is a particularly poor strategy (e.g., returning an \"average\" next state, which is actually impossible).\n\nAs I understand it, the delayed-Q method is relatively similar to MBS: more efficient (because it doesn't consider multiple state sequences), but potentially less accurate.\n\nIn summary, I would say the main algorithm is reasonable but perhaps not highly novel, and that the theoretical work in sections 4 and 5 does not seem to make a substantial contribution.  I think a promising direction would be to push toward some real application domains and let their demands drive the architectural and algorithmic improvements you need to address them.\n\n=== Update ===\nThe arguments in the rebuttal clarify some confusions I had and illuminate the contributions of the paper further.   I am now completely on the fence about acceptance, but will tip toward positive.", "rating": "6: Marginally above acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/AnonReviewer3"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/AnonReviewer3"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq . ***Please remember to file the Code-of-Ethics report. Once you submitted the review, a link to the report will be visible in the bottom right corner of your review.***", "required": true, "markdown": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "readers": {"description": "Select all user groups that should be able to read this comment.", "values": ["everyone"]}, "nonreaders": {"values": []}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"], "description": "How your identity will be displayed."}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}}, "expdate": 1607428800000, "duedate": 1606752000000, "multiReply": false, "readers": ["everyone"], "tcdate": 1602538114676, "tmdate": 1606915758692, "super": "ICLR.cc/2021/Conference/-/Official_Review", "signatures": ["OpenReview.net"], "writers": ["ICLR.cc/2021/Conference"], "invitees": ["ICLR.cc/2021/Conference/Paper1615/Reviewers", "OpenReview.net/Support"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Review"}}}, {"id": "blqFn7X2xs7", "original": null, "number": 3, "cdate": 1604112027375, "ddate": null, "tcdate": 1604112027375, "tmdate": 1606758050087, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Review", "content": {"title": "well-motivated study", "review": "This paper investigated the problem of learning agents when there are execution delays. The authors (i) used a two-state MDP example to show some equivalence between execution delay and stochasticity of transitions; (ii) analyzed the action aggregation method, which cumulated all the history and then made decisions. They show a classic Policy Iteration (PI) method with the aggregation, unfortunately, has its iteration complexity exponentially depending on the delay time $m > 0$; (iii) formulated the Execution-Delay (ED)-MDP and showed that there exists a non-stationary Markov policy which attains optimal value, while any stationary policies will have suboptimal performance; (iv) proposed a model-based Q-learning method, delayed-Q, which used the predicted future state-action sequence to make decisions; (v) did experiments on Maze, CartPole, Acrobot and Atari tasks to verify the proposed delayed-Q method.\n\nPros:\n1. The execution delay seems to be an important problem in practice. The motivation is convincing.\n2. The theoretical study is fairly strong and insightful.\n3. The experiments show that the proposed method promisingly works well.\n\nQuestions:\n1. The equivalence between execution delay and stochasticity of transitions is interesting. If we use usual assumptions (immediate action execution, and stochastic transitions), does this observation implies inherently there is still something equivalent to \"execution delay\"?\n2. The PI method is proved to have exponential dependence on $m$. Is the proposed delayed-Q learning method guaranteed to have much nicer dependence on $m$?\n3. The proposed delayed-Q is model-based (although as noted it does not need a model of transitions), any thought about how to adapt it into model-free settings?\n4. If the environment is stochastic, then the proposed method will be largely impacted since the next state will be much harder to estimate. Any reason or evidence for if / why this method is expected to perform well?\n5. Also, it seems the comparison is unfair in terms of model-based delayed-Q vs. model-free Augmented Q-learning. How much benefit does the delayed-Q gain from the learned model (or how sensitive the delayed-Q is w.r.t. the model error)? It would be great if there is some investigation over this issue.\n\nOverall, I found the problem is important, and the motivation is convincing. The theoretical study of the execution delay problem is systematic and solid. The proposed method is promising and verified by experiments. On the other hand, there are still a number of questions that need to be clarified, such as the theoretical guarantees of the proposed delayed-Q, and issues about its model-based nature.\n\n===Update===\n\nAfter reading the authors' feedback and other reviews, I would keep my current rating.", "rating": "6: Marginally above acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/AnonReviewer1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/AnonReviewer1"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq . ***Please remember to file the Code-of-Ethics report. Once you submitted the review, a link to the report will be visible in the bottom right corner of your review.***", "required": true, "markdown": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "readers": {"description": "Select all user groups that should be able to read this comment.", "values": ["everyone"]}, "nonreaders": {"values": []}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"], "description": "How your identity will be displayed."}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}}, "expdate": 1607428800000, "duedate": 1606752000000, "multiReply": false, "readers": ["everyone"], "tcdate": 1602538114676, "tmdate": 1606915758692, "super": "ICLR.cc/2021/Conference/-/Official_Review", "signatures": ["OpenReview.net"], "writers": ["ICLR.cc/2021/Conference"], "invitees": ["ICLR.cc/2021/Conference/Paper1615/Reviewers", "OpenReview.net/Support"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Review"}}}, {"id": "3J5M8FQnDks", "original": null, "number": 8, "cdate": 1606303043451, "ddate": null, "tcdate": 1606303043451, "tmdate": 1606303043451, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment", "content": {"title": "Rebuttal Revision Updated", "comment": "We again wish to thank the reviewers for their valuable feedback. We uploaded a revised version that incorporates our answers to all the questions raised by the reviewers. Particularly, the fruitful reviews yielded five new experiments in Figures 3, 6, 7, 8, 11, and multiple text clarifications. To preserve anonymity, we shall add a link to our code upon acceptance. "}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Authors"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq", "required": true, "markdown": true}}, "forum": "j1RMMKeP2gR", "readers": {"description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response", "values-dropdown": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"], "default": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"]}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"]}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+|ICLR.cc/2021/Conference/Paper1615/Authors|ICLR.cc/2021/Conference/Paper1615/Area_Chair[0-9]+|ICLR.cc/2021/Conference/Program_Chairs", "description": "How your identity will be displayed."}}, "expdate": 1610649480000, "final": [], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs", "ICLR.cc/2021/Conference/Program_Chairs", "OpenReview.net/Support"], "noninvitees": [], "tcdate": 1601923857720, "tmdate": 1610649509835, "super": "ICLR.cc/2021/Conference/-/Comment", "signatures": ["ICLR.cc/2021/Conference"], "writers": ["ICLR.cc/2021/Conference"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment"}}}, {"id": "ac-tCoZ7L7x", "original": null, "number": 6, "cdate": 1605564896834, "ddate": null, "tcdate": 1605564896834, "tmdate": 1606243056230, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "81NtI91XN3g", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment", "content": {"title": "Response to Reviewer 3 -- Part 2/2", "comment": "***A concrete example of an MDP where point estimate is a poor strategy:***\nThe reviewer raised an important point; here is an example to demonstrate why point-estimate prediction can be devastating. Consider an MDP where two parameters define the state $s=(x,t)$. Starting from $(0,0)$, the second index, time, progresses deterministically, while the first index behaves like a random walk with momentum. I.e., if $x>0$, $x+1$ is more likely than $x-1$, while if $x<0$, $x-1$ is more likely than $x+1$. The process obviously diverges with time. \nNow, suppose there are two actions: one is good in extreme values (when $|x|$ is big) and one is good in values close to $0$ (when $|x|$ is small). Suppose also that the delay $m$ is large. The PDF of the state is bi-modal and symmetric around $(Z,m)$ and $(-Z,m)$. But, the point estimate (e.g., ML, or MAP) will give a value of $(0,m)$. \n\n***Similarity to MBS:***\nMBS is a conceptual algorithm, so we find the comparison to MBS a bit problematic in general. Evidently, even with the model approximation considered there, MBS cannot run on domains like Atari, as planning is performed on a discretized space. Differently, Delayed-Q works with the original, possibly continuous state-space. Moreover, MBS is an offline algorithm: it estimates a surrogate, non-delayed MDP from samples, and only then, as a final stage, solves that MDP to obtain the optimal policy (see [9], Algorithm 2, line 16). This is inapplicable to large continuous domains and is in contrast to Delayed-Q.\n\n**References**\n[9] Walsh, T. J., Nouri, A., Li, L., & Littman, M. L. (2009). Learning and planning in environments with delayed feedback. Autonomous Agents and Multi-Agent Systems, 18(1), 83.\n\n"}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Authors"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq", "required": true, "markdown": true}}, "forum": "j1RMMKeP2gR", "readers": {"description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response", "values-dropdown": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"], "default": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"]}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"]}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+|ICLR.cc/2021/Conference/Paper1615/Authors|ICLR.cc/2021/Conference/Paper1615/Area_Chair[0-9]+|ICLR.cc/2021/Conference/Program_Chairs", "description": "How your identity will be displayed."}}, "expdate": 1610649480000, "final": [], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs", "ICLR.cc/2021/Conference/Program_Chairs", "OpenReview.net/Support"], "noninvitees": [], "tcdate": 1601923857720, "tmdate": 1610649509835, "super": "ICLR.cc/2021/Conference/-/Comment", "signatures": ["ICLR.cc/2021/Conference"], "writers": ["ICLR.cc/2021/Conference"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment"}}}, {"id": "81NtI91XN3g", "original": null, "number": 5, "cdate": 1605564583244, "ddate": null, "tcdate": 1605564583244, "tmdate": 1606242886645, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "AlPR4TZrPmE", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment", "content": {"title": "Response to Reviewer 3 -- Part 1/2", "comment": "We thank the reviewer for the time spent on reading the paper and for his attention to detail. We shall address his concerns in order and integrate the relevant parts into the revised version.\n\n***Address real applications:***\nGenerally, this work is principled and includes a substantial amount of theory along with multiple experiments on domains that are common in RL literature. Nonetheless, we agree it can be naturally extended to real-world applications. In such extensions, aspects that are likely to be important are varying and/or unknown values. As noted in Sec. 8 (Discussion), we believe our method can cope with varying delays thanks to the single-step-based forward-model. As for unknown delay, one could incorporate an estimation of it, which may even depend on the state. Yet, as we pointed out to Reviewer 2, many real-world systems can be reduced to a problem with known delay. Also, when the delay is misspecified during training, our agent does not suffer from degradation, as shown in the new experiment we added: https://www.dropbox.com/s/87msatlmgnqeuvd/robustness.png?dl=0 -- training on $m=10$ and evaluating on other delays; see more in response to Reviewer 2. We recall that working with a delay in RL and control, in general, is considered one of the hurdles for real-world RL; see [4]. We believe that our work will open up avenues for applied research. \n\n\n***Use existing computation-time analysis of PI to the m-AMDP:***\nIt is correct that existing results on PI hold for m-AMDPs, since these are regular MDPs. However, as pointed out in [5], the lower-bound complexity of PI is still an open problem, at least in the most general MDP formulation. Actually, lower-bounds have been derived in specific cases such as deterministic MDPs [6], total reward criterion [7] or close to 1 discount factor [8]. Even though we did not intend to directly address this open question, the literature survey we conducted for this rebuttal suggests that our result is a contribution on its own to the general theory on MDPs (without delay). We stress that, in fact, we do not take advantage of the special delay problem structure (see Appx. B.4, first Prop.). We thank the reviewer for this observation and shall emphasize this contribution.\n\n\n***Contribution of the execution-delay MDP formulation; substantial algorithmic challenges; comparison with the augmented formulation; lead-in to Delayed-Q:***\nFirst, our intention is to claim that albeit augmented MDPs is \u201cthe obvious thing to do\u201d, it encompasses several disadvantages. We highlight them both theoretically (Prop. 4.1 and Thm. 4.1) and empirically (Fig. 6 and others). This motivates the study of delay in non-augmented MDPs through execution-delay MDPs. \n\nOur first contribution (Thm 5.1) is in showing that limiting the most general class of history-dependent policies to Markov policies does not impair performance. We believe this is in fact dramatic: while non-delayed RL relies on the ability to restrict policy search to the space of Markov policies, we show for the first time that this applies to the delayed case as well. Our second contribution (Prop. 5.2) is in showing that stationary policies are suboptimal in general. We believe this is again significant: while for non-delayed MDPs one can restrict policy search to stationary policies, we show that in the delayed case, this yields suboptimal performance. These two results, therefore, lead to focusing attention on Markov non-stationary policies, and provide the theoretical justification to our Delayed-Q algorithm, which indeed uses Markov non-stationary policies in the original, non-augmented state-space. \n\nTherefore, regarding the reviewer\u2019s concern, while the derivation of Delayed-Q indeed does not rely on the delayed Bellman equations (Appx. C.5), it does match the theoretical insights on execution-delay MDPs. \n\n***References***\n[4] Dulac-Arnold, G., Mankowitz, D., & Hester, T. (2019). Challenges of real-world reinforcement learning. arXiv preprint arXiv:1904.12901. \n\n[5] Scherrer, B. (2016). Improved and generalized upper bounds on the complexity of policy iteration. Mathematics of Operations Research, 41(3), 758-774. \n\n[6] Hansen, T. D., & Zwick, U. (2010, December). Lower bounds for Howard\u2019s algorithm for finding minimum mean-cost cycles. In International Symposium on Algorithms and Computation (pp. 415-426). Springer, Berlin, Heidelberg. \n\n[7] Fearnley, J. (2010, July). Exponential lower bounds for policy iteration. In International Colloquium on Automata, Languages, and Programming (pp. 551-562). Springer, Berlin, Heidelberg. \n\n[8] Hollanders, R., Delvenne, J. C., & Jungers, R. M. (2012, December). The complexity of policy iteration is exponential for discounted Markov decision processes. In 2012 IEEE 51st IEEE Conference on Decision and Control (CDC) (pp. 5997-6002). IEEE.\n"}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Authors"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq", "required": true, "markdown": true}}, "forum": "j1RMMKeP2gR", "readers": {"description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response", "values-dropdown": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"], "default": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"]}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"]}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+|ICLR.cc/2021/Conference/Paper1615/Authors|ICLR.cc/2021/Conference/Paper1615/Area_Chair[0-9]+|ICLR.cc/2021/Conference/Program_Chairs", "description": "How your identity will be displayed."}}, "expdate": 1610649480000, "final": [], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs", "ICLR.cc/2021/Conference/Program_Chairs", "OpenReview.net/Support"], "noninvitees": [], "tcdate": 1601923857720, "tmdate": 1610649509835, "super": "ICLR.cc/2021/Conference/-/Comment", "signatures": ["ICLR.cc/2021/Conference"], "writers": ["ICLR.cc/2021/Conference"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment"}}}, {"id": "ofJyBJ73xAW", "original": null, "number": 2, "cdate": 1605562937295, "ddate": null, "tcdate": 1605562937295, "tmdate": 1605565282531, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "blqFn7X2xs7", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment", "content": {"title": "Response to Reviewer 1", "comment": "We appreciate the time the reviewer spent on carefully reading and assessing the paper, and thank him for his insightful questions. We shall address them in order, and will integrate most of the answers in the final version.\n\n1. We believe the reviewer refers to the tradeoff between stochasticity and delay mentioned in Remark 3.1. We agree that for a general stochastic MDP, the performance should be strictly monotonically decreasing in the delay value and in the level of stochasticity. More formally, taking $m\\rightarrow \\infty$ should yield the same performance as in an MDP with uniform transitions. Therefore, from a continuity argument combined with the monotonicity of the two parameters, there should be a constant performance level-curve that couples increasing delay values with decreasing stochasticity levels, and vice-versa. Our Prop. 3.1 is merely a special case of this coupling for which an exact formula is given. \n\n2. First, we note that PI is a planning algorithm that relies on a known model while Q-learning is a sample-based algorithm that involves learning. So, the comparison we can make between them is not formal. Nonetheless, if we apply the same reasoning behind the complexity analysis of PI to Delayed-Q, we see that the latter is algorithmically identical to Q-learning, except for two parts: the $m$-step forward-model calls, and the replay buffer shift of $m$ samples. Hence, algorithmically, while Augmented-Q is exponential in $m$, Delayed-Q is in fact linear in $m$. To support this, we added the following experiment that clearly demonstrates the exponential vs. linear dependence of the two algorithms for the Maze domain: https://www.dropbox.com/s/bbqjs5gv5gwctmd/complexity_delayed_augmented.png?dl=0. \n\n3. Excellent question, and the answer is yes. In fact, we began this research with a model-free algorithm that works as follows. Instead of the current \u2018un-delaying\u2019 we apply to the Q-function via the replay buffer shift, we defined a delayed Q-function for which the action is shifted by $m$ steps from the state, and is trained using the original state-action sequences. We trained it with two methods: online exploration and imitation of a pre-trained teacher. However, the results were unsatisfactory. We believe the reason is that in that case, the Q-function is supposed to implicitly learn the $m$-step transition (as it does with a single step in non-delayed MDPs), which is beyond its capabilities. Dedicating a forward-model for this task solved the issue.\n\n4. The reviewer is right. Stochasticity does impact Delayed-Q since it relies on a prediction of the $m$-th next state. Nonetheless, a possible alternative could instead consider the PDF over the future $m$-th state to compute its expectation and choose the action accordingly. However, this approach can be bad, as we demonstrate with an example in our response to Reviewer 3. We also observe this phenomenon in Example 3.1: there, the optimal policy applies an action based on the most-likely state (proof of Prop. 3.1), while one can easily show that any other policy that weighs future state probabilities leads to lower reward. Lastly, our experiments demonstrate relatively high robustness to noise, as can be seen for Noisy Maze, Noisy Cartpole, and Noisy Acrobot in Figs. 3 and 6. \n\n5. This is a good point, which continues the discussion from item 3. As explained there, an explicit model is indeed key to enabling good performance of the algorithm. As for Augmented-Q being model-free -- it is not clear how it would benefit from maintaining a model, since it converts the MDP to a non-delayed one. Also, notice that the forward-model is trained online using the same samples as the training agent, so in a sense, it comes \u201cfor free\u201d. To answer with further investigation as requested, we added the following experiment on Noisy Cartpole. For different delay values, we measure the performance when having access to a perfect model (i.e., the environment itself) vs. the learned model. As seen in https://www.dropbox.com/s/un2dtd6nhuxysek/perfect-learned_gap.png?dl=0, model error has no impact for $m=5,$ but it becomes impactful when the delay is $m=15$ and $m=25$. Thus, for large delays, performance can potentially be improved by 20-30% with a better model."}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Authors"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq", "required": true, "markdown": true}}, "forum": "j1RMMKeP2gR", "readers": {"description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response", "values-dropdown": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"], "default": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"]}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"]}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+|ICLR.cc/2021/Conference/Paper1615/Authors|ICLR.cc/2021/Conference/Paper1615/Area_Chair[0-9]+|ICLR.cc/2021/Conference/Program_Chairs", "description": "How your identity will be displayed."}}, "expdate": 1610649480000, "final": [], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs", "ICLR.cc/2021/Conference/Program_Chairs", "OpenReview.net/Support"], "noninvitees": [], "tcdate": 1601923857720, "tmdate": 1610649509835, "super": "ICLR.cc/2021/Conference/-/Comment", "signatures": ["ICLR.cc/2021/Conference"], "writers": ["ICLR.cc/2021/Conference"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment"}}}, {"id": "LPLPoFgMFy", "original": null, "number": 4, "cdate": 1605563804694, "ddate": null, "tcdate": 1605563804694, "tmdate": 1605564336712, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "DfFPE_dTKsE", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment", "content": {"title": "Response to Reviewer 4", "comment": "We wish to thank the reviewer for his time and attention to detail.\n\nThe effect of increasing stochasticity on the performance of delayed-Q can be seen in the heatmaps in Figs. 3(a)-(b): If we look at both figures according to the horizontal axis, we can see the effect of noise on the reward in Delayed-Q. As seen there, this negative impact intensifies as the delay increases. \n\nRegarding the simulator used for Atari, we agree that combining a learned model is a worthy topic of future research, as noted in Sec. 7. A recent work worth noting in this context is [10], which can potentially serve as such a learned model.\n\n**References**\n[10] Kim, S. W., Zhou, Y., Philion, J., Torralba, A., & Fidler, S. (2020). Learning to Simulate Dynamic Environments with GameGAN. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (pp. 1231-1240).\n\n"}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Authors"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq", "required": true, "markdown": true}}, "forum": "j1RMMKeP2gR", "readers": {"description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response", "values-dropdown": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"], "default": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"]}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"]}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+|ICLR.cc/2021/Conference/Paper1615/Authors|ICLR.cc/2021/Conference/Paper1615/Area_Chair[0-9]+|ICLR.cc/2021/Conference/Program_Chairs", "description": "How your identity will be displayed."}}, "expdate": 1610649480000, "final": [], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs", "ICLR.cc/2021/Conference/Program_Chairs", "OpenReview.net/Support"], "noninvitees": [], "tcdate": 1601923857720, "tmdate": 1610649509835, "super": "ICLR.cc/2021/Conference/-/Comment", "signatures": ["ICLR.cc/2021/Conference"], "writers": ["ICLR.cc/2021/Conference"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment"}}}, {"id": "n9IP70mhe7", "original": null, "number": 3, "cdate": 1605563040691, "ddate": null, "tcdate": 1605563040691, "tmdate": 1605564179136, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "_S861TdByi", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment", "content": {"title": "Response to Reviewer 2", "comment": "We wish to thank the reviewer for carefully reading the paper and providing his valuable comments. We shall address them all and integrate the relevant parts into the revised submission:\n\n***Discussion of the robustness/tradeoff when the delay value is unknown***\nFirst, we note that in many systems such as autonomous vehicles, the latency statistics of the different hardware and software components are well studied [1,2], and in production systems are almost constant [3]. In other cases, they can be estimated as the first stage. \n\nHowever, we agree that it is intriguing to test our algorithm on delay values that are different than those it was trained on. For that reason and to answer the reviewer\u2019s request, we added the following experiment on Noisy Cartpole: We first trained Delayed-Q with a delay of 10. Then, we loaded both the Q-network and the forward-model to evaluate the trained agent on additional delay values it has not seen before (from 5 to 15). The results are given here: https://www.dropbox.com/s/87msatlmgnqeuvd/robustness.png?dl=0 . We believe this plot nicely demonstrates the robustness of our method -- varying performance in evaluation (for good or bad) does not stem from delay misspecification. Instead, the delay is \u2018forgotten\u2019 after training, and the figure depicts the general effect of execution delay on performance. For shorter evaluation delay than the training delay, performance even improves (m=5,6,7,8,9). \n\nThe reason is that, first, during training, the Q-function is \u2018un-delayed\u2019 due to the replay buffer shift that relates the actions to the correct execution time. Second, the forward-model is trained based on single-step transitions and only during inference is it queried $m$ times. Thus, these two networks composing the agent are oblivious to the delay they were trained on. \n\n***RNN-policy baseline***\nWe agree that RNN-based policies seem like a promising approach at a first glance. However, we did not expect them to perform especially well for the following reasons. The first reason comes as a good opportunity to apply Thm. 5.1: RNN policies feed the last $N>1$ observed states to an LSTM, while according to our theorem, the sequence of states $s_{t-m}, s_{t-m-1}, \\dots$ does not aid the policy compared to only using $s_{t-m}$. So a naive RNN-policy that takes the last $N$ observed states is not expected to have more benefit than a Markov one. An additional deficiency of an RNN-policy is that, similarly to Oblivious-Q, it targets the wrong Q-value and does not account for delayed execution. Notice that this is not the case in both Augmented-Q and Delayed-Q.  \n\nDespite the reasons above, we agree a comparison to an RNN-based policy is still a relevant baseline, and to answer the reviewer\u2019s request, we ran such an experiment on Atari. On a technical note, we found implementations of R2D2 in other repositories than ours, which prevents a direct comparison with our algorithm. Also, R2D2 is a distributed algorithm, which adds another level of complexity. The repository we base our implementation on is the well-known \u201cstable-baselines\u201d. The RNN policy there is A2C, so we choose to work with that. A game where we found that A2C does not diverge is Atari\u2019s \u201cFrostbite\u201d. The results are shown here: https://www.dropbox.com/s/if95h1zq9hd3lfn/lstm_comparison.png?dl=0. As seen, using a recurrent policy does not seem to improve upon Augmented-Q or Oblivious-Q. \n\n***Improve plots in Figure 4***\nWe thank the reviewer for the advice. We will add the labels as requested. Additionally, as per the reviewer\u2019s request, we added two delay-sensitivity experiments on Maze and Noisy Acrobot, as originally done in Fig. 5 (it will take a significant amount of time to run such a sweep on Atari): https://www.dropbox.com/s/qaodb66nhwmak7t/degradation_maze.png?dl=0, https://www.dropbox.com/s/qw4ny3svj0epglp/degradation_acrobot.png?dl=0 (notice that for Augmented-Q in Maze, experiments with $m>6$ are missing due to explosion of the state-space). Both experiments again exhibit superior performance of Delayed-Q compared to Oblivious-Q and Augmented-Q, for a wide range of delays. \n\n\n**References**\n[1] Zhao, H., Zhang, Y., Meng, P., Shi, H., Li, L. E., Lou, T., & Zhao, J. (2019). Towards Safety-Aware Computing System Design in Autonomous Vehicles. arXiv preprint arXiv:1905.08453.\n\n[2] Niu, W., Ma, X., Wang, Y., & Ren, B. (2019). 26ms inference time for Resnet-50: Towards real-time execution of all DNNs on smartphone. arXiv preprint arXiv:1905.00571.\n\n[3] Toschi, A., Sanic, M., Leng, J., Chen, Q., Wang, C., & Guo, M. (2019, August). Characterizing perception module performance and robustness in production-scale autonomous driving system. In IFIP International Conference on Network and Parallel Computing (pp. 235-247). Springer, Cham.\n"}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Authors"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq", "required": true, "markdown": true}}, "forum": "j1RMMKeP2gR", "readers": {"description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response", "values-dropdown": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"], "default": ["ICLR.cc/2021/Conference/Program_Chairs", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs"]}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"]}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+|ICLR.cc/2021/Conference/Paper1615/Authors|ICLR.cc/2021/Conference/Paper1615/Area_Chair[0-9]+|ICLR.cc/2021/Conference/Program_Chairs", "description": "How your identity will be displayed."}}, "expdate": 1610649480000, "final": [], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/Area_Chairs", "ICLR.cc/2021/Conference/Program_Chairs", "OpenReview.net/Support"], "noninvitees": [], "tcdate": 1601923857720, "tmdate": 1610649509835, "super": "ICLR.cc/2021/Conference/-/Comment", "signatures": ["ICLR.cc/2021/Conference"], "writers": ["ICLR.cc/2021/Conference"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Comment"}}}, {"id": "DfFPE_dTKsE", "original": null, "number": 1, "cdate": 1603802463698, "ddate": null, "tcdate": 1603802463698, "tmdate": 1605024401256, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Review", "content": {"title": "This paper is a solid study of the problem with lots of potential research directions for the future work", "review": "The paper presents theoretical analysis of MDPs with execution delay together with an algorithm that achieves better performance on the task than the baselines. The main theoretical result highlights the need for non-stationary Markov policies that is different from standard MDPs that can be solved using stationary Markov policies.\n\n*Quality*\nThe authors conducted a solid theoretical study of MDPs with the execution delay. The presented claims showcase why the existing approach based on augmenting the state space is not feasible for large delays. The suggested algorithm is a based on a simple idea to estimate the state of MDP m steps in the future, but it seems to work quite well when the MDP is not too stochastic. Overall, this paper is a solid study of the problem with lots of potential research directions for the future work.\n\n*Clarity*\nThe paper is well-written in general. \n\n*Originality*\nTo my best knowledge, the results are new and the need for non-stationary policies is a novel highlight.\n\n*Significance*\nrather significant, execution delay is a common issue in practice and the paper lays foundations for analysis of MDPs with execution delay.\n\nPros\n* Theoretical analysis of ED-MDPs that guides the presented algorithm\n* Great results on Tabular Maze and Physical domain problems\n\nCons\n* No analysis on how the stochasticity of environment affects the performance of Delayed-Q\n* Atari results use the simulator to predict the future state", "rating": "8: Top 50% of accepted papers, clear accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/AnonReviewer4"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/AnonReviewer4"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq . ***Please remember to file the Code-of-Ethics report. Once you submitted the review, a link to the report will be visible in the bottom right corner of your review.***", "required": true, "markdown": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "readers": {"description": "Select all user groups that should be able to read this comment.", "values": ["everyone"]}, "nonreaders": {"values": []}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"], "description": "How your identity will be displayed."}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}}, "expdate": 1607428800000, "duedate": 1606752000000, "multiReply": false, "readers": ["everyone"], "tcdate": 1602538114676, "tmdate": 1606915758692, "super": "ICLR.cc/2021/Conference/-/Official_Review", "signatures": ["OpenReview.net"], "writers": ["ICLR.cc/2021/Conference"], "invitees": ["ICLR.cc/2021/Conference/Paper1615/Reviewers", "OpenReview.net/Support"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Review"}}}, {"id": "_S861TdByi", "original": null, "number": 4, "cdate": 1604408475529, "ddate": null, "tcdate": 1604408475529, "tmdate": 1605024401045, "tddate": null, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "invitation": "ICLR.cc/2021/Conference/Paper1615/-/Official_Review", "content": {"title": "Approximate an RNN policy in non-Markov observations", "review": "This paper studies the problem of RL with action delay, or equivalently, non-Markov decision process.\nCompared to a naive strategy of state expansion (which appends a history of actions to the observation), the authors show that amending a policy to be nonstationary can:\n  (a) achieve the optimal policy in analysis for tabular MDPs\n  (b) performs well in a series of computational experiments.\n\nThere are several things to like about this paper:\n- The overall standard of exposition and discussion is strong, and it is easy to follow the paper.\n- The paper takes on a clear issue in reinforcement learning, and comes to some equally clear recommendations and findings.\n- The proposed solution method is reasonable, and appears to perform well in practice.\n- The series of experiments are well thought through... with a clear progression from theory -> didactic examples -> deep RL.\n\nHowever there are a few places where this paper falls short:\n- I find some of the characterisations quite \"toy\" overall... yes it is great that the agent can perform well in the setting where m=delay is known, but there is no discussion of the robustness/tradeoff when this is not the case. In a sense this agent is given priveleged information, and while it does better than the expanded state space approach, this is still a very stylized problem.\n- Related to the above, the obvious baseline would be some kind of RNN-policy, who is *not* informed of the action delay m. I would have thought this is a more practical general purpose approach, and should at least be considered and/or compared to.\n- The plots in Figure 4 could be improved in a few ways... add the labels for maze/cartpole/boxing next to the actual plots. Find a way to show the dropoff with performance not just for Cartpole but also maze/boxing.\n\nOverall I think the paper is a reasonable contribution, I'm generally a fan of these simple/clear pieces of work.\nHowever, I feel like the current paper is missing the \"elephant in the room\"... state of the art agents like R2D2 are *already* using recurrent policies... that surely has to be a reasonable baseline here?\nIf you can include that and discuss that well then I will upgrade to an accept.", "rating": "5: Marginally below acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2021/Conference/Paper1615/AnonReviewer2"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2021/Conference", "ICLR.cc/2021/Conference/Paper1615/AnonReviewer2"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Acting in Delayed Environments with Non-Stationary Markov Policies", "authorids": ["~Esther_Derman1", "~Gal_Dalal2", "~Shie_Mannor2"], "authors": ["Esther Derman", "Gal Dalal", "Shie Mannor"], "keywords": ["reinforcement learning", "delay"], "abstract": "The standard Markov Decision Process (MDP) formulation hinges on the assumption that an action is executed immediately after it was chosen. However, assuming it is often unrealistic and can lead to catastrophic failures in applications such as robotic manipulation, cloud computing, and finance. We introduce a framework for learning and planning in MDPs where the decision-maker commits actions that are executed with a delay of $m$ steps. The brute-force state augmentation baseline where the state is concatenated to the last $m$ committed actions suffers from an exponential complexity in $m$, as we show for policy iteration. We then prove that with execution delay, deterministic Markov policies in the original state-space are sufficient for attaining maximal reward, but need to be non-stationary. As for stationary Markov policies, we show they are sub-optimal in general. Consequently, we devise a non-stationary Q-learning style model-based algorithm that solves delayed execution tasks without resorting to state-augmentation. Experiments on tabular, physical, and Atari domains reveal that it converges quickly to high performance even for substantial delays, while standard approaches that either ignore the delay or rely on state-augmentation struggle or fail due to divergence. The code is available at \\url{https://github.com/galdl/rl_delay_basic.git}.", "code_of_ethics": "I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics", "paperhash": "derman|acting_in_delayed_environments_with_nonstationary_markov_policies", "one-sentence_summary": "In this paper, we derive theoretical results on execution-delay MDPs, and devise a DQN-based algorithm to empirically tackle this setup.", "supplementary_material": "/attachment/d4631a94fc58706b4257c657196130c560897500.zip", "pdf": "/pdf/da00ad1a9fdf6ed49ff470887d9046490c8058b9.pdf", "venue": "ICLR 2021 Poster", "venueid": "ICLR.cc/2021/Conference", "_bibtex": "@inproceedings{\nderman2021acting,\ntitle={Acting in Delayed Environments with Non-Stationary Markov Policies},\nauthor={Esther Derman and Gal Dalal and Shie Mannor},\nbooktitle={International Conference on Learning Representations},\nyear={2021},\nurl={https://openreview.net/forum?id=j1RMMKeP2gR}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters). Add formatting using Markdown and formulas using LaTeX. For more information see https://openreview.net/faq . ***Please remember to file the Code-of-Ethics report. Once you submitted the review, a link to the report will be visible in the bottom right corner of your review.***", "required": true, "markdown": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}, "forum": "j1RMMKeP2gR", "replyto": "j1RMMKeP2gR", "readers": {"description": "Select all user groups that should be able to read this comment.", "values": ["everyone"]}, "nonreaders": {"values": []}, "writers": {"values-copied": ["ICLR.cc/2021/Conference", "{signatures}"], "description": "How your identity will be displayed."}, "signatures": {"values-regex": "ICLR.cc/2021/Conference/Paper1615/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}}, "expdate": 1607428800000, "duedate": 1606752000000, "multiReply": false, "readers": ["everyone"], "tcdate": 1602538114676, "tmdate": 1606915758692, "super": "ICLR.cc/2021/Conference/-/Official_Review", "signatures": ["OpenReview.net"], "writers": ["ICLR.cc/2021/Conference"], "invitees": ["ICLR.cc/2021/Conference/Paper1615/Reviewers", "OpenReview.net/Support"], "id": "ICLR.cc/2021/Conference/Paper1615/-/Official_Review"}}}], "count": 12}