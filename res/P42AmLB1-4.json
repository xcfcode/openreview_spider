{"notes": [{"id": "P42AmLB1-4", "original": "FP4QM2M1cB", "number": 31, "cdate": 1582750161360, "ddate": null, "tcdate": 1582750161360, "tmdate": 1587925112951, "tddate": null, "forum": "P42AmLB1-4", "replyto": null, "invitation": "ICLR.cc/2020/Workshop/DeepDiffEq/-/Blind_Submission", "content": {"keywords": ["robotics", "ODE", "BVP"], "authors": ["Houston Lucas", "Richard Kelley"], "title": "Generating Control Policies for Autonomous Vehicles   Using Neural ODEs", "pdf": "/pdf/deb5add980205af2bc708ffff1238a3c70405e74.pdf", "TL;DR": "Boundary Value Problems are useful, but sometimes slow to solve, this paper demonstrates a method for faster solutions.", "abstract": "The problem of robot control often requires solving a system of\nordinary differential equations (ODEs).  Traditionally this has been\naccomplished by using iterative ODE solvers.  These solvers start with\nan initial guess, which is iteratively improved to converge to a\ncorrect solution.  However, traditional solvers can be slow and do not\ncombine well with other systems since they are not differentiable.  In\nresponse, some researchers have proposed using neural networks in an\nend-to-end system that directly maps perceptual inputs to control\nactions.  Because of their differentiablity, end-to-end approaches can\nbe composed with other modules more readily than traditional ODE\nsolvers.  However the end-to-end approach no longer carries the\nguarantee that the solution obeys the required dynamics.\nWe propose a framework for using Neural ODE to\ncombine the flexibility of the end-to-end approach with the guarantees\nof traditional solvers.  In our approach a neural network is used to\nprovide the initial guess to a differentiable ODE solver.  The ODE\nsolver then yields a solution trajectory. We use this trajectory to\nimprove the guesses of the neural network. This\nframework allows the neural network to learn initial guesses that are\nclose to the correct solution, improving overall system performance\nwhile ensuring that dynamics constraints are always satisfied. We\ndemonstrate the utility of this framework in the case of robot\ncontrol, where we use it to solve a family of boundary value problems\nthat are essential for steering an autonomous vehicle to a goal state.", "authorids": ["houstonlucas@nevada.unr.edu", "rkelley@unr.edu"], "paperhash": "lucas|generating_control_policies_for_autonomous_vehicles_using_neural_odes", "_bibtex": "@inproceedings{\nlucas2020generating,\ntitle={Generating Control Policies for Autonomous Vehicles   Using Neural {\\{}ODE{\\}}s},\nauthor={Houston Lucas and Richard Kelley},\nbooktitle={ICLR 2020 Workshop on Integration of Deep Neural Models and Differential Equations},\nyear={2020},\nurl={https://openreview.net/forum?id=P42AmLB1-4}\n}"}, "signatures": ["ICLR.cc/2020/Workshop/DeepDiffEq"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Workshop/DeepDiffEq"], "details": {"replyCount": 1, "writable": false, "overwriting": [], "revisions": false, "tags": [], "invitation": {"reply": {"readers": {"values-regex": ".*"}, "writers": {"values": ["ICLR.cc/2020/Workshop/DeepDiffEq"]}, "signatures": {"values": ["ICLR.cc/2020/Workshop/DeepDiffEq"]}, "content": {"authors": {"values": ["Anonymous"]}, "authorids": {"values-regex": ".*"}}}, "signatures": ["ICLR.cc/2020/Workshop/DeepDiffEq"], "readers": ["everyone"], "writers": ["ICLR.cc/2020/Workshop/DeepDiffEq"], "invitees": ["~"], "tcdate": 1582750147213, "tmdate": 1587924718420, "id": "ICLR.cc/2020/Workshop/DeepDiffEq/-/Blind_Submission"}}, "tauthor": "OpenReview.net"}, {"id": "0v4LdTdvG", "original": null, "number": 1, "cdate": 1582774617432, "ddate": null, "tcdate": 1582774617432, "tmdate": 1582774617432, "tddate": null, "forum": "P42AmLB1-4", "replyto": "P42AmLB1-4", "invitation": "ICLR.cc/2020/Workshop/DeepDiffEq/Paper31/-/Decision", "content": {"decision": "Accept (Poster)", "title": "Paper Decision"}, "signatures": ["ICLR.cc/2020/Workshop/DeepDiffEq/Program_Chairs"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Workshop/DeepDiffEq/Program_Chairs"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"keywords": ["robotics", "ODE", "BVP"], "authors": ["Houston Lucas", "Richard Kelley"], "title": "Generating Control Policies for Autonomous Vehicles   Using Neural ODEs", "pdf": "/pdf/deb5add980205af2bc708ffff1238a3c70405e74.pdf", "TL;DR": "Boundary Value Problems are useful, but sometimes slow to solve, this paper demonstrates a method for faster solutions.", "abstract": "The problem of robot control often requires solving a system of\nordinary differential equations (ODEs).  Traditionally this has been\naccomplished by using iterative ODE solvers.  These solvers start with\nan initial guess, which is iteratively improved to converge to a\ncorrect solution.  However, traditional solvers can be slow and do not\ncombine well with other systems since they are not differentiable.  In\nresponse, some researchers have proposed using neural networks in an\nend-to-end system that directly maps perceptual inputs to control\nactions.  Because of their differentiablity, end-to-end approaches can\nbe composed with other modules more readily than traditional ODE\nsolvers.  However the end-to-end approach no longer carries the\nguarantee that the solution obeys the required dynamics.\nWe propose a framework for using Neural ODE to\ncombine the flexibility of the end-to-end approach with the guarantees\nof traditional solvers.  In our approach a neural network is used to\nprovide the initial guess to a differentiable ODE solver.  The ODE\nsolver then yields a solution trajectory. We use this trajectory to\nimprove the guesses of the neural network. This\nframework allows the neural network to learn initial guesses that are\nclose to the correct solution, improving overall system performance\nwhile ensuring that dynamics constraints are always satisfied. We\ndemonstrate the utility of this framework in the case of robot\ncontrol, where we use it to solve a family of boundary value problems\nthat are essential for steering an autonomous vehicle to a goal state.", "authorids": ["houstonlucas@nevada.unr.edu", "rkelley@unr.edu"], "paperhash": "lucas|generating_control_policies_for_autonomous_vehicles_using_neural_odes", "_bibtex": "@inproceedings{\nlucas2020generating,\ntitle={Generating Control Policies for Autonomous Vehicles   Using Neural {\\{}ODE{\\}}s},\nauthor={Houston Lucas and Richard Kelley},\nbooktitle={ICLR 2020 Workshop on Integration of Deep Neural Models and Differential Equations},\nyear={2020},\nurl={https://openreview.net/forum?id=P42AmLB1-4}\n}"}, "tags": [], "invitation": {"reply": {"writers": {"values": ["ICLR.cc/2020/Workshop/DeepDiffEq/Program_Chairs"], "description": "How your identity will be displayed."}, "signatures": {"values": ["ICLR.cc/2020/Workshop/DeepDiffEq/Program_Chairs"], "description": "How your identity will be displayed."}, "content": {"title": {"order": 1, "required": true, "value": "Paper Decision"}, "decision": {"order": 2, "required": true, "value-radio": ["Accept (Oral)", "Accept (Poster)", "Reject"], "description": "Decision"}, "comment": {"order": 3, "required": false, "value-regex": "[\\S\\s]{0,5000}", "description": ""}}, "forum": "P42AmLB1-4", "replyto": "P42AmLB1-4", "readers": {"description": "Select all user groups that should be able to read this comment.", "values": ["everyone"]}, "nonreaders": {"values": []}}, "cdate": 1582156800000, "expdate": 1589155200000, "duedate": 1588291200000, "multiReply": false, "readers": ["everyone"], "invitees": ["ICLR.cc/2020/Workshop/DeepDiffEq/Program_Chairs"], "tcdate": 1582771074012, "tmdate": 1587925022947, "super": "ICLR.cc/2020/Workshop/DeepDiffEq/-/Decision", "signatures": ["ICLR.cc/2020/Workshop/DeepDiffEq"], "writers": ["ICLR.cc/2020/Workshop/DeepDiffEq"], "id": "ICLR.cc/2020/Workshop/DeepDiffEq/Paper31/-/Decision"}}}], "count": 2}