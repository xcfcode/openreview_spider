{"notes": [{"tddate": null, "number": null, "ddate": null, "cdate": null, "tmdate": 1458641198979, "tcdate": 1458641198979, "id": "oVWR5WlnKcrlgPMRsB7g", "invitation": "ICLR.cc/2016/workshop/-/paper/8/comment", "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "GvNnQkKnAH1WDOmRiMYy", "signatures": ["~antonio_vergari1"], "readers": ["everyone"], "writers": ["~antonio_vergari1"], "content": {"title": "Actually SPN-B allows for splits of the same type", "comment": "In SPN-B we just limit the number of sub-slices to split into, then the algorithm can always decide to let a split on one axis to be followed by another split on the same axis.\nThe reason behind the higher likelihood scores is that if you split one slice into 10 parts at once on one dimension during the early steps you are more likely to commit some mistake than splitting it by two first, then checking if a split on the other dimension is feasible (and if the answer is no, keeping on splitting on the first dimension, and so on...)\nThis is the same as you do, I suppose."}, "nonreaders": [], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"CMT_id": "", "title": "A Minimalistic Approach to Sum-Product Network Learning for Real Applications", "abstract": "Sum-Product Networks (SPNs) are a class of expressive yet tractable hierarchical graphical models. LearnSPN is a structure learning algorithm for SPNs that uses hierarchical co-clustering to simultaneously identifying similar entities and similar features. The original LearnSPN algorithm assumes that all the variables are discrete and there is no missing data. We introduce a practical, simplified version of LearnSPN, MiniSPN, that runs faster and can handle missing data and heterogeneous features common in real applications. We demonstrate the performance of MiniSPN on standard benchmark datasets and on two datasets from Google's Knowledge Graph exhibiting high missingness rates and a mix of discrete and continuous features.", "pdf": "/pdf/BNYYGWVA1F7PwR1riED4.pdf", "paperhash": "krakovna|a_minimalistic_approach_to_sumproduct_network_learning_for_real_applications", "conflicts": ["harvard.edu", "google.com"], "authors": ["Viktoriya Krakovna", "Moshe Looks"], "authorids": ["vkrakovna@fas.harvard.edu", "madscience@google.com"]}, "tags": [], "invitation": {"rdate": null, "duedate": null, "tddate": null, "tmdate": null, "cdate": 1455317264074, "ddate": null, "super": null, "final": null, "tcdate": 1455317264074, "id": "ICLR.cc/2016/workshop/-/paper/8/comment", "writers": ["ICLR.cc/2016/workshop"], "signatures": ["ICLR.cc/2016/workshop"], "readers": ["everyone"], "reply": {"pdf": null, "replyto": null, "writers": {"values-regex": "~.*"}, "forum": "BNYYGWVA1F7PwR1riED4", "signatures": {"values-regex": "~.*", "description": "Your displayed identity associated with the above content."}, "readers": {"description": "The users who will be allowed to read the above content.", "values": ["everyone"]}, "content": {"title": {"order": 1, "description": "Brief summary of your comment.", "value-regex": ".{1,500}"}, "comment": {"order": 2, "description": "Your comment or reply.", "value-regex": "[\\S\\s]{1,5000}"}}}, "invitees": ["~", "ICLR.cc/2016/workshop/paper/8/reviewer/10"], "nonreaders": [], "noninvitees": []}}}, {"tddate": null, "number": null, "ddate": null, "cdate": null, "tmdate": 1458562557954, "tcdate": 1458562557954, "id": "GvNnQkKnAH1WDOmRiMYy", "invitation": "ICLR.cc/2016/workshop/-/paper/8/comment", "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "5Qzq17MkrTZgXpo7i3lv", "signatures": ["~Viktoriya_Krakovna1"], "readers": ["everyone"], "writers": ["~Viktoriya_Krakovna1"], "content": {"title": "Interesting paper", "comment": "Thanks Antonio for the link to your paper! Our greedy approach seems similar to your SPN-B method, except that it builds deeper SPNs by alternating between two-way instance splits and two-way variable splits, while MiniSPN follows a successful split with more splits of the same type on the sub-slices. I have updated our paper to mention this. "}, "nonreaders": [], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"CMT_id": "", "title": "A Minimalistic Approach to Sum-Product Network Learning for Real Applications", "abstract": "Sum-Product Networks (SPNs) are a class of expressive yet tractable hierarchical graphical models. LearnSPN is a structure learning algorithm for SPNs that uses hierarchical co-clustering to simultaneously identifying similar entities and similar features. The original LearnSPN algorithm assumes that all the variables are discrete and there is no missing data. We introduce a practical, simplified version of LearnSPN, MiniSPN, that runs faster and can handle missing data and heterogeneous features common in real applications. We demonstrate the performance of MiniSPN on standard benchmark datasets and on two datasets from Google's Knowledge Graph exhibiting high missingness rates and a mix of discrete and continuous features.", "pdf": "/pdf/BNYYGWVA1F7PwR1riED4.pdf", "paperhash": "krakovna|a_minimalistic_approach_to_sumproduct_network_learning_for_real_applications", "conflicts": ["harvard.edu", "google.com"], "authors": ["Viktoriya Krakovna", "Moshe Looks"], "authorids": ["vkrakovna@fas.harvard.edu", "madscience@google.com"]}, "tags": [], "invitation": {"rdate": null, "duedate": null, "tddate": null, "tmdate": null, "cdate": 1455317264074, "ddate": null, "super": null, "final": null, "tcdate": 1455317264074, "id": "ICLR.cc/2016/workshop/-/paper/8/comment", "writers": ["ICLR.cc/2016/workshop"], "signatures": ["ICLR.cc/2016/workshop"], "readers": ["everyone"], "reply": {"pdf": null, "replyto": null, "writers": {"values-regex": "~.*"}, "forum": "BNYYGWVA1F7PwR1riED4", "signatures": {"values-regex": "~.*", "description": "Your displayed identity associated with the above content."}, "readers": {"description": "The users who will be allowed to read the above content.", "values": ["everyone"]}, "content": {"title": {"order": 1, "description": "Brief summary of your comment.", "value-regex": ".{1,500}"}, "comment": {"order": 2, "description": "Your comment or reply.", "value-regex": "[\\S\\s]{1,5000}"}}}, "invitees": ["~", "ICLR.cc/2016/workshop/paper/8/reviewer/10"], "nonreaders": [], "noninvitees": []}}}, {"tddate": null, "number": null, "ddate": null, "cdate": null, "tmdate": 1458230941705, "tcdate": 1458230941705, "id": "5Qzq17MkrTZgXpo7i3lv", "invitation": "ICLR.cc/2016/workshop/-/paper/8/comment", "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "q7kJP5Jqgt8LEkD3t7qA", "signatures": ["~antonio_vergari1"], "readers": ["everyone"], "writers": ["~antonio_vergari1"], "content": {"title": "Limiting the number of child nodes affects the co-clustering partitioning", "comment": "We proposed to limit the number of the data matrix splits to two (i.e. number of node children while growing the network) in \"Simplifying, Regularizing and Strengthening Sum-Product Networks Structure Learning\" at ECML last year. One of the point why this improves the likelihood scores it is that it slow downs the two partitioning greedy processes, which you can view as a sort of greedy hierarchical co-clustering. That is, each following steps is less prone to incur in a local optimum. We have also demonstrated empirically that this improves structure quality making the network deeper and potentially with less edges.\n\nI share with the other reviewer some concerns about the lack of motivations behind algorithmic choices. I will try to write something later."}, "nonreaders": [], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"CMT_id": "", "title": "A Minimalistic Approach to Sum-Product Network Learning for Real Applications", "abstract": "Sum-Product Networks (SPNs) are a class of expressive yet tractable hierarchical graphical models. LearnSPN is a structure learning algorithm for SPNs that uses hierarchical co-clustering to simultaneously identifying similar entities and similar features. The original LearnSPN algorithm assumes that all the variables are discrete and there is no missing data. We introduce a practical, simplified version of LearnSPN, MiniSPN, that runs faster and can handle missing data and heterogeneous features common in real applications. We demonstrate the performance of MiniSPN on standard benchmark datasets and on two datasets from Google's Knowledge Graph exhibiting high missingness rates and a mix of discrete and continuous features.", "pdf": "/pdf/BNYYGWVA1F7PwR1riED4.pdf", "paperhash": "krakovna|a_minimalistic_approach_to_sumproduct_network_learning_for_real_applications", "conflicts": ["harvard.edu", "google.com"], "authors": ["Viktoriya Krakovna", "Moshe Looks"], "authorids": ["vkrakovna@fas.harvard.edu", "madscience@google.com"]}, "tags": [], "invitation": {"rdate": null, "duedate": null, "tddate": null, "tmdate": null, "cdate": 1455317264074, "ddate": null, "super": null, "final": null, "tcdate": 1455317264074, "id": "ICLR.cc/2016/workshop/-/paper/8/comment", "writers": ["ICLR.cc/2016/workshop"], "signatures": ["ICLR.cc/2016/workshop"], "readers": ["everyone"], "reply": {"pdf": null, "replyto": null, "writers": {"values-regex": "~.*"}, "forum": "BNYYGWVA1F7PwR1riED4", "signatures": {"values-regex": "~.*", "description": "Your displayed identity associated with the above content."}, "readers": {"description": "The users who will be allowed to read the above content.", "values": ["everyone"]}, "content": {"title": {"order": 1, "description": "Brief summary of your comment.", "value-regex": ".{1,500}"}, "comment": {"order": 2, "description": "Your comment or reply.", "value-regex": "[\\S\\s]{1,5000}"}}}, "invitees": ["~", "ICLR.cc/2016/workshop/paper/8/reviewer/10"], "nonreaders": [], "noninvitees": []}}}, {"tddate": null, "number": null, "ddate": null, "cdate": null, "tmdate": 1458183370332, "tcdate": 1458183370332, "id": "q7kJP5Jqgt8LEkD3t7qA", "invitation": "ICLR.cc/2016/workshop/-/paper/8/comment", "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "BNYYGWVA1F7PwR1riED4", "signatures": ["~Viktoriya_Krakovna1"], "readers": ["everyone"], "writers": ["~Viktoriya_Krakovna1"], "content": {"title": "Thanks to the reviewers for the helpful feedback!", "comment": "Reviewer 12's suggestion to apply the missing data fix to the original LearnSPN makes a lot of sense, and has unfortunately not occurred to me. Reviewer 10's suggestion to analyze convergence rates does not seem applicable, since part of the advantage of SPNs is, to quote Gens&Domingos 2013, that \"inference in SPNs does not involve diagnosing convergence as with MCMC or BP\". I definitely agree that there is room for other kinds of analysis of the algorithm, e.g. robustness analysis to see if repeated runs of the algorithm on the same data produce similar top-level splits. \n\nOur motivation for the simplified clustering step is that the original LearnSPN clustering step seems unnecessarily complex, involving a penalty prior, EM restarts, and hyperparameter search. It is by far the most complicated part of the algorithm in a way that seems difficult to justify, and likely the most time-consuming due to the restarts and hyperparameter tuning. Our greedy approach eliminates the need for these intricacies, and seems like a natural choice of simplification - an extension of the greedy approach used in the the top level of the LearnSPN algorithm. The chi-square test is used for infrastructure-specific implementation reasons, and does not make a significant difference, being asymptotically equivalent to the G-test. \n\nWhile each of our contributions is simple, together they have a large impact on the usability of the algorithm, by significantly increasing speed and making it applicable to more data sets. \n\nEdit: I have uploaded a lightly revised version of the paper. \n"}, "nonreaders": [], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"CMT_id": "", "title": "A Minimalistic Approach to Sum-Product Network Learning for Real Applications", "abstract": "Sum-Product Networks (SPNs) are a class of expressive yet tractable hierarchical graphical models. LearnSPN is a structure learning algorithm for SPNs that uses hierarchical co-clustering to simultaneously identifying similar entities and similar features. The original LearnSPN algorithm assumes that all the variables are discrete and there is no missing data. We introduce a practical, simplified version of LearnSPN, MiniSPN, that runs faster and can handle missing data and heterogeneous features common in real applications. We demonstrate the performance of MiniSPN on standard benchmark datasets and on two datasets from Google's Knowledge Graph exhibiting high missingness rates and a mix of discrete and continuous features.", "pdf": "/pdf/BNYYGWVA1F7PwR1riED4.pdf", "paperhash": "krakovna|a_minimalistic_approach_to_sumproduct_network_learning_for_real_applications", "conflicts": ["harvard.edu", "google.com"], "authors": ["Viktoriya Krakovna", "Moshe Looks"], "authorids": ["vkrakovna@fas.harvard.edu", "madscience@google.com"]}, "tags": [], "invitation": {"rdate": null, "duedate": null, "tddate": null, "tmdate": null, "cdate": 1455317264074, "ddate": null, "super": null, "final": null, "tcdate": 1455317264074, "id": "ICLR.cc/2016/workshop/-/paper/8/comment", "writers": ["ICLR.cc/2016/workshop"], "signatures": ["ICLR.cc/2016/workshop"], "readers": ["everyone"], "reply": {"pdf": null, "replyto": null, "writers": {"values-regex": "~.*"}, "forum": "BNYYGWVA1F7PwR1riED4", "signatures": {"values-regex": "~.*", "description": "Your displayed identity associated with the above content."}, "readers": {"description": "The users who will be allowed to read the above content.", "values": ["everyone"]}, "content": {"title": {"order": 1, "description": "Brief summary of your comment.", "value-regex": ".{1,500}"}, "comment": {"order": 2, "description": "Your comment or reply.", "value-regex": "[\\S\\s]{1,5000}"}}}, "invitees": ["~", "ICLR.cc/2016/workshop/paper/8/reviewer/10"], "nonreaders": [], "noninvitees": []}}}, {"tddate": null, "number": null, "ddate": null, "cdate": null, "tmdate": 1458074740794, "tcdate": 1458074740794, "id": "q7kJ6X1Lvt8LEkD3t7rn", "invitation": "ICLR.cc/2016/workshop/-/paper/8/review/11", "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "BNYYGWVA1F7PwR1riED4", "signatures": ["ICLR.cc/2016/workshop/paper/8/reviewer/11"], "readers": ["everyone"], "writers": ["ICLR.cc/2016/workshop/paper/8/reviewer/11"], "content": {"title": "Seems practical but not particularly innovative", "rating": "5: Marginally below acceptance threshold", "review": "This paper presents some tweaks to an existing sum product network (SPN) structure learning algorithm, LearnSPN. The original algorithm works by recursively partitioning data either according to variables or instances. If partitioning by instances, instances are clustered and aggregated by a sum node (mixture assumption). If partitioning by variables, the aim is to find independent subsets of variables on the given set of instances, and then to aggregate with a product node (independence assumption).\n\nThe contribution of the paper is to make some minor tweaks to the LearnSPN algorithm:\n1. Discretize continuous variables using a binary threshold on the median value when performing independence tests.\n2. Clustering is done more crudely, with a simple guess-and-check approach, where a clustering is proposed, then accepted or rejected based on a validation set.\n3. To handle missing data in the variable partitioning step that tests pairwise independence, only consider rows that have both variables present.\n\nEach of these contributions is very minor, and they seem like the first thing to try rather than the result of a long thought-out consideration of the design space. The main source of interest is that the method is orders of magnitude faster than LearnSPN and performs better than an alternative \u201cPareto\u201d algorithm that is 1-5x slower.\n\nOverall, the strengths are that the method seems reasonable and practical. The weaknesses are that the originality is low, and there is not much in the way of technical contributions.", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "nonreaders": [], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"CMT_id": "", "title": "A Minimalistic Approach to Sum-Product Network Learning for Real Applications", "abstract": "Sum-Product Networks (SPNs) are a class of expressive yet tractable hierarchical graphical models. LearnSPN is a structure learning algorithm for SPNs that uses hierarchical co-clustering to simultaneously identifying similar entities and similar features. The original LearnSPN algorithm assumes that all the variables are discrete and there is no missing data. We introduce a practical, simplified version of LearnSPN, MiniSPN, that runs faster and can handle missing data and heterogeneous features common in real applications. We demonstrate the performance of MiniSPN on standard benchmark datasets and on two datasets from Google's Knowledge Graph exhibiting high missingness rates and a mix of discrete and continuous features.", "pdf": "/pdf/BNYYGWVA1F7PwR1riED4.pdf", "paperhash": "krakovna|a_minimalistic_approach_to_sumproduct_network_learning_for_real_applications", "conflicts": ["harvard.edu", "google.com"], "authors": ["Viktoriya Krakovna", "Moshe Looks"], "authorids": ["vkrakovna@fas.harvard.edu", "madscience@google.com"]}, "tags": [], "invitation": {"rdate": null, "tddate": null, "tmdate": null, "cdate": 1456579934431, "ddate": null, "super": null, "final": null, "duedate": 1460725200000, "tcdate": 1456579934431, "id": "ICLR.cc/2016/workshop/-/paper/8/review/11", "writers": ["ICLR.cc/2016/workshop"], "signatures": ["ICLR.cc/2016/workshop"], "reply": {"pdf": null, "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "BNYYGWVA1F7PwR1riED4", "writers": {"values-regex": "(~.*)|ICLR.cc/2016/workshop/paper/[0-9]+/reviewer/[0-9]+)"}, "signatures": {"values-regex": "(~.*)|ICLR.cc/2016/workshop/paper/[0-9]+/reviewer/[0-9]+)", "description": "Your displayed identity associated with the above content."}, "readers": {"description": "The users who will be allowed to read the above content.", "values": ["everyone"]}, "content": {"title": {"order": 1, "description": "Brief summary of your review.", "value-regex": ".{0,500}"}, "review": {"order": 2, "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.", "value-regex": "[\\S\\s]{1,5000}"}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"]}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"]}}}, "invitees": [], "nonreaders": [], "noninvitees": [], "readers": ["everyone", "ICLR.cc/2016/workshop/paper/8/reviewer/11", "ICLR.cc/2016/workshop"], "expdate": 1468501200000}}}, {"tddate": null, "number": null, "ddate": null, "cdate": null, "tmdate": 1458074128877, "tcdate": 1458074128877, "id": "ZY95vpnmnU5Pk8ELfEPA", "invitation": "ICLR.cc/2016/workshop/-/paper/8/review/10", "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "BNYYGWVA1F7PwR1riED4", "signatures": ["ICLR.cc/2016/workshop/paper/8/reviewer/10"], "readers": ["everyone"], "writers": ["ICLR.cc/2016/workshop/paper/8/reviewer/10"], "content": {"title": "", "rating": "5: Marginally below acceptance threshold", "review": "This paper proposes a novel algorithm for SPN, which is both faster and more general. The original SPN algorithm is a EM procedure starting from a fully connected graph and where edges are removed if the weights are zero (see Algorithm 1 in Poon and Domingos, 2011).\n\nAccording to the authors, the original algorithm (called LearnSPN) requires a careful hyper-parameters search in order to work. Their algorithm, MiniSPN, is avoiding this problem and is more general.\n\n\"In the variable partition step\" (which I think is the E-step), their algorithm do \"the two-way Chi-square test of independence\" over of non-missing variables. Overall along with other tricks, this is suppose to make the E-step more greedy (and thus faster and maybe more robust?)/\n\nThey compare their approach to learnSPN on 2 datasets from the Knowledge Graph People collection. On the first task, because of the missing data they don not compare to learnSPN, but as mention by the other reviewer, they could have use the same trick on LearnSPN in order to make it work on this task. On the second task, the performance of MiniSPN and LearnSPN are basically the same, but MiniSPN has an impressive speed up of 500x.\n\nOverall, despite some promising results (very fast with same performance), the lack of analysis of their algorithm and the impact of their contribution make the paper a bit weak. Considering this paper is about an algorithm I m surprised that they never explicitly write it down nor make a light analysis of its convergence rate, guarantees and so on. Most modifications to the original algorithm are not motivated. It is hard to understand their design choices.  ", "confidence": "3: The reviewer is fairly confident that the evaluation is correct"}, "nonreaders": [], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"CMT_id": "", "title": "A Minimalistic Approach to Sum-Product Network Learning for Real Applications", "abstract": "Sum-Product Networks (SPNs) are a class of expressive yet tractable hierarchical graphical models. LearnSPN is a structure learning algorithm for SPNs that uses hierarchical co-clustering to simultaneously identifying similar entities and similar features. The original LearnSPN algorithm assumes that all the variables are discrete and there is no missing data. We introduce a practical, simplified version of LearnSPN, MiniSPN, that runs faster and can handle missing data and heterogeneous features common in real applications. We demonstrate the performance of MiniSPN on standard benchmark datasets and on two datasets from Google's Knowledge Graph exhibiting high missingness rates and a mix of discrete and continuous features.", "pdf": "/pdf/BNYYGWVA1F7PwR1riED4.pdf", "paperhash": "krakovna|a_minimalistic_approach_to_sumproduct_network_learning_for_real_applications", "conflicts": ["harvard.edu", "google.com"], "authors": ["Viktoriya Krakovna", "Moshe Looks"], "authorids": ["vkrakovna@fas.harvard.edu", "madscience@google.com"]}, "tags": [], "invitation": {"rdate": null, "tddate": null, "tmdate": null, "cdate": 1456579934390, "ddate": null, "super": null, "final": null, "duedate": 1460725200000, "tcdate": 1456579934390, "id": "ICLR.cc/2016/workshop/-/paper/8/review/10", "writers": ["ICLR.cc/2016/workshop"], "signatures": ["ICLR.cc/2016/workshop"], "reply": {"pdf": null, "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "BNYYGWVA1F7PwR1riED4", "writers": {"values-regex": "(~.*)|ICLR.cc/2016/workshop/paper/[0-9]+/reviewer/[0-9]+)"}, "signatures": {"values-regex": "(~.*)|ICLR.cc/2016/workshop/paper/[0-9]+/reviewer/[0-9]+)", "description": "Your displayed identity associated with the above content."}, "readers": {"description": "The users who will be allowed to read the above content.", "values": ["everyone"]}, "content": {"title": {"order": 1, "description": "Brief summary of your review.", "value-regex": ".{0,500}"}, "review": {"order": 2, "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.", "value-regex": "[\\S\\s]{1,5000}"}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"]}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"]}}}, "invitees": [], "nonreaders": [], "noninvitees": [], "readers": ["everyone", "ICLR.cc/2016/workshop/paper/8/reviewer/10", "ICLR.cc/2016/workshop"], "expdate": 1468501200000}}}, {"tddate": null, "number": null, "ddate": null, "cdate": null, "tmdate": 1457645145585, "tcdate": 1457645145585, "id": "VAVwGLVglsx0Wk76TAQ5", "invitation": "ICLR.cc/2016/workshop/-/paper/8/review/12", "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "BNYYGWVA1F7PwR1riED4", "signatures": ["ICLR.cc/2016/workshop/paper/8/reviewer/12"], "readers": ["everyone"], "writers": ["ICLR.cc/2016/workshop/paper/8/reviewer/12"], "content": {"title": "Faster, but weakly motivated and analyzed", "rating": "6: Marginally above acceptance threshold", "review": "The authors propose an approach for learning the structure of Sum-Product Networks that extends the original LearnSPN algorithm to cases involving missing data and mixed discrete/continuous feature sets. The original LearnSPN works by recursively co-clustering variables and instances into approximately independent sets and similar instances. \n\nThe proposed algorithm MiniSPN differs from LearnSPN in a few ways. First by using a 2-way Chi squared test of independence, applied only to rows where the variable pairs are not missing, as their \"independence oracle\" rather than the G-test. Continuous data is also binned lazily for each batch of instances by binarizing around the median. The main contribution seems to come from simplifying the mixture model step into a greedier (presumably this is where the computational speedup comes from) approach that discards the cluster penalty prior and uses hard-EM.\n\nThey present two sets of experiments. The first is on data from the Knowledge Graph, and shows their algorithm to achieve better fit and runtime than the alternatives. I am confused by the claim that they could not test the original LearnSPN on this data because of missing data problems, as their fix for missing data seems easily applicable to LearnSPN as well. Experiments on the standard datasets show their method to be competitive with the original LearnSPN but much faster.\n\nI have some concerns about the work. The contributions of the work and their importance are not sufficiently analyzed / discussed. The rationale for replacing the the G-test with Chi-squared is not discussed, and likelihood ratio testing (G-test) should generally be optimal. The extension to handle missing data is very simple and applicable to any of the competing algorithms. The contribution of the work seems to be the large speed increase from the simpler clustering sub-routine and the lazy binning of continuous values. \n", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "nonreaders": [], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"CMT_id": "", "title": "A Minimalistic Approach to Sum-Product Network Learning for Real Applications", "abstract": "Sum-Product Networks (SPNs) are a class of expressive yet tractable hierarchical graphical models. LearnSPN is a structure learning algorithm for SPNs that uses hierarchical co-clustering to simultaneously identifying similar entities and similar features. The original LearnSPN algorithm assumes that all the variables are discrete and there is no missing data. We introduce a practical, simplified version of LearnSPN, MiniSPN, that runs faster and can handle missing data and heterogeneous features common in real applications. We demonstrate the performance of MiniSPN on standard benchmark datasets and on two datasets from Google's Knowledge Graph exhibiting high missingness rates and a mix of discrete and continuous features.", "pdf": "/pdf/BNYYGWVA1F7PwR1riED4.pdf", "paperhash": "krakovna|a_minimalistic_approach_to_sumproduct_network_learning_for_real_applications", "conflicts": ["harvard.edu", "google.com"], "authors": ["Viktoriya Krakovna", "Moshe Looks"], "authorids": ["vkrakovna@fas.harvard.edu", "madscience@google.com"]}, "tags": [], "invitation": {"rdate": null, "tddate": null, "tmdate": null, "cdate": 1456579933900, "ddate": null, "super": null, "final": null, "duedate": 1460725200000, "tcdate": 1456579933900, "id": "ICLR.cc/2016/workshop/-/paper/8/review/12", "writers": ["ICLR.cc/2016/workshop"], "signatures": ["ICLR.cc/2016/workshop"], "reply": {"pdf": null, "forum": "BNYYGWVA1F7PwR1riED4", "replyto": "BNYYGWVA1F7PwR1riED4", "writers": {"values-regex": "(~.*)|ICLR.cc/2016/workshop/paper/[0-9]+/reviewer/[0-9]+)"}, "signatures": {"values-regex": "(~.*)|ICLR.cc/2016/workshop/paper/[0-9]+/reviewer/[0-9]+)", "description": "Your displayed identity associated with the above content."}, "readers": {"description": "The users who will be allowed to read the above content.", "values": ["everyone"]}, "content": {"title": {"order": 1, "description": "Brief summary of your review.", "value-regex": ".{0,500}"}, "review": {"order": 2, "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.", "value-regex": "[\\S\\s]{1,5000}"}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"]}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"]}}}, "invitees": [], "nonreaders": [], "noninvitees": [], "readers": ["everyone", "ICLR.cc/2016/workshop/paper/8/reviewer/12", "ICLR.cc/2016/workshop"], "expdate": 1468501200000}}}, {"tddate": null, "number": null, "replyto": null, "ddate": null, "cdate": null, "tmdate": 1455317263631, "tcdate": 1455317263631, "id": "BNYYGWVA1F7PwR1riED4", "invitation": "ICLR.cc/2016/workshop/-/submission", "forum": "BNYYGWVA1F7PwR1riED4", "signatures": ["~Viktoriya_Krakovna1"], "readers": ["everyone"], "writers": ["~Viktoriya_Krakovna1"], "content": {"CMT_id": "", "title": "A Minimalistic Approach to Sum-Product Network Learning for Real Applications", "abstract": "Sum-Product Networks (SPNs) are a class of expressive yet tractable hierarchical graphical models. LearnSPN is a structure learning algorithm for SPNs that uses hierarchical co-clustering to simultaneously identifying similar entities and similar features. The original LearnSPN algorithm assumes that all the variables are discrete and there is no missing data. We introduce a practical, simplified version of LearnSPN, MiniSPN, that runs faster and can handle missing data and heterogeneous features common in real applications. We demonstrate the performance of MiniSPN on standard benchmark datasets and on two datasets from Google's Knowledge Graph exhibiting high missingness rates and a mix of discrete and continuous features.", "pdf": "/pdf/BNYYGWVA1F7PwR1riED4.pdf", "paperhash": "krakovna|a_minimalistic_approach_to_sumproduct_network_learning_for_real_applications", "conflicts": ["harvard.edu", "google.com"], "authors": ["Viktoriya Krakovna", "Moshe Looks"], "authorids": ["vkrakovna@fas.harvard.edu", "madscience@google.com"]}, "nonreaders": [], "details": {"replyCount": 7, "writable": false, "overwriting": [], "revisions": false, "tags": [], "invitation": {"rdate": null, "tddate": null, "tmdate": null, "cdate": 1454464564200, "ddate": null, "super": null, "final": null, "duedate": 1455833700000, "tcdate": 1454464564200, "id": "ICLR.cc/2016/workshop/-/submission", "writers": ["ICLR.cc/2016/workshop"], "signatures": ["ICLR.cc/2016/workshop"], "readers": ["everyone"], "reply": {"pdf": null, "forum": null, "replyto": null, "writers": {"values-regex": "~.*"}, "signatures": {"values-regex": "~.*", "description": "Your displayed identity associated with the above content."}, "readers": {"description": "The users who will be allowed to read the above content.", "values": ["everyone"]}, "content": {"pdf": {"order": 4, "description": "Either upload a PDF file or provide a direct link to your PDF on ArXiv.", "value-regex": "upload|http://arxiv.org/pdf/.+"}, "title": {"order": 3, "description": "Title of paper.", "value-regex": ".{0,500}"}, "abstract": {"order": 4, "description": "Abstract of paper.", "value-regex": "[\\S\\s]{1,5000}"}, "authors": {"order": 1, "description": "Comma separated list of author names, as they appear in the paper.", "value-regex": "[^,\\n]+(,[^,\\n]+)*"}, "author_emails": {"order": 2, "description": "Comma separated list of author email addresses, in the same order as above.", "value-regex": "[^,\\n]+(,[^,\\n]+)*"}, "conflicts": {"order": 100, "description": "Semi-colon separated list of email domains of people who would have a conflict of interest in reviewing this paper, (e.g., cs.umass.edu;google.com, etc.).", "value-regex": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9]{0,1}\\.([a-zA-Z]{1,6}|[a-zA-Z0-9-]{1,30}\\.[a-zA-Z]{2,3}))+(;[a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9]{0,1}\\.([a-zA-Z]{1,6}|[a-zA-Z0-9-]{1,30}\\.[a-zA-Z]{2,3}))*$"}, "CMT_id": {"order": 5, "value-regex": ".*", "description": "If the paper is a resubmission from the ICLR 2016 Conference Track, enter its CMT ID; otherwise, leave blank."}}}, "invitees": [], "nonreaders": [], "noninvitees": [], "expdate": 1463609700000}}}], "count": 8}