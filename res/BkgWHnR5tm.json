{"notes": [{"id": "BkgWHnR5tm", "original": "BJgwDtd_YQ", "number": 1518, "cdate": 1538087993407, "ddate": null, "tcdate": 1538087993407, "tmdate": 1555979587376, "tddate": null, "forum": "BkgWHnR5tm", "replyto": null, "invitation": "ICLR.cc/2019/Conference/-/Blind_Submission", "content": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 12, "writable": false, "overwriting": [], "revisions": true, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Blind_Submission", "rdate": null, "ddate": null, "expdate": null, "duedate": 1538085600000, "tmdate": 1538142958393, "tddate": null, "super": null, "final": null, "reply": {"signatures": {"values": ["ICLR.cc/2019/Conference"]}, "forum": null, "readers": {"values": ["everyone"]}, "replyto": null, "content": {"authorids": {"values-regex": ".*"}, "authors": {"values": ["Anonymous"]}}, "writers": {"values": ["ICLR.cc/2019/Conference"]}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["~"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": null, "taskCompletionCount": null, "transform": null, "cdate": 1538142958393}}, "tauthor": "OpenReview.net"}, {"id": "Syx06uJmxV", "original": null, "number": 1, "cdate": 1544906949784, "ddate": null, "tcdate": 1544906949784, "tmdate": 1545354492930, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Meta_Review", "content": {"metareview": "Lean in favor\n\nStrengths:  The paper tackles the difficult problem of automatic robot design. The approach uses graph neural\nnetworks to parameterize the control policies, which allows for weight sharing / transfer to new policies even\nas the topology changes.  Understanding how to efficiently explore through non-differentiable changes to the body\nis an important problem (AC). The authors will release the code and environments, which will be useful in an area where there are \ncurrently no good baselines (AC). \n\nWeaknesses: There are concerns (particularly R2, R1) over the lack of a strong baseline, and with the results \nbeing demonstrated on a limited number of environments (R1)  (fish, 2D walker). In response, the authors clarified the nomenclature and\ndescription of a number of the baselines, and added others. AC: there is no submitted video (searches for \"video\" on the PDF text\nproduces no hits); this is seen by the AC as being a real limitation from the perspective of evaluation. \nAC agrees with some of the reviewer remarks that some of the original stated claims are too strong.\n  AC: the simplified fluid model of Mujoco (http://mujoco.org/book/computation.html#gePassive) is\nunable to model the fluid state, in particular the induced fluid vortices that are responsible for a\ngood portion of fish locomotion, i.e., \"Passive and active flow control by swimming fishes and\nmammals\" and other papers. Acknowledging this kind of limitation will make the paper stronger, not weaker;\nthe ML community can learn from much existing work at the interface of biology and fluid mechancis.\n\nThere remain points of contention, i.e., the sufficiency of the baselines. However, the reviewers R2 and R3 have\nnot responded to the detailed replies from the authors, including additional baselines (totaling 5 at present) \nand pointing out that baselines such as CMA-ES (R2) in a continuous space and therefore do not translate in any obvious way\nto the given problem at hand.  \n\nOn balance, with the additional baselines and related clarifications, the AC feels that this paper makes a \nuseful and valid contribution to the field, and will help establish a benchmark in an important area.\nThe authors are strongly encouraged to further state caveats and limitations, and to emphasize why some\ncandidate baseline methods are not readily applicable.\n", "confidence": "3: The area chair is somewhat confident", "recommendation": "Accept (Poster)", "title": "borderline, but lean in favor"}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/Area_Chair1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference/Paper1518/Area_Chair1"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Meta_Review", "rdate": null, "ddate": null, "expdate": null, "duedate": 1541548800000, "tmdate": 1545352809536, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "readers": {"description": "Select all user groups that should be able to read this comment. Selecting 'All Users' will allow paper authors, reviewers, area chairs, and program chairs to view this comment.", "values": ["everyone"]}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values-regex": "ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+"}, "content": {"title": {"order": 1, "value-regex": ".{1,500}", "description": "Brief summary of your review.", "required": true}, "metareview": {"order": 2, "value-regex": "[\\S\\s]{1,5000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.", "required": true}, "recommendation": {"order": 3, "value-dropdown": ["Accept (Oral)", "Accept (Poster)", "Reject"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The area chair is absolutely certain", "4: The area chair is confident but not absolutely certain", "3: The area chair is somewhat confident", "2: The area chair is not sure", "1: The area chair's evaluation is an educated guess"], "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Area_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": false, "taskCompletionCount": null, "transform": null, "cdate": 1545352809536}}}, {"id": "Bkl1xB-3JE", "original": null, "number": 13, "cdate": 1544455398607, "ddate": null, "tcdate": 1544455398607, "tmdate": 1544455398607, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "SJgfTweYk4", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "content": {"title": "We thank the reviewer for the responses", "comment": "We respect the reviewer's opinion and thanks again for the response. But still, we disagree with the claim that the experiment part is weak.\n\nIn terms of the quality of baselines, we already include 5 comparing baselines including previous state-of-the-art. And NGE has the best performance and efficiency by a large margin (2x of previous state-of-the-art).\n\nThe problem is novel / under-explored and there is no existing benchmark.\nWe put in significant efforts to design 2 structure search environments and 3 fine-tuning environments, which requires weeks (even months) of engineering (robotics xml parser, graph xml generator, forward-kinematics, states mapping, etc.). We will release the code and environments after the reviewing period.\n\nWe argue the evaluation of research should not be constrained by the number of experiments. And more focus can be paid on the novelty of algorithms and the inspiration that can be brought to the community.\n\nWe would like to emphasize that our experiments show that, in the high-fidelity simulation like MuJoCo (previous research is conducted either in 2D environments or with simplified self-made engine), no previous approach can efficiently search for athletic walker or swimmer structures.\nUnlike the previous approaches that optimize the graph and the controllers separately, our proposed method jointly optimize discrete graph structure and the continuous controller parameters at the same time. Our joint optimization is a novel formulation, and effective approach that outperforms all the other baseline methods. \n\nThis paper lies in the intersection of graph learning, reinforcement learning, robotics and structure search. Although it is a small step towards automatic robot structure search, we believe it will inspire following work in robotics, graph generation and neural architecture search.\n"}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621617512, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1518/Authors|ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621617512}}}, {"id": "B1xqGNaoyV", "original": null, "number": 12, "cdate": 1544438802280, "ddate": null, "tcdate": 1544438802280, "tmdate": 1544438802280, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "S1x7SdplAX", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "content": {"title": "Response to rebuttal", "comment": "The response makes the paper clearer. The added comparisons are interesting, although they could be more in depth. I keep my response as it was, due to the interesting proposed approach, and the obtained results."}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/AnonReviewer3"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1518/AnonReviewer3", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621617512, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1518/Authors|ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621617512}}}, {"id": "SJgfTweYk4", "original": null, "number": 10, "cdate": 1544255417785, "ddate": null, "tcdate": 1544255417785, "tmdate": 1544255417785, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "BkeBMdpg07", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "content": {"title": "Response to rebuttal", "comment": "Thank you for updating the paper with correct axis labels. Overall, I still feel the experiment section is very weak and the results are only shown in a few selected environments. Hence, I keep my review to be same, i.e., 6."}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/AnonReviewer1"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1518/AnonReviewer1", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621617512, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1518/Authors|ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621617512}}}, {"id": "r1l6OwV-AQ", "original": null, "number": 5, "cdate": 1542698869305, "ddate": null, "tcdate": 1542698869305, "tmdate": 1542698869305, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "content": {"title": "Revised version available -- any updated opinions?", "comment": "Thanks to all for the detailed reviews and corresponding responses.\n\nA revised version has been posted. There is also a useful \"Compare Revisions\" choice when you get to the Revisions page.\n\nIt would be good to hear from the reviewers if their concerns have been addressed, and if they are going to make any score revisions.  There is still some disparity, mainly surrounding the experimental evaluation.\n\nmany thanks   (area chair)"}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/Area_Chair1"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1518/Area_Chair1", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621617512, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1518/Authors|ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621617512}}}, {"id": "r1lAJc6xRm", "original": null, "number": 4, "cdate": 1542670821950, "ddate": null, "tcdate": 1542670821950, "tmdate": 1542670821950, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "content": {"title": "General Response to the Reviewers", "comment": "We thank the reviewers for their response and suggestions. We have updated the paper and summarized the modifications here based on their feedback.\n\n1. The abbreviation for \u201cevolutionary structure search\u201d is now changed from \u201cES\u201d to \u201cESS\u201d to reduce ambiguity. \u201cES\u201d is abbreviated for \u201cevolutionary search\u201d and \u201cevolutionary structure search\u201d simultaneously in our original submission. \n\n2. We rename \u201cGraph Mutation (GM)\u201d into \u201cGraph Mutation with Uncertainty (GM-UC)\u201d.\n\n3. We added additional baselines from previous literature to benchmark the performance of our algorithm, and show that our proposed algorithm has significant improvement both quantitatively and qualitatively.\n\nIn particular, we added the following baselines:\n\na. ESS-Sims (Sims, 1994)\nThis method was proposed in (Sims, 1994), and applied in (Cheney, 2014), (Taylor, 2017), which has been the most classical and successful algorithm in automatic robotic design.\nIn the original paper, the author used evolutionary strategy to train a human-engineered one-layer neural network. With the recent progress of the robotics and reinforcement learning, we replaced the network with a 3-layer MLP and trained it with PPO instead of evolutionary strategy.\n\nb. ESS-Sims-AF\nIn the original (Sims, 1994), amortized fitness is not used.\nAlthough amortized fitness could not be applied in ESS since the shape of network parameters is changing, amortized fitness could be applied among agents with the same topology. We named this variant of ESS-Sims as \u201cESS-Sims-AF\u201d.\nThis algorithm is essentially the old \u201cES\u201d baseline in the earliest revision of the paper.\n\nc. ESS-GM-UC\n\u201cESS-GM-UC\u201d is a variant of \u201cESS-Sims-AF\u201d combined with Graph Mutation with Uncertainty. We would also want to explore how will GM-UC affect the performance without the use of structured model like GNN.\n\nd. ESS-BodyShare\nWe would also want to answer the question of whether the graph neural network is needed.\nAs suggested by Reviewer 3, besides unstructured models like fully-connected network, we designed a structured model by removing the message propagation mode and named it \u201cESS-BodyShare\u201d\n\ne. RGS (random graph search)\nThe same baseline as described in the earlier revision.\n\nThe final performance the NGE and baselines are now shown in Figure 2 in the latest revision, which we summarize as the following table. \n\n\t       |       NGE           | ESS-Sims | ESS-Sims-AF  | ESS-GM-UC   | ESS-BodyShare |  RGS\nFish        |  ** 70.21  ** |    38.32     |       51.24         |      54.40         |          54.97          |  20.96\nWalker   | ** 4157.9 ** |    1804.4   |      2486.9        |     2458.19     |          2185.1        |  1777.3\n\nThe results show that NGE is significantly better than previous approaches and baselines. \n\n4. We improved the writing of the paper.\nIn particular, we added more literature review on related work as requested by the reviewers.\nAnd we re-organized the writing of section 3.1, 3.2, 3.4, so that it is easier to understand and cause less confusion.\n\nSims, 1994, \"Evolving virtual creatures.\" Proceedings of the 21st annual conference on Computer graphics and interactive techniques. ACM, 1994.\n\nCheney, 2014, et al. \"Unshackling evolution: Evolving soft robots with multiple materials and a powerful generative encoding.\" ACM SIGEVOlution 7.1 (2014): 11-23.\n\nTaylor, 2017. \"Evolution in virtual worlds.\" arXiv preprint arXiv:1710.06055 (2017)."}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621617512, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1518/Authors|ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621617512}}}, {"id": "rkeEvt6xA7", "original": null, "number": 3, "cdate": 1542670684150, "ddate": null, "tcdate": 1542670684150, "tmdate": 1542670684150, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "SygmVm7XpQ", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "content": {"title": "Response to Reviewer 2", "comment": "We are afraid that there seems to be some confusion regarding our paper.  We apologize if this is caused by the lack of clarity in the use of abbreviation \u201cES\u201d (see general response). In the latest revision, \u201cEvolutionary structure search\u201d is abbreviated as \u201cESS\u201d for clarity. We emphasize that in the paper, NO \u201cevolutionary strategy\u201d but rather PPO is used to train the policy (see Section 2.1 and 3.2).\n\nWe hope the reviewer can take time to revisit the paper in the light of this inconsistency. Also, we now have 5 baselines from previous research and modern variants, which we believe further showcases our contributions.\n\nQ1: The experiments do not include any strong baseline\n\nWe added more baselines to further strengthen the significance of our work with respect to the previous approaches.\n\nThe baselines now include (a)\u201cESS-Sims\u201d (Sims, 1994), (Cheney, 2014), (Taylor, 2017), (b) ESS-Sims-AF, (c) ESS-GM-UC, (d) ESS-BodyShare and (5) Random graph search. We refer to the details of each baseline in the general response.\n\n\t        |      NGE         | ESS-Sims  | ESS-Sims-AF  | ESS-GM-UC | ESS-BodyShare |  RGS\nfish         | **70.21**    |    38.32     |       51.24         |      54.40       |          54.97         |  20.96\nWalker   |  **4157.9** |    1804.4   |      2486.9        |     2458.19   |          2185.1        |  1777.3\n\nThe results show that NGE is significantly better than previous approaches and baselines. We did an ablation study by sequentially adding each sub-module of NGE separately. The table shows that submodules are effective and increase the performance of graph search.\n\nQ2: a) Optimizing both the controller and the hardware has been previously studied in the literature. Is it worth using a neural graph? b) All algorithms should optimize both G and theta for a fair comparison.\n\nBy \u201coptimizing both G and theta\u201d, we meant to indicate that the learned controllers can be transferred to the next generation even if the topologies are changed (instead of throwing away old controllers). We note that only NGE among all the baselines has the ability to do that. Graph neural network formulation is KEY here, enabling it to perform this efficient policy transfer.\nTo the best of our knowledge, the traditional methods require re-optimizing theta from scratch for each different topology, which is computationally demanding and breaks the joint-optimization. \nNGE approximately doubles the performance of previous approach (Sims, 1994) as shown in Q1.\n\nPlease refer to Section 3.1 and Section 3.4 for more details.\n\nQ3: You should use an existing ES implementation (e.g., from some well-known package) instead of a naive implementation, and as additional baseline also CMA-ES.\n\nAgain, we apologize for the confusing use of \u201cES\u201d abbreviation. Evolutionary strategy is not used in the paper. We invite the reviewer to re-read our paper, since it seems to have led to a major misunderstanding.\nCMA-ES updates and utilize the covariance matrix of sampling distribution, which is not directly applicable to discrete structure optimization. We believe it will be a valuable future research direction.\n\nQ4: Providing the same computational budget seem rather arbitrary and depends on implementation.\n\nWe are unsure what the reviewer is indicating, and would appreciate the additional clarification.\nIn terms of the computational budget for each experiment, we compared different algorithms under different computational budget metrics, more specifically,  \u201cwall-clock time\u201d, \u201cnumber of updates\u201d, and the \u201cfinal converged performance\u201d. NGE performs best among all algorithms.\nWe emphasize the fact that wall-clock time is a more common and realistic metric for comparing the structure search in practice. \n\nWe agree that computational budget depends on implementation, and the curves in the paper are plotted based on the number of iterations/parameter update, which is independent of the implementation.\n\nQ5: The writing of the paper\n\nWe sincerely thank the reviewer for the suggestions. We updated the changes in the latest version accordingly."}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621617512, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1518/Authors|ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621617512}}}, {"id": "BkeBMdpg07", "original": null, "number": 1, "cdate": 1542670349440, "ddate": null, "tcdate": 1542670349440, "tmdate": 1542670511930, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "rJxUPOqhhX", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "content": {"title": "Response to Reviewer 1", "comment": "We thank the reviewer for the suggestions.\n\nQ1: Robot design were explored in (Sims, 1994) etc. The novelty of the paper is fairly incremental.\n\nWe respectfully disagree and believe our contributions are significant. We note that only NGE among all the baselines has the ability to optimize both the graph G and the controller parameters. Graph neural network formulation is KEY here, enabling it to perform this efficient policy transfer. To the best of our knowledge, the traditional methods (such as (Sims, 1994)) require re-optimizing parameters of the controllers from scratch for each different topologies, which is computationally demanding and breaks the joint-optimization. \n\nTo further showcase our work with respect to prior art, we added (Sims, 1994) as an additional baseline in the latest revision. We refer the reviewer to the general response for details. NGE has about 2x performance of (Sims, 1994) in both fish and walker environments. Moreover, we argue the videos of (Sims, 1994) might be confusing as it mixes the results of policy evolution from human-designed robots and structure evolution. \n\nQ2: Can it be applied to more complex morphologies? Humanoid etc. maybe?\nNGE can be applied to evolve humanoids, however, there are two major difficulties in doing that in practice.\n1. Training humanoid controllers is of orders of magnitude more difficult than training cheetah (Schulman, 2017).\n2. To evolve realistic humanoid structure (e.g. hands, symmetrical limbs), one would need to have more realistic environments that better reflect tasks and complexity in the real world.\nHowever, we agree that this is a very interesting direction for the future.\n\nQ3: Comparison to more baseline, for example models with no message passing.\n\nWe thank the reviewer for pointing out the baseline of no message passing in GNN, which we named as ESS-BodyShare. \n\nIn the latest revision, we have 5 baselines from previous research and modern variants, which further showcases the significance of our work. In general, NGE has significant improvement both quantitatively and qualitatively. We refer the reviewer to the general response for further information.\n\nSpecifically for ESS-BodyShare baseline:\n\t       |  NGE     | ESS-BodyShare\nfish         |  70.21   |  54.97    (78.3% of NGE)    \nWalker   |  4157.9 |   2185.1 (52.5% of NGE)\n\nIn environment where global information is needed (for example, walker with multiple rigid body contact), the performance is jeopardized. But in an easier environment, message passing is less needed.\n\n\nQ4: Clarification of Figure-4 (Section-4.2)\n\nOur aim was to show that in the case where the human-engineered topology needs to be preserved, it is better to co-evolve the attributes and controllers with NGE rather than only training the controllers (controllers are trained from scratch for both NGE and baselines).\n\nThe x-axis was scaled according to the number of updates. We apologize for the lack of clarity. We revised the x-axis from \u201cgenerations\u201d to parameter \u201cupdates\u201d in the latest revision.\n\nIn the latest revision, we also included the curve where the topologies are allowed to be changed, which leads to better performance, but does not necessarily preserve the initial structure.\n\nSchulman, 2017. \"Proximal policy optimization algorithms.\" arXiv preprint arXiv:1707.06347 (2017)."}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621617512, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1518/Authors|ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621617512}}}, {"id": "S1x7SdplAX", "original": null, "number": 2, "cdate": 1542670394979, "ddate": null, "tcdate": 1542670394979, "tmdate": 1542670394979, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "HJg1qgpZTm", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "content": {"title": "Response to Reviewer 3", "comment": "We thank the reviewer for the reading and suggestions of our paper.\n\nQ1: The exact difference between the proposed method and the ES baseline is not as clear as it could be.\n\nWe agree and apologize for the lack of clarity in some parts of our paper. We renamed all the models based on the original papers and their properties. We refer the reviewer to general response for further details of each baseline algorithms.\nWe also improved clarity in the revised version.\n\nQ2: The second point is that the proposed approach seems to modify a few things from the ES baseline.\n\nWe thank the reviewer for the insightful suggestion. In the latest version, to test the efficacy of each submodule of NGE, the baselines now include the algorithm with the inclusion of the pruning step, and the algorithms with AF and without AF using MLP.\n\nMore specifically, the baselines are named:\n\n1. ESS-Sims\nIt is the baseline algorithm without the use of AF, as use by (Sims, 1994), (Cheney, 2014) and (Taylor, 2017).\n2. ESS-Sims-AF\nThe modern variant of ESS-Sims with the inclusion of AF.\n3. ESS-GM-UC\nThe modern variant of ESS-Sims with the inclusion of AF and graph mutation with uncertainty (pruning).\nFor this baseline, we included the pruning module on top of ESS-Sims-AF. Similar to the original baselines available, we performed a grid search of hyperparameters and plot the average performance of the best set of hyperparameters.\n\n\t       |        NGE         | ESS-Sims  |  ESS-Sims-AF  | ESS-GM-UC | ESS-BodyShare |  RGS\nfish        |  **70.21**    |    38.32      |       51.24         |      54.40        |          54.97         |  20.96\nWalker  |  **4157.9**  |    1804.4    |      2486.9        |     2458.19     |          2185.1       |  1777.3\n\nNotice that GM-UC has a lower performance gain with the fully-connected network (ESS-Sims) than with GNN. We speculate that this happens in ESS-Sims because the controller is less dependent on the graph structure, and thus the fitness does not well capture the information about the topology. Thus, GM-UC is not able to extract as much information as with GNN.\n\nOn the other hand, the use of AF can greatly affect the performance. The previous approach ESS-Sims can only get 38.32 / 1804 average final reward for fish and walker, respectively. The performance of walker is even very close to random graph search with no evolution. With the help of AF, the performance increases from 38.32 to 51.24 and 1804.4 to 2486.9, respectively.\n"}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/Authors"], "readers": ["everyone"], "nonreaders": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"], "writers": ["ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Comment", "rdate": null, "ddate": null, "expdate": null, "duedate": null, "tmdate": 1543621617512, "tddate": null, "super": null, "final": null, "reply": {"forum": "BkgWHnR5tm", "replyto": null, "readers": {"description": "Select all user groups that should be able to read this comment.", "value-dropdown-hierarchy": ["everyone", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"]}, "nonreaders": {"values": ["ICLR.cc/2019/Conference/Paper1518/Reviewers/Unsubmitted"]}, "signatures": {"description": "", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+|ICLR.cc/2019/Conference/Paper1518/Authors|ICLR.cc/2019/Conference/Paper1518/Area_Chair[0-9]+|ICLR.cc/2019/Conference/Program_Chairs"}, "writers": {"description": "Users that may modify this record.", "values-copied": ["ICLR.cc/2019/Conference", "{signatures}"]}, "content": {"title": {"order": 0, "value-regex": ".{1,500}", "description": "Brief summary of your comment.", "required": true}, "comment": {"order": 1, "value-regex": "[\\S\\s]{1,5000}", "description": "Your comment or reply (max 5000 characters).", "required": true}}}, "signatures": ["ICLR.cc/2019/Conference"], "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers", "ICLR.cc/2019/Conference/Paper1518/Authors", "ICLR.cc/2019/Conference/Paper1518/Area_Chairs", "ICLR.cc/2019/Conference/Program_Chairs"], "noninvitees": [], "writers": ["ICLR.cc/2019/Conference"], "multiReply": true, "taskCompletionCount": null, "transform": null, "cdate": 1543621617512}}}, {"id": "SygmVm7XpQ", "original": null, "number": 3, "cdate": 1541776171249, "ddate": null, "tcdate": 1541776171249, "tmdate": 1541776171249, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Review", "content": {"title": "Interesting approach, inconclusive experiments", "review": "This paper proposes an approach for automatic robot design based on Neural graph evolution.\nThe overall approach has a flavor of genetical algorithms, as it also performs evolutionary operations on the graph, but it also allows for a better mechanism for policy sharing across the different topologies, which is nice.\n\nMy main concern about the paper is that, currently, the experiments do not include any strong baseline (the ES currently is not a strong baseline, see comments below). \nThe experiments currently demonstrate that optimizing both controller and hardware is better than optimizing just the controller, which is not surprising and is a phenomenon which has been previously studied in the literature.\nWhat instead is missing is an answer to the question: Is it worth using a neural graph? what are the advantages and disadvantages compared to previous approaches?\nI would like to see additional experiments to answer this questions.\n\nIn particular, I believe that any algorithms you compare against, you should optimize both G and theta, since optimizing purely the hardware is unfair.\nYou should use an existing ES implementation (e.g., from some well-known package) instead of a naive implementation, and as additional baseline also CMA-ES. \nIf you can also compare against one or two algorithms of your choice from the recent literature it would also give more value to the comparison.\n\nDetailed comments:\n- in the abstract you say that \"NGE is the first algorithm that can automatically discover complex robotic graph structures\". This statement is ambiguous and potentially unsupported by evidence. how do you define complex? that can or that did discover?\n- in the introduction you mention that automatic robot design had limited success. This is rather subject, and I would tend to disagree.  Moreover, the same limitations that apply to other algorithms to make them successful, in my opinion, apply to your proposed algorithm (e.g., difficulty to move from simulated to real-world).\n- The digression at the bottom of the first page about neural architecture search seem out of context and interrupts the flow of the introduction. What is the point that you are trying to make? Also, note that some of the algorithms that you are citing there have indeed applied beyond architecture search, eg. Bayesian optimization is used for gait optimization in robotics, and Genetic algorithms have been used for automatic robot design.\n- The stated contributions number 3 and 5 are not truly contributions. #3 is so generic that a large part of the previous literature on the topic fall under this category -- not new. #5 is weak, and tell us more about the limitations of random search and naive ES than necessarily a merit of your approach. \n- Sec 2.2: \"(GNNs) are very effective\" effective at what? what is the metric that you consider?\n- Sec 3 \"(PS), where weights are reused\" can you already go into more details or refer to later sections?\n- First line page 4 you mention AF, without introducing the acronym ever before.\n- Sec 3.1: the statements about MB and MF algorithms are inaccurate. Model-based RL algorithms can work in real-time (e.g. http://proceedings.mlr.press/v78/drews17a/drews17a.pdf) and have been shown to have same asymptotic performance of MB controllers for simple robot control (e.g. https://arxiv.org/abs/1805.12114) \n- \"to speed up and trade off between evaluating fitness and evolving new species\" Unclear sentence. speed up what? why is this a trade-off?\n- Sec 3.4 can you recap all the parameters after eq.11? going through Sec 3.2 and 2.2 to find them is quite annoying.\n- Sec 4.1:  would argue that computational cost is rarely a concern among evolutionary algorithms. The cost of evaluating the function is typically more pressing, and as a result it is important to have algorithms that can converge within a small number of iterations/generations.\n- Providing the same computational budget seem rather arbitrary at the moment, and it heavily depends from implementation. How many evaluations do you perform for each method? why not having the same budget of experiments?  ", "rating": "5: Marginally below acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/AnonReviewer2"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Review", "cdate": 1542234212639, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335963594, "tmdate": 1552335963594, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "HJg1qgpZTm", "original": null, "number": 2, "cdate": 1541685383109, "ddate": null, "tcdate": 1541685383109, "tmdate": 1541685383109, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Review", "content": {"title": "Interesting paper on co-optimizing robot structure and control", "review": "This paper discusses the optimization of robot structures, combined with their controllers. The authors propose a scheme\nbased on a graph representation of the robot structure, and a graph-neural-network as controllers. The experiments show\nthat the proposed scheme is able to produce walking and swimming robots in simulation. The results in this paper are impressive, and the paper seems free of technical errors. \n\nThe main criticism I have is that I found the paper harder to read. In particular, the exact difference between the proposed method and the ES baseline is not as clear as it could be. This makes the contribution of this paper in terms of the method\nhard to judge. Please include further description of the ES cost function and algorithm in the main body of the paper.\n\nThe second point is that the proposed approach seems to modify a few things from the ES baseline. The efficacy of the separate modifications should be tested. Therefore I would like to see experiments with the ES cost function, but with\ninclusion of the pruning step, and experiments with the AF-function but without the pruning step.", "rating": "8: Top 50% of accepted papers, clear accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/AnonReviewer3"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Review", "cdate": 1542234212639, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335963594, "tmdate": 1552335963594, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}, {"id": "rJxUPOqhhX", "original": null, "number": 1, "cdate": 1541347421872, "ddate": null, "tcdate": 1541347421872, "tmdate": 1541547913262, "tddate": null, "forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "invitation": "ICLR.cc/2019/Conference/-/Paper1518/Official_Review", "content": {"title": "Direct application of ES with NerveNet for fitness evaluation", "review": "[Summary]:\nThis paper tackles the problem of automatic robot design. The most popular approach to doing this has been evolutionary methods which work by evolving morphology of agents in a feed-forward manner using a propagation and mutation rules. This is a non-differentiable process and relies on maintaining a large pool of candidates out of which best ones are chosen with the highest fitness. In robot design for a given task using rewards, training each robot design using RL with rewards is an expensive process and not scalable. This paper uses graph network to train each morphology using RL. Thereby, allowing the controller to share parameters and reuse information across generations. This expedites the score function evaluation improving the time complexity of the evolutionary process.\n\n[Strengths]:\nThis paper shows some promise when graph network-based controllers augmented with evolutionary algorithms. Paper is quite easy to follow.\n\n[Weaknesses and Clarifications]:\n=> Robot design area has been explored extensively in classical work of Sims (1994) etc. using ES. Given that, the novelty of the paper is fairly incremental as it uses NerveNet to evaluate fitness and ES for the main design search.\n=> Environment: The experimental section of the paper can be further improved. The approach is evaluated only in three cases: fish, walker, cheetah. Can it be applied to more complex morphologies? Humanoid etc. maybe?\n=> Baselines: The comparison provided in the paper is weak. At first, it compares to random graph search and ES. But there are better baselines possible. One such example would be to have a network for each body part and share parameters across each body part. This network takes some identifying information (ID, shape etc.) about body part as input. As more body parts are added, more such network modules can be added. How would the given graph network compare to this? This baseline can be thought of a shared parameter graph with no message passing.\n=> The results shown in Figure-4 (Section-4.2) seems unclear to me. As far as I understand, the model starts with hand-engineered design and then finetuned using evolutionary process. However, the original performance of the hand-engineered design is surprisingly bad (see first data point in any plot in Figure-4). Does the controller also start from scratch? If so, why? Also, it is not clear what is the meaning of generations if the graph is fixed, can't it be learned altogether at once?\n\n[Recommendation]:\nI request the authors to address the comments raised above. Overall, this is a reasonable paper but experimental section needs much more attention.", "rating": "6: Marginally above acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "signatures": ["ICLR.cc/2019/Conference/Paper1518/AnonReviewer1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": true, "forumContent": {"title": "Neural Graph Evolution: Towards Efficient Automatic Robot Design", "abstract": "Despite the recent successes in robotic locomotion control, the design of robot relies heavily on human engineering. Automatic robot design has been a long studied subject, but the recent progress has been slowed due to the large combinatorial search space and the difficulty in evaluating the found candidates. To address the two challenges, we formulate automatic robot design as a graph search problem and perform evolution search in graph space. We propose Neural Graph Evolution (NGE), which performs selection on current candidates and evolves new ones iteratively. Different from previous approaches, NGE uses graph neural networks to parameterize the control policies, which reduces evaluation cost on new candidates with the help of skill transfer from previously evaluated designs. In addition, NGE applies Graph Mutation with Uncertainty (GM-UC) by incorporating model uncertainty, which reduces the search space by balancing exploration and exploitation. We show that NGE significantly outperforms previous methods by an order of magnitude. As shown in experiments, NGE is the first algorithm that can automatically discover kinematically preferred robotic graph structures, such as a fish with two symmetrical flat side-fins and a tail, or a cheetah with athletic front and back legs. Instead of using thousands of cores for weeks, NGE efficiently solves searching problem within a day on a single 64 CPU-core Amazon EC2\nmachine.\n", "keywords": ["Reinforcement learning", "graph neural networks", "robotics", "deep learning", "transfer learning"], "authorids": ["tingwuwang@cs.toronto.edu", "henryzhou@cs.toronto.edu", "fidler@cs.toronto.edu", "jba@cs.toronto.edu"], "authors": ["Tingwu Wang", "Yuhao Zhou", "Sanja Fidler", "Jimmy Ba"], "TL;DR": "Automatic robotic design search with graph neural networks", "pdf": "/pdf/7d15fa3b496856b30bd4fb1cfe3ae4f4ccba6d01.pdf", "paperhash": "wang|neural_graph_evolution_towards_efficient_automatic_robot_design", "_bibtex": "@inproceedings{\nwang2018neural,\ntitle={Neural Graph Evolution: Automatic Robot Design},\nauthor={Tingwu Wang and Yuhao Zhou and Sanja Fidler and Jimmy Ba},\nbooktitle={International Conference on Learning Representations},\nyear={2019},\nurl={https://openreview.net/forum?id=BkgWHnR5tm},\n}"}, "tags": [], "invitation": {"id": "ICLR.cc/2019/Conference/-/Paper1518/Official_Review", "cdate": 1542234212639, "expdate": 1552335264000, "duedate": 1541196000000, "reply": {"forum": "BkgWHnR5tm", "replyto": "BkgWHnR5tm", "readers": {"description": "The users who will be allowed to read the reply content.", "values": ["everyone"]}, "nonreaders": {"values": []}, "signatures": {"description": "How your identity will be displayed with the above content.", "values-regex": "ICLR.cc/2019/Conference/Paper1518/AnonReviewer[0-9]+"}, "writers": {"description": "Users that may modify this record.", "values": ["ICLR.cc/2019/Conference"]}, "content": {"title": {"order": 1, "value-regex": ".{0,500}", "description": "Brief summary of your review.", "required": true}, "review": {"order": 2, "value-regex": "[\\S\\s]{1,200000}", "description": "Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons (max 200000 characters).", "required": true}, "rating": {"order": 3, "value-dropdown": ["10: Top 5% of accepted papers, seminal paper", "9: Top 15% of accepted papers, strong accept", "8: Top 50% of accepted papers, clear accept", "7: Good paper, accept", "6: Marginally above acceptance threshold", "5: Marginally below acceptance threshold", "4: Ok but not good enough - rejection", "3: Clear rejection", "2: Strong rejection", "1: Trivial or wrong"], "required": true}, "confidence": {"order": 4, "value-radio": ["5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature", "4: The reviewer is confident but not absolutely certain that the evaluation is correct", "3: The reviewer is fairly confident that the evaluation is correct", "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper", "1: The reviewer's evaluation is an educated guess"], "required": true}}}, "multiReply": false, "tcdate": 1552335963594, "tmdate": 1552335963594, "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2019/Conference"], "invitees": ["ICLR.cc/2019/Conference/Paper1518/Reviewers"], "noninvitees": [], "signatures": ["ICLR.cc/2019/Conference"]}}}], "count": 13}