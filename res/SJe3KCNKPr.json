{"notes": [{"id": "SJe3KCNKPr", "original": "HJx3hU__DH", "number": 1262, "cdate": 1569439364077, "ddate": null, "tcdate": 1569439364077, "tmdate": 1577168287481, "tddate": null, "forum": "SJe3KCNKPr", "replyto": null, "invitation": "ICLR.cc/2020/Conference/-/Blind_Submission", "content": {"title": "Dual-module Inference for Efficient Recurrent Neural Networks", "authors": ["Liu Liu", "Lei Deng", "Shuangchen Li", "Jingwei Zhang", "Yihua Yang", "Zhenyu Gu", "Yufei Ding", "Yuan Xie"], "authorids": ["liu_liu@ucsb.edu", "leideng@ucsb.edu", "shuangchen.li@alibaba-inc.com", "jingwei.zhang@alibaba-inc.com", "yihua.yang@alibaba-inc.com", "zhenyu.gu@alibaba-inc.com", "yufeiding@cs.ucsb.edu", "yuanxie@ece.ucsb.edu"], "keywords": ["memory-efficient RNNs", "dynamic execution", "computation skipping"], "TL;DR": "We accelerate RNN inference by dynamically reducing redundant memory access using a mixture of accurate and approximate modules.", "abstract": "Using Recurrent Neural Networks (RNNs) in sequence modeling tasks is promising in delivering high-quality results but challenging to meet stringent latency requirements because of the memory-bound execution pattern of RNNs. We propose a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference. Leveraging the error-resilient feature of nonlinear activation functions used in RNNs, we propose to use a lightweight little module that approximates the original RNN layer, which is referred to as the big module, to compute activations of the insensitive region that are more error-resilient. The expensive memory access and computation of the big module can be reduced as the results are only used in the sensitive region. Our method can reduce the overall memory access by 40% on average and achieve 1.54x to 1.75x speedup on CPU-based server platform with negligible impact on model quality.", "pdf": "/pdf/bbba08e21d980106cb1a43ea05a49ca113bc3fd3.pdf", "paperhash": "liu|dualmodule_inference_for_efficient_recurrent_neural_networks", "original_pdf": "/attachment/5913ec60c44cf99f8c6399aca41c22aaf4d017eb.pdf", "_bibtex": "@misc{\nliu2020dualmodule,\ntitle={Dual-module Inference for Efficient Recurrent Neural Networks},\nauthor={Liu Liu and Lei Deng and Shuangchen Li and Jingwei Zhang and Yihua Yang and Zhenyu Gu and Yufei Ding and Yuan Xie},\nyear={2020},\nurl={https://openreview.net/forum?id=SJe3KCNKPr}\n}"}, "signatures": ["ICLR.cc/2020/Conference"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference"], "details": {"replyCount": 7, "writable": false, "overwriting": [], "revisions": true, "tags": [], "invitation": {"reply": {"readers": {"values-regex": ".*"}, "writers": {"values": ["ICLR.cc/2020/Conference"]}, "signatures": {"values": ["ICLR.cc/2020/Conference"]}, "content": {"spotlight_video": {"value-regex": ".*"}, "full_presentation_video": {"value-regex": ".*"}, "original_pdf": {"required": false, "description": "Upload a PDF file that ends with .pdf", "value-regex": ".*"}, "appendix": {"value-regex": ".*"}, "authorids": {"values-regex": ".*"}, "poster": {"value-regex": ".*"}, "authors": {"values": ["Anonymous"]}, "slides": {"value-regex": ".*"}}}, "final": [], "signatures": ["ICLR.cc/2020/Conference"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference"], "invitees": ["ICLR.cc/2020/Conference"], "noninvitees": [], "tcdate": 1569271260237, "tmdate": 1593459412141, "id": "ICLR.cc/2020/Conference/-/Blind_Submission"}}, "tauthor": "OpenReview.net"}, {"id": "FsRc1dXHfa", "original": null, "number": 1, "cdate": 1576798718816, "ddate": null, "tcdate": 1576798718816, "tmdate": 1576800917754, "tddate": null, "forum": "SJe3KCNKPr", "replyto": "SJe3KCNKPr", "invitation": "ICLR.cc/2020/Conference/Paper1262/-/Decision", "content": {"decision": "Reject", "comment": "This paper presents an efficient RNN architecture that dynamically switches big and little modules during inference. In the experiments, authors demonstrate that the proposed method achieves favorable speed up compared to baselines, and the contribution is orthogonal to weight pruning. \nAll reviewers agree that the paper is well-written and that the proposed method is easy to understand and reasonable. However, its methodological contribution is limited because the core idea is essentially the same as distillation, and dynamically gating the modules is a common technique in general. Moreover, I agree with the reviewers that the method should be compared with more other state-of-the-art methods in this context. Accelerating or compressing DNNs are intensively studied topics and there are many approaches other than weight pruning, as authors also mention in the paper. As the possible contribution of the paper is more on the empirical side, it is necessary to thoroughly compare with other possible approaches to show that the proposed method is really a good solution in practice. For these reasons, I\u2019d like to recommend rejection. \n", "title": "Paper Decision"}, "signatures": ["ICLR.cc/2020/Conference/Program_Chairs"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference/Program_Chairs"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Dual-module Inference for Efficient Recurrent Neural Networks", "authors": ["Liu Liu", "Lei Deng", "Shuangchen Li", "Jingwei Zhang", "Yihua Yang", "Zhenyu Gu", "Yufei Ding", "Yuan Xie"], "authorids": ["liu_liu@ucsb.edu", "leideng@ucsb.edu", "shuangchen.li@alibaba-inc.com", "jingwei.zhang@alibaba-inc.com", "yihua.yang@alibaba-inc.com", "zhenyu.gu@alibaba-inc.com", "yufeiding@cs.ucsb.edu", "yuanxie@ece.ucsb.edu"], "keywords": ["memory-efficient RNNs", "dynamic execution", "computation skipping"], "TL;DR": "We accelerate RNN inference by dynamically reducing redundant memory access using a mixture of accurate and approximate modules.", "abstract": "Using Recurrent Neural Networks (RNNs) in sequence modeling tasks is promising in delivering high-quality results but challenging to meet stringent latency requirements because of the memory-bound execution pattern of RNNs. We propose a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference. Leveraging the error-resilient feature of nonlinear activation functions used in RNNs, we propose to use a lightweight little module that approximates the original RNN layer, which is referred to as the big module, to compute activations of the insensitive region that are more error-resilient. The expensive memory access and computation of the big module can be reduced as the results are only used in the sensitive region. Our method can reduce the overall memory access by 40% on average and achieve 1.54x to 1.75x speedup on CPU-based server platform with negligible impact on model quality.", "pdf": "/pdf/bbba08e21d980106cb1a43ea05a49ca113bc3fd3.pdf", "paperhash": "liu|dualmodule_inference_for_efficient_recurrent_neural_networks", "original_pdf": "/attachment/5913ec60c44cf99f8c6399aca41c22aaf4d017eb.pdf", "_bibtex": "@misc{\nliu2020dualmodule,\ntitle={Dual-module Inference for Efficient Recurrent Neural Networks},\nauthor={Liu Liu and Lei Deng and Shuangchen Li and Jingwei Zhang and Yihua Yang and Zhenyu Gu and Yufei Ding and Yuan Xie},\nyear={2020},\nurl={https://openreview.net/forum?id=SJe3KCNKPr}\n}"}, "tags": [], "invitation": {"reply": {"writers": {"description": "How your identity will be displayed.", "values-regex": ["ICLR.cc/2020/Conference/Program_Chairs"]}, "signatures": {"values": ["ICLR.cc/2020/Conference/Program_Chairs"], "description": "How your identity will be displayed."}, "content": {"decision": {"value-radio": ["Accept (Spotlight)", "Accept (Talk)", "Accept (Poster)", "Reject"], "description": "Decision", "required": true, "order": 2}, "title": {"value": "Paper Decision", "required": true, "order": 1}, "comment": {"value-regex": "[\\S\\s]{0,5000}", "description": "", "required": false, "order": 3}}, "forum": "SJe3KCNKPr", "replyto": "SJe3KCNKPr", "readers": {"values": ["everyone"], "description": "Select all user groups that should be able to read this comment."}, "nonreaders": {"values": []}}, "expdate": 1576854540000, "duedate": 1576853940000, "multiReply": false, "readers": ["everyone"], "invitees": ["ICLR.cc/2020/Conference/Program_Chairs"], "tcdate": 1576795717518, "tmdate": 1576800267843, "super": "ICLR.cc/2020/Conference/-/Decision", "signatures": ["ICLR.cc/2020/Conference"], "writers": ["ICLR.cc/2020/Conference"], "id": "ICLR.cc/2020/Conference/Paper1262/-/Decision"}}}, {"id": "SyxXFobKsr", "original": null, "number": 3, "cdate": 1573620603137, "ddate": null, "tcdate": 1573620603137, "tmdate": 1573620603137, "tddate": null, "forum": "SJe3KCNKPr", "replyto": "HkxgREa4Kr", "invitation": "ICLR.cc/2020/Conference/Paper1262/-/Official_Comment", "content": {"title": "Response to Review #1", "comment": "Thank you so much for your positive feedback on our work. Here are our answers to your questions.\n(1)\tFigure 2 shows the dynamic region distribution of neuron activations, i.e., outputs of gates in LSTM. The x-axis consists of the first one hundred neurons and the y-axis is across timesteps. The left and right are of two different inputs. The key message is that the locations of neurons in the insensitive region are dynamically changing across timesteps and inputs.\n(2)\tThe distribution of the input gate values is from a standard LSTM with 1500 units trained by 40 epochs on PTB, following the PyTorch word language modeling example. Please note that our method does not rely on the unipolar or bipolar distribution of outputs; the criterions to search the insensitive region can cover both cases as in Equation (5).\n"}, "signatures": ["ICLR.cc/2020/Conference/Paper1262/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Dual-module Inference for Efficient Recurrent Neural Networks", "authors": ["Liu Liu", "Lei Deng", "Shuangchen Li", "Jingwei Zhang", "Yihua Yang", "Zhenyu Gu", "Yufei Ding", "Yuan Xie"], "authorids": ["liu_liu@ucsb.edu", "leideng@ucsb.edu", "shuangchen.li@alibaba-inc.com", "jingwei.zhang@alibaba-inc.com", "yihua.yang@alibaba-inc.com", "zhenyu.gu@alibaba-inc.com", "yufeiding@cs.ucsb.edu", "yuanxie@ece.ucsb.edu"], "keywords": ["memory-efficient RNNs", "dynamic execution", "computation skipping"], "TL;DR": "We accelerate RNN inference by dynamically reducing redundant memory access using a mixture of accurate and approximate modules.", "abstract": "Using Recurrent Neural Networks (RNNs) in sequence modeling tasks is promising in delivering high-quality results but challenging to meet stringent latency requirements because of the memory-bound execution pattern of RNNs. We propose a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference. Leveraging the error-resilient feature of nonlinear activation functions used in RNNs, we propose to use a lightweight little module that approximates the original RNN layer, which is referred to as the big module, to compute activations of the insensitive region that are more error-resilient. The expensive memory access and computation of the big module can be reduced as the results are only used in the sensitive region. Our method can reduce the overall memory access by 40% on average and achieve 1.54x to 1.75x speedup on CPU-based server platform with negligible impact on model quality.", "pdf": "/pdf/bbba08e21d980106cb1a43ea05a49ca113bc3fd3.pdf", "paperhash": "liu|dualmodule_inference_for_efficient_recurrent_neural_networks", "original_pdf": "/attachment/5913ec60c44cf99f8c6399aca41c22aaf4d017eb.pdf", "_bibtex": "@misc{\nliu2020dualmodule,\ntitle={Dual-module Inference for Efficient Recurrent Neural Networks},\nauthor={Liu Liu and Lei Deng and Shuangchen Li and Jingwei Zhang and Yihua Yang and Zhenyu Gu and Yufei Ding and Yuan Xie},\nyear={2020},\nurl={https://openreview.net/forum?id=SJe3KCNKPr}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"required": true, "description": "Brief summary of your comment.", "order": 0, "value-regex": ".{1,500}"}, "comment": {"required": true, "description": "Your comment or reply (max 5000 characters). Add TeX formulas using the following formats: $In-line Formula$ or $$Block Formula$$", "order": 1, "value-regex": "[\\S\\s]{1,5000}"}}, "forum": "SJe3KCNKPr", "readers": {"values-dropdown": ["everyone", "ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference/Paper1262/AnonReviewer.*", "ICLR.cc/2020/Conference/Paper1262/Reviewers/Submitted", "ICLR.cc/2020/Conference/Paper1262/Reviewers", "ICLR.cc/2020/Conference/Paper1262/Area_Chairs", "ICLR.cc/2020/Conference/Program_Chairs"], "description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response"}, "writers": {"values-copied": ["ICLR.cc/2020/Conference", "{signatures}"]}, "signatures": {"description": "How your identity will be displayed.", "values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+|ICLR.cc/2020/Conference/Paper1262/Authors|ICLR.cc/2020/Conference/Paper1262/Area_Chair[0-9]+|ICLR.cc/2020/Conference/Program_Chairs"}}, "readers": ["everyone"], "tcdate": 1569504158716, "tmdate": 1576860532376, "super": "ICLR.cc/2020/Conference/-/Comment", "signatures": ["ICLR.cc/2020/Conference"], "writers": ["ICLR.cc/2020/Conference"], "invitees": ["ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference/Paper1262/Reviewers", "ICLR.cc/2020/Conference/Paper1262/Area_Chairs", "ICLR.cc/2020/Conference/Program_Chairs"], "id": "ICLR.cc/2020/Conference/Paper1262/-/Official_Comment"}}}, {"id": "H1xNDoWFor", "original": null, "number": 2, "cdate": 1573620572414, "ddate": null, "tcdate": 1573620572414, "tmdate": 1573620572414, "tddate": null, "forum": "SJe3KCNKPr", "replyto": "B1e26lgRYr", "invitation": "ICLR.cc/2020/Conference/Paper1262/-/Official_Comment", "content": {"title": "Response to Review #2", "comment": "Thank you for your valuable suggestions and comments. We have made revisions accordingly.\n(1)\tOur approach is orthogonal to weight pruning. In fact, our proposed dual-module inference can work with weight-pruned models. Like the motivation in Bolukbasi et al. \u201cAdaptive neural networks for efficient inference\u201d, our approach focuses on dynamic execution which is not meant to replace but to complement model compression techniques. In Appendix A, we compare our approach with weight pruning. Firstly, compared with fine-grained, i.e., element-wise weight pruning, our method achieves better quality with practical speedup. Fine-grained weight pruning is effective in creating very sparse models that can be compressed to save memory footprint and bandwidth. However, specialized hardware is necessary to gain real speedup of computation given irregular sparsity. On the contrary, our method aims at reducing memory access in a structured way, i.e., reducing accesses to weight vectors rather than irregularly distributed elements, and can achieve wall-clock execution time reduction on commodity CPUs. Also, our method can improve the pruned models to further speed up inference by reducing memory access.\na.\tOne major difference between our method and weight pruning methods is that our method focuses on dynamically reduce weight access while weight pruning methods prune weights permanently to reduce memory footprint.\nb.\tWe have added results in Appendix A to show that we can use dual-module inference on top of pruned models.\n(2)\tDiscussion and motivation on random projections. Random projection is a common technique for dimension reduction that preserves distances in Euclidean space. We choose the simple distribution instead of Gaussian distribution as originally proposed in Achlioptas, Dimitris (2003) \u201cDatabase-friendly random projections\u201d. The reason for using sparse random projection is that each element in the sparse random matrix can be represented in only two bits and efficiently stored in memory.\n(3)\tThank you for pointing out this related paper. We have cited and discussed in Section 5. Indeed, we share similar motivations to this paper. However, we focus on intra-layer dynamic execution while this work is on inter-layer and inter-model dynamic execution.\n"}, "signatures": ["ICLR.cc/2020/Conference/Paper1262/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Dual-module Inference for Efficient Recurrent Neural Networks", "authors": ["Liu Liu", "Lei Deng", "Shuangchen Li", "Jingwei Zhang", "Yihua Yang", "Zhenyu Gu", "Yufei Ding", "Yuan Xie"], "authorids": ["liu_liu@ucsb.edu", "leideng@ucsb.edu", "shuangchen.li@alibaba-inc.com", "jingwei.zhang@alibaba-inc.com", "yihua.yang@alibaba-inc.com", "zhenyu.gu@alibaba-inc.com", "yufeiding@cs.ucsb.edu", "yuanxie@ece.ucsb.edu"], "keywords": ["memory-efficient RNNs", "dynamic execution", "computation skipping"], "TL;DR": "We accelerate RNN inference by dynamically reducing redundant memory access using a mixture of accurate and approximate modules.", "abstract": "Using Recurrent Neural Networks (RNNs) in sequence modeling tasks is promising in delivering high-quality results but challenging to meet stringent latency requirements because of the memory-bound execution pattern of RNNs. We propose a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference. Leveraging the error-resilient feature of nonlinear activation functions used in RNNs, we propose to use a lightweight little module that approximates the original RNN layer, which is referred to as the big module, to compute activations of the insensitive region that are more error-resilient. The expensive memory access and computation of the big module can be reduced as the results are only used in the sensitive region. Our method can reduce the overall memory access by 40% on average and achieve 1.54x to 1.75x speedup on CPU-based server platform with negligible impact on model quality.", "pdf": "/pdf/bbba08e21d980106cb1a43ea05a49ca113bc3fd3.pdf", "paperhash": "liu|dualmodule_inference_for_efficient_recurrent_neural_networks", "original_pdf": "/attachment/5913ec60c44cf99f8c6399aca41c22aaf4d017eb.pdf", "_bibtex": "@misc{\nliu2020dualmodule,\ntitle={Dual-module Inference for Efficient Recurrent Neural Networks},\nauthor={Liu Liu and Lei Deng and Shuangchen Li and Jingwei Zhang and Yihua Yang and Zhenyu Gu and Yufei Ding and Yuan Xie},\nyear={2020},\nurl={https://openreview.net/forum?id=SJe3KCNKPr}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"required": true, "description": "Brief summary of your comment.", "order": 0, "value-regex": ".{1,500}"}, "comment": {"required": true, "description": "Your comment or reply (max 5000 characters). Add TeX formulas using the following formats: $In-line Formula$ or $$Block Formula$$", "order": 1, "value-regex": "[\\S\\s]{1,5000}"}}, "forum": "SJe3KCNKPr", "readers": {"values-dropdown": ["everyone", "ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference/Paper1262/AnonReviewer.*", "ICLR.cc/2020/Conference/Paper1262/Reviewers/Submitted", "ICLR.cc/2020/Conference/Paper1262/Reviewers", "ICLR.cc/2020/Conference/Paper1262/Area_Chairs", "ICLR.cc/2020/Conference/Program_Chairs"], "description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response"}, "writers": {"values-copied": ["ICLR.cc/2020/Conference", "{signatures}"]}, "signatures": {"description": "How your identity will be displayed.", "values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+|ICLR.cc/2020/Conference/Paper1262/Authors|ICLR.cc/2020/Conference/Paper1262/Area_Chair[0-9]+|ICLR.cc/2020/Conference/Program_Chairs"}}, "readers": ["everyone"], "tcdate": 1569504158716, "tmdate": 1576860532376, "super": "ICLR.cc/2020/Conference/-/Comment", "signatures": ["ICLR.cc/2020/Conference"], "writers": ["ICLR.cc/2020/Conference"], "invitees": ["ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference/Paper1262/Reviewers", "ICLR.cc/2020/Conference/Paper1262/Area_Chairs", "ICLR.cc/2020/Conference/Program_Chairs"], "id": "ICLR.cc/2020/Conference/Paper1262/-/Official_Comment"}}}, {"id": "BkeZ4oWFir", "original": null, "number": 1, "cdate": 1573620520545, "ddate": null, "tcdate": 1573620520545, "tmdate": 1573620520545, "tddate": null, "forum": "SJe3KCNKPr", "replyto": "H1xpu-VWcB", "invitation": "ICLR.cc/2020/Conference/Paper1262/-/Official_Comment", "content": {"title": "Response to Review #3", "comment": "Thank you for your valuable suggestions and comments. We have revised our submission based on your feedback. Our answers to your questions can be found below.\n(1)\tReorganized Section 3 with an overview subsection and a summary subsection.\n(2)\tTechnical details:\na.\tHow to construct the HH module. The HH module, i.e., high dimension and high precision module is the original module from pre-trained models, e.g., one LSTM layer. We construct a low dimension and low precision module \u2014 the LL module \u2014 to approximate the HH module outputs but using much less overhead.\nb.    Detailed information on how to conduct dimension reduction. When constructing the LL module, we use random projection to reduce the dimensionality of inputs by multiplying the original input with a non-square random matrix as in Equation (2) and correspondingly reduce the number of parameters of the LL module. We choose sparse random projection with a sparse projection matrix that is memory efficient as the matrix elements can be represented in only two bits.\nc.  The choice of Equation (2) and (3) are from Achlioptas, Dimitris (2003), \u201cDatabase-friendly random projections\u201d.\nd. Detailed information on how to select the quantization method. We apply retraining-free uniform quantization in the LL module to keep memory overhead small. Although the uniform quantization is simple, it is good enough to reduce the precision of the little modules without degradation on inference quality (see Table 6). One explanation is that the LL module is only used in the insensitive region that can tolerate errors to a great extent. This error resilience of non-linear activation functions has been discussed in Section 2. Of course, other advanced quantization methods are allowed in our framework to further reduce the quantization error.\ne.\tAlthough using other non-linear activation functions are possible, we restrict our exploration to sigmoid and tanh that are commonly used in LSTM/GRU-based models.\n(3)\tReorganized Section 4 by introducing the motivation of each experiment.\n(4)\tParameters in the evaluation:\na.\tData size, dropout, learning rate, and timestamps. Our evaluation for single-layer RNNs is adapted from PyTorch\u2019s word language modeling example, where the dataset has 10K tokens. We do not use dropout when training the LL module(s); the starting learning rate is 5, and we decay it by 4 if no loss descent has been seen on the validation dataset. The RNNs used in language modeling have 35 timestamps; the maximum generated sequence length in GNMT is 80.\nb.\tBesides single-layer LSTM and GRU, we also evaluate four-layer stacked LSTMs as in GNMT. For GNMT experiments, we use the same set of parameters when training the base model as in added Footnote 2. For language modeling, we choose 1500 hidden units following the word language modeling example, and we compare our method which dynamically reduces 50% of weight accesses to the static case where only 750 hidden units are used. As we discussed in Table 2 and in Section 4.1, even at the same level of memory access reduction, our dual-module inference method can achieve better model quality.\n(5)\tAlthough we consider fundamental sequence modeling, our method is easy to be applied to other models.\n(6)\tWe have revised Table 6.\n(7)\tWe have cited and discussed some newly designed models in Section 5."}, "signatures": ["ICLR.cc/2020/Conference/Paper1262/Authors"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Dual-module Inference for Efficient Recurrent Neural Networks", "authors": ["Liu Liu", "Lei Deng", "Shuangchen Li", "Jingwei Zhang", "Yihua Yang", "Zhenyu Gu", "Yufei Ding", "Yuan Xie"], "authorids": ["liu_liu@ucsb.edu", "leideng@ucsb.edu", "shuangchen.li@alibaba-inc.com", "jingwei.zhang@alibaba-inc.com", "yihua.yang@alibaba-inc.com", "zhenyu.gu@alibaba-inc.com", "yufeiding@cs.ucsb.edu", "yuanxie@ece.ucsb.edu"], "keywords": ["memory-efficient RNNs", "dynamic execution", "computation skipping"], "TL;DR": "We accelerate RNN inference by dynamically reducing redundant memory access using a mixture of accurate and approximate modules.", "abstract": "Using Recurrent Neural Networks (RNNs) in sequence modeling tasks is promising in delivering high-quality results but challenging to meet stringent latency requirements because of the memory-bound execution pattern of RNNs. We propose a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference. Leveraging the error-resilient feature of nonlinear activation functions used in RNNs, we propose to use a lightweight little module that approximates the original RNN layer, which is referred to as the big module, to compute activations of the insensitive region that are more error-resilient. The expensive memory access and computation of the big module can be reduced as the results are only used in the sensitive region. Our method can reduce the overall memory access by 40% on average and achieve 1.54x to 1.75x speedup on CPU-based server platform with negligible impact on model quality.", "pdf": "/pdf/bbba08e21d980106cb1a43ea05a49ca113bc3fd3.pdf", "paperhash": "liu|dualmodule_inference_for_efficient_recurrent_neural_networks", "original_pdf": "/attachment/5913ec60c44cf99f8c6399aca41c22aaf4d017eb.pdf", "_bibtex": "@misc{\nliu2020dualmodule,\ntitle={Dual-module Inference for Efficient Recurrent Neural Networks},\nauthor={Liu Liu and Lei Deng and Shuangchen Li and Jingwei Zhang and Yihua Yang and Zhenyu Gu and Yufei Ding and Yuan Xie},\nyear={2020},\nurl={https://openreview.net/forum?id=SJe3KCNKPr}\n}"}, "tags": [], "invitation": {"reply": {"content": {"title": {"required": true, "description": "Brief summary of your comment.", "order": 0, "value-regex": ".{1,500}"}, "comment": {"required": true, "description": "Your comment or reply (max 5000 characters). Add TeX formulas using the following formats: $In-line Formula$ or $$Block Formula$$", "order": 1, "value-regex": "[\\S\\s]{1,5000}"}}, "forum": "SJe3KCNKPr", "readers": {"values-dropdown": ["everyone", "ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference/Paper1262/AnonReviewer.*", "ICLR.cc/2020/Conference/Paper1262/Reviewers/Submitted", "ICLR.cc/2020/Conference/Paper1262/Reviewers", "ICLR.cc/2020/Conference/Paper1262/Area_Chairs", "ICLR.cc/2020/Conference/Program_Chairs"], "description": "Who your comment will be visible to. If replying to a specific person make sure to add the group they are a member of so that they are able to see your response"}, "writers": {"values-copied": ["ICLR.cc/2020/Conference", "{signatures}"]}, "signatures": {"description": "How your identity will be displayed.", "values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+|ICLR.cc/2020/Conference/Paper1262/Authors|ICLR.cc/2020/Conference/Paper1262/Area_Chair[0-9]+|ICLR.cc/2020/Conference/Program_Chairs"}}, "readers": ["everyone"], "tcdate": 1569504158716, "tmdate": 1576860532376, "super": "ICLR.cc/2020/Conference/-/Comment", "signatures": ["ICLR.cc/2020/Conference"], "writers": ["ICLR.cc/2020/Conference"], "invitees": ["ICLR.cc/2020/Conference/Paper1262/Authors", "ICLR.cc/2020/Conference/Paper1262/Reviewers", "ICLR.cc/2020/Conference/Paper1262/Area_Chairs", "ICLR.cc/2020/Conference/Program_Chairs"], "id": "ICLR.cc/2020/Conference/Paper1262/-/Official_Comment"}}}, {"id": "HkxgREa4Kr", "original": null, "number": 1, "cdate": 1571243207648, "ddate": null, "tcdate": 1571243207648, "tmdate": 1572972491785, "tddate": null, "forum": "SJe3KCNKPr", "replyto": "SJe3KCNKPr", "invitation": "ICLR.cc/2020/Conference/Paper1262/-/Official_Review", "content": {"rating": "6: Weak Accept", "experience_assessment": "I have read many papers in this area.", "review_assessment:_checking_correctness_of_derivations_and_theory": "I carefully checked the derivations and theory.", "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.", "title": "Official Blind Review #1", "review_assessment:_thoroughness_in_paper_reading": "I read the paper thoroughly.", "review": "This paper attempts to compress the networks so as to accelerate the running procedure as well as save the storage. The authors propose a dual-module that is composed of a little module and big module. The big module use the full original data and parameters whereas the little module use small data and parameters by random projecting on the original ones. Through a statistical investigation, the authors provide a method to choose the little or big module dynamically. By applying this method on LSTM and GRU, the authors make them more efficient. Experimental results validate this point.\n\nOverall, I think this paper is well written and easy to follow. The idea of dual-module is interesting and wise. The experiments is valid. However, I would like the authors to answer me two questions. \n1 How do you draw Figure 2? \n2 Why is the distribution of the outputs of sigmoid not bipolar? Intuitively, the distribution should be similar to that of tanh since their functions are similar.\n"}, "signatures": ["ICLR.cc/2020/Conference/Paper1262/AnonReviewer1"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference/Paper1262/AnonReviewer1"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Dual-module Inference for Efficient Recurrent Neural Networks", "authors": ["Liu Liu", "Lei Deng", "Shuangchen Li", "Jingwei Zhang", "Yihua Yang", "Zhenyu Gu", "Yufei Ding", "Yuan Xie"], "authorids": ["liu_liu@ucsb.edu", "leideng@ucsb.edu", "shuangchen.li@alibaba-inc.com", "jingwei.zhang@alibaba-inc.com", "yihua.yang@alibaba-inc.com", "zhenyu.gu@alibaba-inc.com", "yufeiding@cs.ucsb.edu", "yuanxie@ece.ucsb.edu"], "keywords": ["memory-efficient RNNs", "dynamic execution", "computation skipping"], "TL;DR": "We accelerate RNN inference by dynamically reducing redundant memory access using a mixture of accurate and approximate modules.", "abstract": "Using Recurrent Neural Networks (RNNs) in sequence modeling tasks is promising in delivering high-quality results but challenging to meet stringent latency requirements because of the memory-bound execution pattern of RNNs. We propose a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference. Leveraging the error-resilient feature of nonlinear activation functions used in RNNs, we propose to use a lightweight little module that approximates the original RNN layer, which is referred to as the big module, to compute activations of the insensitive region that are more error-resilient. The expensive memory access and computation of the big module can be reduced as the results are only used in the sensitive region. Our method can reduce the overall memory access by 40% on average and achieve 1.54x to 1.75x speedup on CPU-based server platform with negligible impact on model quality.", "pdf": "/pdf/bbba08e21d980106cb1a43ea05a49ca113bc3fd3.pdf", "paperhash": "liu|dualmodule_inference_for_efficient_recurrent_neural_networks", "original_pdf": "/attachment/5913ec60c44cf99f8c6399aca41c22aaf4d017eb.pdf", "_bibtex": "@misc{\nliu2020dualmodule,\ntitle={Dual-module Inference for Efficient Recurrent Neural Networks},\nauthor={Liu Liu and Lei Deng and Shuangchen Li and Jingwei Zhang and Yihua Yang and Zhenyu Gu and Yufei Ding and Yuan Xie},\nyear={2020},\nurl={https://openreview.net/forum?id=SJe3KCNKPr}\n}"}, "tags": [], "invitation": {"reply": {"content": {"experience_assessment": {"required": true, "order": 4, "description": "Please make a selection that represents your experience correctly", "value-radio": ["I have published in this field for several years.", "I have published one or two papers in this area.", "I have read many papers in this area.", "I do not know much about this area."]}, "rating": {"value-dropdown": ["1: Reject", "3: Weak Reject", "6: Weak Accept", "8: Accept"], "order": 3, "required": true}, "review_assessment:_checking_correctness_of_experiments": {"required": true, "order": 7, "description": "If no experiments, please select N/A", "value-radio": ["I carefully checked the experiments.", "I assessed the sensibility of the experiments.", "I did not assess the experiments.", "N/A"]}, "review_assessment:_thoroughness_in_paper_reading": {"required": true, "order": 5, "description": "If this is not applicable, please select N/A", "value-radio": ["I read the paper thoroughly.", "I read the paper at least twice and used my best judgement in assessing the paper.", "I made a quick assessment of this paper.", "N/A"]}, "title": {"value-regex": "Official Blind Review #[0-9]+", "order": 1, "required": true, "description": "Please replace NUM with your AnonReviewer number (it is the number following \"AnonReviewer\" in your signatures below)", "default": "Official Blind Review #NUM"}, "review": {"value-regex": "[\\S\\s]{500,200000}", "order": 2, "description": "Provide your complete review here (500 - 200000 characters). For guidance in writing a good review, see this brief reviewer guide (https://iclr.cc/Conferences/2020/ReviewerGuide) with three key bullet points.", "required": true}, "review_assessment:_checking_correctness_of_derivations_and_theory": {"required": true, "order": 6, "description": "If no derivations or theory, please select N/A", "value-radio": ["I carefully checked the derivations and theory.", "I assessed the sensibility of the derivations and theory.", "I did not assess the derivations or theory.", "N/A"]}}, "forum": "SJe3KCNKPr", "replyto": "SJe3KCNKPr", "readers": {"values": ["everyone"], "description": "Select all user groups that should be able to read this comment."}, "nonreaders": {"values": []}, "writers": {"values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}, "signatures": {"values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}}, "expdate": 1575732298300, "duedate": 1572706740000, "multiReply": false, "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2020/Conference/Paper1262/Reviewers"], "noninvitees": [], "tcdate": 1570237739942, "tmdate": 1575732298313, "super": "ICLR.cc/2020/Conference/-/Official_Review", "signatures": ["ICLR.cc/2020/Conference"], "writers": ["ICLR.cc/2020/Conference"], "id": "ICLR.cc/2020/Conference/Paper1262/-/Official_Review"}}}, {"id": "B1e26lgRYr", "original": null, "number": 2, "cdate": 1571844291754, "ddate": null, "tcdate": 1571844291754, "tmdate": 1572972491751, "tddate": null, "forum": "SJe3KCNKPr", "replyto": "SJe3KCNKPr", "invitation": "ICLR.cc/2020/Conference/Paper1262/-/Official_Review", "content": {"experience_assessment": "I have read many papers in this area.", "rating": "3: Weak Reject", "review_assessment:_thoroughness_in_paper_reading": "I read the paper thoroughly.", "review_assessment:_checking_correctness_of_experiments": "I carefully checked the experiments.", "title": "Official Blind Review #2", "review_assessment:_checking_correctness_of_derivations_and_theory": "I carefully checked the derivations and theory.", "review": "This manuscript proposes an approach to reduce memory access and computation in Recurrent Neural Networks.  Specifically, they train a second \"little\" neural network to approximate a pre-trained \"big\" network and use simple rules to switch between the little and the big network.  The approach can provide some speedups while reducing the total number of memory accesses and the computational cost in exchange for a mild decrease in predictive performance.\n\nWhile this manuscript proposes a reasonable contribution, it lacks real comparisons to many of the common competing methods that hinder the interpretation.\n\nWeight sparsity/pruning is a very common approach that has shown the ability for larger speedups than what is shown here.  I disagree with the assessment that \"those methods require extensive retraining via regularization.\" Realistically, you can take a pretrained model and add the penalties with mild re-training and extensive reuse of code.  The result is also simpler to implement.  I would argue that this is less work than the proposed approach, which requires switching rules and a second trained network.  I don't know which is better, but the authors should actually evaluate whether their approach improves over the more popular approach.\n\nThe authors should give better discussion and motivation on the random projections.  This is an area with very deep theory, yet the rules are provided without a rationale.  Realistically, where does the sparsity level in the random sparse matrix come from?  Why use the rule for k in (3)?  The authors should motivate and discuss this section more.\n\nAlso note that there is existing literature on learning multiple models and switching between them, for example:\nBolukbasi, Tolga, et al. \"Adaptive neural networks for efficient inference.\" Proceedings of the 34th International Conference on Machine Learning-Volume 70. JMLR. org, 2017.\nAs there is a lot of similarity in the motivations, you should discuss that line of research in your related work."}, "signatures": ["ICLR.cc/2020/Conference/Paper1262/AnonReviewer2"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference/Paper1262/AnonReviewer2"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Dual-module Inference for Efficient Recurrent Neural Networks", "authors": ["Liu Liu", "Lei Deng", "Shuangchen Li", "Jingwei Zhang", "Yihua Yang", "Zhenyu Gu", "Yufei Ding", "Yuan Xie"], "authorids": ["liu_liu@ucsb.edu", "leideng@ucsb.edu", "shuangchen.li@alibaba-inc.com", "jingwei.zhang@alibaba-inc.com", "yihua.yang@alibaba-inc.com", "zhenyu.gu@alibaba-inc.com", "yufeiding@cs.ucsb.edu", "yuanxie@ece.ucsb.edu"], "keywords": ["memory-efficient RNNs", "dynamic execution", "computation skipping"], "TL;DR": "We accelerate RNN inference by dynamically reducing redundant memory access using a mixture of accurate and approximate modules.", "abstract": "Using Recurrent Neural Networks (RNNs) in sequence modeling tasks is promising in delivering high-quality results but challenging to meet stringent latency requirements because of the memory-bound execution pattern of RNNs. We propose a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference. Leveraging the error-resilient feature of nonlinear activation functions used in RNNs, we propose to use a lightweight little module that approximates the original RNN layer, which is referred to as the big module, to compute activations of the insensitive region that are more error-resilient. The expensive memory access and computation of the big module can be reduced as the results are only used in the sensitive region. Our method can reduce the overall memory access by 40% on average and achieve 1.54x to 1.75x speedup on CPU-based server platform with negligible impact on model quality.", "pdf": "/pdf/bbba08e21d980106cb1a43ea05a49ca113bc3fd3.pdf", "paperhash": "liu|dualmodule_inference_for_efficient_recurrent_neural_networks", "original_pdf": "/attachment/5913ec60c44cf99f8c6399aca41c22aaf4d017eb.pdf", "_bibtex": "@misc{\nliu2020dualmodule,\ntitle={Dual-module Inference for Efficient Recurrent Neural Networks},\nauthor={Liu Liu and Lei Deng and Shuangchen Li and Jingwei Zhang and Yihua Yang and Zhenyu Gu and Yufei Ding and Yuan Xie},\nyear={2020},\nurl={https://openreview.net/forum?id=SJe3KCNKPr}\n}"}, "tags": [], "invitation": {"reply": {"content": {"experience_assessment": {"required": true, "order": 4, "description": "Please make a selection that represents your experience correctly", "value-radio": ["I have published in this field for several years.", "I have published one or two papers in this area.", "I have read many papers in this area.", "I do not know much about this area."]}, "rating": {"value-dropdown": ["1: Reject", "3: Weak Reject", "6: Weak Accept", "8: Accept"], "order": 3, "required": true}, "review_assessment:_checking_correctness_of_experiments": {"required": true, "order": 7, "description": "If no experiments, please select N/A", "value-radio": ["I carefully checked the experiments.", "I assessed the sensibility of the experiments.", "I did not assess the experiments.", "N/A"]}, "review_assessment:_thoroughness_in_paper_reading": {"required": true, "order": 5, "description": "If this is not applicable, please select N/A", "value-radio": ["I read the paper thoroughly.", "I read the paper at least twice and used my best judgement in assessing the paper.", "I made a quick assessment of this paper.", "N/A"]}, "title": {"value-regex": "Official Blind Review #[0-9]+", "order": 1, "required": true, "description": "Please replace NUM with your AnonReviewer number (it is the number following \"AnonReviewer\" in your signatures below)", "default": "Official Blind Review #NUM"}, "review": {"value-regex": "[\\S\\s]{500,200000}", "order": 2, "description": "Provide your complete review here (500 - 200000 characters). For guidance in writing a good review, see this brief reviewer guide (https://iclr.cc/Conferences/2020/ReviewerGuide) with three key bullet points.", "required": true}, "review_assessment:_checking_correctness_of_derivations_and_theory": {"required": true, "order": 6, "description": "If no derivations or theory, please select N/A", "value-radio": ["I carefully checked the derivations and theory.", "I assessed the sensibility of the derivations and theory.", "I did not assess the derivations or theory.", "N/A"]}}, "forum": "SJe3KCNKPr", "replyto": "SJe3KCNKPr", "readers": {"values": ["everyone"], "description": "Select all user groups that should be able to read this comment."}, "nonreaders": {"values": []}, "writers": {"values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}, "signatures": {"values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}}, "expdate": 1575732298300, "duedate": 1572706740000, "multiReply": false, "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2020/Conference/Paper1262/Reviewers"], "noninvitees": [], "tcdate": 1570237739942, "tmdate": 1575732298313, "super": "ICLR.cc/2020/Conference/-/Official_Review", "signatures": ["ICLR.cc/2020/Conference"], "writers": ["ICLR.cc/2020/Conference"], "id": "ICLR.cc/2020/Conference/Paper1262/-/Official_Review"}}}, {"id": "H1xpu-VWcB", "original": null, "number": 3, "cdate": 1572057460812, "ddate": null, "tcdate": 1572057460812, "tmdate": 1572972491706, "tddate": null, "forum": "SJe3KCNKPr", "replyto": "SJe3KCNKPr", "invitation": "ICLR.cc/2020/Conference/Paper1262/-/Official_Review", "content": {"experience_assessment": "I have published one or two papers in this area.", "rating": "3: Weak Reject", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.", "title": "Official Blind Review #3", "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory.", "review": "In this paper, the authors design a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference.\nIt cannot only mitigate the memory-bound problem to speedup RNN inference but also leverage the error resilience of nonlinear activation functions by using the lightweight little module to compute for the insensitive region and using the big module with skipped memory access and computation. They also conduct several experiments to evaluate their approaches.\n\n\nStrength:\n(1)\tWell written in general.\n(2)\tContributions clearly stated and justified\n\nA couple of minor questions:\n\n(1)\tThe organization in Section 3 can to be improved. It is better if the author can give a brief overview of their method first and then go into details.\n(2)\tSome of the technical details necessary for understanding the soundness of the techniques are either missing or are poorly explained. For example, in Section 3\na.\tthe authors did not mention how to construct the HH module\nb.\tthe authors did not provide detailed information of how to conduct dimension reduction since this will affect the performance\nc.\tmany mathematical notations and equations need to be revised to increase the readability. For instance, there is no information in the paper that explain why the authors design functions in such certain way (such as equation (2) and (3))\nd.\tthe authors did not provide enough detailed information about how to select the quantization methods since there are lots of approaches such as static (uniform) or dynamic quantization, where different methods may have different impacts on the final performance \ne.\tthe authors mentioned that they have tried both sigmoid and tanh activation function to find the sensitive region. However, they do not provide enough reason to do so, how about using other non-linear activation functions\n\n(3)\tThe organization in Section 4 can to be improved. It is better if the author can introduce the motivation of each experiment.\n\n(4)\tParameters of the evaluation are unclear or missing. For example, \na.\twhat is the data size, what is the dropout, learning rate, how many time stamps for the RNN modules\nb.\twhy the authors only use single-layer LSTM and why they select 750 and 1500 hidden units in the experiments\n\n(5)\tWhile the authors have applied their models on other existing method, they do not provide good discussion of results and such model seems old (released in 2016). It would be great if this approach can also be applied on other newly released models\n(6)\tSome tables need to be reorganized. For instance, for table 6, there needs some space between the title and the table.\n(7)\tWhile the paper has good coverage of the prior work, I do suggest the authors can also cite or discuss some newly designed models (in 2019).\n"}, "signatures": ["ICLR.cc/2020/Conference/Paper1262/AnonReviewer3"], "readers": ["everyone"], "nonreaders": [], "writers": ["ICLR.cc/2020/Conference/Paper1262/AnonReviewer3"], "details": {"replyCount": 0, "writable": false, "overwriting": [], "revisions": false, "forumContent": {"title": "Dual-module Inference for Efficient Recurrent Neural Networks", "authors": ["Liu Liu", "Lei Deng", "Shuangchen Li", "Jingwei Zhang", "Yihua Yang", "Zhenyu Gu", "Yufei Ding", "Yuan Xie"], "authorids": ["liu_liu@ucsb.edu", "leideng@ucsb.edu", "shuangchen.li@alibaba-inc.com", "jingwei.zhang@alibaba-inc.com", "yihua.yang@alibaba-inc.com", "zhenyu.gu@alibaba-inc.com", "yufeiding@cs.ucsb.edu", "yuanxie@ece.ucsb.edu"], "keywords": ["memory-efficient RNNs", "dynamic execution", "computation skipping"], "TL;DR": "We accelerate RNN inference by dynamically reducing redundant memory access using a mixture of accurate and approximate modules.", "abstract": "Using Recurrent Neural Networks (RNNs) in sequence modeling tasks is promising in delivering high-quality results but challenging to meet stringent latency requirements because of the memory-bound execution pattern of RNNs. We propose a big-little dual-module inference to dynamically skip unnecessary memory access and computation to speedup RNN inference. Leveraging the error-resilient feature of nonlinear activation functions used in RNNs, we propose to use a lightweight little module that approximates the original RNN layer, which is referred to as the big module, to compute activations of the insensitive region that are more error-resilient. The expensive memory access and computation of the big module can be reduced as the results are only used in the sensitive region. Our method can reduce the overall memory access by 40% on average and achieve 1.54x to 1.75x speedup on CPU-based server platform with negligible impact on model quality.", "pdf": "/pdf/bbba08e21d980106cb1a43ea05a49ca113bc3fd3.pdf", "paperhash": "liu|dualmodule_inference_for_efficient_recurrent_neural_networks", "original_pdf": "/attachment/5913ec60c44cf99f8c6399aca41c22aaf4d017eb.pdf", "_bibtex": "@misc{\nliu2020dualmodule,\ntitle={Dual-module Inference for Efficient Recurrent Neural Networks},\nauthor={Liu Liu and Lei Deng and Shuangchen Li and Jingwei Zhang and Yihua Yang and Zhenyu Gu and Yufei Ding and Yuan Xie},\nyear={2020},\nurl={https://openreview.net/forum?id=SJe3KCNKPr}\n}"}, "tags": [], "invitation": {"reply": {"content": {"experience_assessment": {"required": true, "order": 4, "description": "Please make a selection that represents your experience correctly", "value-radio": ["I have published in this field for several years.", "I have published one or two papers in this area.", "I have read many papers in this area.", "I do not know much about this area."]}, "rating": {"value-dropdown": ["1: Reject", "3: Weak Reject", "6: Weak Accept", "8: Accept"], "order": 3, "required": true}, "review_assessment:_checking_correctness_of_experiments": {"required": true, "order": 7, "description": "If no experiments, please select N/A", "value-radio": ["I carefully checked the experiments.", "I assessed the sensibility of the experiments.", "I did not assess the experiments.", "N/A"]}, "review_assessment:_thoroughness_in_paper_reading": {"required": true, "order": 5, "description": "If this is not applicable, please select N/A", "value-radio": ["I read the paper thoroughly.", "I read the paper at least twice and used my best judgement in assessing the paper.", "I made a quick assessment of this paper.", "N/A"]}, "title": {"value-regex": "Official Blind Review #[0-9]+", "order": 1, "required": true, "description": "Please replace NUM with your AnonReviewer number (it is the number following \"AnonReviewer\" in your signatures below)", "default": "Official Blind Review #NUM"}, "review": {"value-regex": "[\\S\\s]{500,200000}", "order": 2, "description": "Provide your complete review here (500 - 200000 characters). For guidance in writing a good review, see this brief reviewer guide (https://iclr.cc/Conferences/2020/ReviewerGuide) with three key bullet points.", "required": true}, "review_assessment:_checking_correctness_of_derivations_and_theory": {"required": true, "order": 6, "description": "If no derivations or theory, please select N/A", "value-radio": ["I carefully checked the derivations and theory.", "I assessed the sensibility of the derivations and theory.", "I did not assess the derivations or theory.", "N/A"]}}, "forum": "SJe3KCNKPr", "replyto": "SJe3KCNKPr", "readers": {"values": ["everyone"], "description": "Select all user groups that should be able to read this comment."}, "nonreaders": {"values": []}, "writers": {"values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}, "signatures": {"values-regex": "ICLR.cc/2020/Conference/Paper1262/AnonReviewer[0-9]+", "description": "How your identity will be displayed."}}, "expdate": 1575732298300, "duedate": 1572706740000, "multiReply": false, "readers": ["everyone"], "nonreaders": [], "invitees": ["ICLR.cc/2020/Conference/Paper1262/Reviewers"], "noninvitees": [], "tcdate": 1570237739942, "tmdate": 1575732298313, "super": "ICLR.cc/2020/Conference/-/Official_Review", "signatures": ["ICLR.cc/2020/Conference"], "writers": ["ICLR.cc/2020/Conference"], "id": "ICLR.cc/2020/Conference/Paper1262/-/Official_Review"}}}], "count": 8}