{"paper": {"title": "EFFICIENT SEQUENCE LABELING WITH ACTOR-CRITIC TRAINING", "authors": ["Saeed Najafi", "Colin Cherry", "Greg Kondrak"], "authorids": ["snajafi@ualberta.ca", "colin.a.cherry@gmail.com", "gkondrak@ualberta.ca"], "summary": "", "abstract": "Neural approaches to sequence labeling often use a Conditional Random Field (CRF) to model their output dependencies, while Recurrent Neural Networks (RNN) are used for the same purpose in other tasks. We set out to establish RNNs as an attractive alternative to CRFs for sequence labeling. To do so, we address one of the RNN\u2019s most prominent shortcomings, the fact that it is not exposed to its own errors with the maximum-likelihood training. We frame the prediction of the output sequence as a sequential decision-making process, where we train the network with an adjusted actor-critic algorithm (AC-RNN). We comprehensively compare this strategy with maximum-likelihood training for both RNNs and CRFs on three structured-output tasks. The proposed AC-RNN efficiently matches the performance of the CRF on NER and CCG tagging, and outperforms it on Machine Transliteration. We also show that our training strategy is significantly better than other techniques for addressing RNN\u2019s exposure bias, such as Scheduled Sampling, and Self-Critical policy training.\n", "keywords": ["Structured Prediction", "Reinforcement Learning", "NLP"]}, "meta": {"decision": "Reject", "comment": "this is an interesting approach to use reinforcement learning to replace CRF for sequence tagging, which would potentially be beneficial when the tag set is gigantic. unfortunately the conducted experiments do not really show this, which makes it difficult to see whether the proposed approach is indeed a viable alternative to CRF for sequence tagging with a large tag set. this sentiment was shared by all the reviewers, and R1 especially pointed out major and minor issues with the submission and was not convinced by the authors' response."}, "review": {"SygQFc2_pX": {"type": "rebuttal", "replyto": "HJxbDOnEnm", "comment": "Thank so much for your insightful comments. \n-  \n- Our main goal is to replace CRF in tagging, especially for tasks with large number of labels. `\n\n- MIXER uses REINFORCE, table 1illustrates that REINFORCE family fails compared to actor-critic. \n We both have a regressor as critic, but MIXER doesn't bootstrap its estimates in the computed returns.\n\n- Combining MLE and RL requires two forward computation in decoder RNN, one conditioning on gold standard, another on model-generated tokens. \n\n- The prediction is correct, but the advantage given by the critic is wrong, so we skip the update on actor. \n\n- Average over 20 runs, on epoch 13, adjusted actor-critic are better than actor-critic and reinforce models.\n\n- Reward reshaping can be used to convert non-decomposable loss functions such as BLEU into step-size rewards. \nReward(t) = BLEU(t) - BLEU(t-1)\n\n- End-to-End training time and the required GPU memory for one training epoch on CCG supertagging. \n\n- We tried the open source code for AC of Bahdanau on transliteration, but it completely failed.  We only obtained dev and test split from Leblonde et al. (2018) on spelling correction dataset.\n\n- We will review the mentioned paper. \n\n- Scheduled Sampling is inspired by Dagger.\n\n- Character embeddings are fine-tuned during training.\n\n- There is no preprocess alignment done for CRF in transliteration. ", "title": "Clarity"}, "BkgkqFBq3Q": {"type": "review", "replyto": "H1e6ij0cKQ", "review": "The authors propose actor-critic method for sequence labeling and show that it performs better (is more stable than) other RL approaches and also outperforms other techniques for countering exposure bias like scheduled sampling.\n\nThe results show very small improvement in tagging tasks like NER and CCG supertagging compared to other approaches ; but they show good improvement in the transliteration task which is more of a transduction task than a tagging task. \n\nThis authors also discus the adjusted training procedure which accounts for bad performance of the critic model in the initial stages of training. The approach is not very novel because actor-critic for more general sequence-to-sequence models (arguably more complex than tagging) has already been explored in the literature (Bahdanau et al., cited by the authors). Major difference in the proposed approach is the use of stepwise hamming-loss based reward and it is unclear whether this is a major contribution which  sets it apart from the previous work on AC for sequence modeling. For example, a good comparison would be to do tagging in seq2seq style and use the approach proposed in the existing AC work to show the value of the approach proposed here.\n\nAlso, minor claims about thoroughness of comparison with CRF are ill-founded as previous published work on tagging has indeed compared CRFs, independent, LSTM/RNN based models.", "title": "Actor critic for sequence labeling; not very novel but good results on transliteration; inadequate comparison", "rating": "5: Marginally below acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "H1e59mLw27": {"type": "review", "replyto": "H1e6ij0cKQ", "review": "The paper pretenses reinforcement learning algorithms for dealing with the \"exposure bias\" problem of RNNs in sequence labeling problems.  While I admire the thoroughness of  both the algorithmic work and experimental setup, I am afraid the paper suffers from two major problems:\n\n1. The paper suffers from serious clarity issues. Particularly, the main problem the paper deals with - exposure bias- is not well explained. I admit that while I am working with RNNs on a regular basis, I was not familiar with this problem. Unfortunately, I was also not able to understand it from the paper.  This may be a very basic concept, but a paper must be self-contained. Unfortunately, after reading the paper, front to cover, I cannot tell what is the problem the authors are trying to solve (except, of course, from providing a better training algorithm for RNNs).\n\n2. As the authors say already in the abstract, one of the best performing models on structured NLP tasks is LSTM-CRF, which combines the power of both the neural and the structured prediction frameworks. However, the authors do not compare their solution to LSTM-CRF, but only to LSTM and to CRF. This is a very important baseline, and without a proper comparison it is hard to evaluation the contribution of this paper.\n\n\n", "title": "The paper pretenses reinforcement learning algorithms for dealing with the \"exposure bias\" problem of RNNs in sequence labeling tasks. The paper suffers from clarity issues - for example it was hard to understand the exposure bias problem. I also miss an important comparison in the experimental section - to the LSTM-CRF model.", "rating": "4: Ok but not good enough - rejection", "confidence": "3: The reviewer is fairly confident that the evaluation is correct"}, "HJxbDOnEnm": {"type": "review", "replyto": "H1e6ij0cKQ", "review": "I found the paper difficult to follow. The method proposed is not well motivated, and  the literature review explains well the novelty. Here are some questions/points for discussion:\n\n- the token-level MLE training is not what causes the exposure bias: one can train with MLE and still avoid it by generating appropriate sequences using the RNN, as in scheduled sampling. The problem with MLE (or cross entropy) is that the labels to be predicted might not be the correct ones. See the paper by Ranzato et al. (ICLR2016) for a good discussion of the issue: https://arxiv.org/pdf/1511.06732.pdf\n\n- The criticism against previous works for not comparing agains CRFs seems odd: CRFs are given the number of labels, words, etc. to predict, typically the same as the number of words to be tagged. If one  has this, as well as binary rewards for each decision, then there is little benefit for RL/IL based approaches to be used. The point for them is the use of non-decomposable loss functions such as BLEU, which are not common in tagging, but in tasks like MT, where CRFs can't be used. In fact, for the transliteration experiments in the paper, the CRF approach is padded to perform the task, which highlights that it is not the right comparison. \n\n- the approach proposed seems very similar to MIXER, which also learns a regressor to predict the reward for each action. A direct comparison both in terms of how the approaches operate and empirically is needed.\n\n- why is it a problem that previous works by Ranzato, Bahdanau and Paulus combine MLE and RL? You are using the same supervision, ie. the labeled corpus.\n\n- the adjusted training seems to essentially not reward correct predictions (top branch in the equation). Why is this a good idea?\n\n- In figure 1 it is not clear at all that the proposed approach works; depending on the epoch the ranking among the three variants differs\n\n\n- what does it mean for one method to surpass the other in flexibilty? If anything the requirement for immediate rewards after every action restricts flexibility, as one can't use non-decomposable loss functions such as BLEU which are prety common in NLP.\n\n- How is the training efficiency measured in the paper?\n\n- Why not compare against MIXER, as well as more recent work by Leblonde et al. (2018): https://arxiv.org/abs/1706.04499 ? I don't see why the Rennie et al. 2017 method is picked for comparison.\n\n- It is not true that in IL one needs a gold standard policy, one can learn with sub-optimal policies, see Sun et al. (2018): https://arxiv.org/pdf/1703.01030.pdf\n\n- It is odd to say that an approach proposed earlier (Dagger) reduces to a variant of a later proposed one (Scheduled sampling), the reduction should be the other way around\n\n- are the randomly initialized character embeddings for transliteration tuned during training?\n\n- How were the alignments for training the CRF obtained?\n", "title": "Unclear focus of the paper: tagging or sequence generation? Comparisons not informative", "rating": "4: Ok but not good enough - rejection", "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"}, "rJxxaVYCh7": {"type": "rebuttal", "replyto": "BkgkqFBq3Q", "comment": "Our main goal is to replace CRF in tagging, especially for tasks with large number of labels. `\nWe would appreciate if we can be referred to an existing paper comparing Seq2Seq with encoder RNN + CRF decoding.", "title": "Clarity"}, "rygn_-YR37": {"type": "rebuttal", "replyto": "H1e59mLw27", "comment": "1- The concern is well understood, though related works have already defined it clearly. The bias is originated from the method of training, not the RNN itself.\n\n2-Throughout the paper:\n\nCRF: LSTM encoder + CRF decoding with MLE training \nRNN: LSTM encoder + LSTM decoder with MLE training\nAC-RNN: LSTM encoder + LSTM decoder with MLE & Actor-Critic training", "title": "Clarity"}}}