{"paper": {"title": "On the Quantitative Analysis of Decoder-Based Generative Models", "authors": ["Yuhuai Wu", "Yuri Burda", "Ruslan Salakhutdinov", "Roger Grosse"], "authorids": ["ywu@cs.toronto.edu", "yburda@openai.com", "rsalakhu@cs.cmu.edu", "rgrosse@cs.toronto.edu"], "summary": "We propose to use Annealed Importance Sampling to evaluate decoder-based generative network, and investigate various properties of these models.", "abstract": "The past several years have seen remarkable progress in generative models which produce convincing samples of images and other modalities. A shared component of some popular models such as generative adversarial networks and generative moment matching networks, is a decoder network, a parametric deep neural net that defines a generative distribution. Unfortunately, it can be difficult to quantify the performance of these models because of the intractability of log-likelihood estimation, and inspecting samples can be misleading. We propose to use Annealed Importance Sampling for evaluating log-likelihoods for decoder-based models and validate its accuracy using bidirectional Monte Carlo. Using this technique, we analyze the performance of decoder-based models, the effectiveness of existing log-likelihood estimators, the degree of overfitting, and the degree to which these models miss important modes of the data distribution.", "keywords": ["Deep learning", "Unsupervised Learning"]}, "meta": {"decision": "Accept (Poster)", "comment": "This paper describes a method to estimate likelihood scores for a range of models defined by a decoder.\n \n This work has some issues. The paper mainly applies existing ideas. As discussed on openreview, the isotropic Gaussian noise model used to create a model with a likelihood is questionable, and it's unclear how useful likelihoods are when models are obviously wrong. However, the results, lead to some interesting conclusions, and on balance this is a good paper."}, "review": {"HJATeEr_g": {"type": "rebuttal", "replyto": "Sy-o31H_l", "comment": "Thank you for your careful and insightful comment. \n\nYour suggestion about learning to model both the mean and covariance is interesting. We actually considered such an approach, but we decided it was unlikely to give reasonable noise estimates for purposes of log-likelihood estimation. Suppose, first of all, that you\u2019re fitting the variance parameter for a spherical Gaussian. If the parameter is nonzero, the discriminator will easily be able to distinguish real and generated samples by checking whether there\u2019s any noise on the boundaries of the image. There would therefore be overwhelming pressure on the generator to choose a parameter indistinguishable from zero, which defeats the purpose of modeling noise.\n\nWe think a similar effect would happen even for a diagonal noise model. I.e., if there is significant i.i.d. noise, the discriminator will be able to pick up on this (e.g. by noticing high-frequency content). Therefore, the generator would prefer very small amounts of noise, which probably would not be very good from a log-likelihood standpoint. So even if we used a procedure like this, we\u2019d still need to go through an additional step of estimating one or more noise parameters using a validation set.\n\nIn short, because we\u2019re comparing models in terms of log-likelihoods, the only reasonable way to choose variance parameters would be using some sort of likelihood-based criterion. But combining a likelihood criterion with the standard GAN objective would essentially require a novel algorithm, so we opted to simply estimate a scalar noise parameter on the held-out set. \n\nAs far as HMC adaptation, tuning HMC hyperparameters is a hard problem and some form of adaptation is certainly required. In principle, one could apply a diminishing adaptation scheme at each AIS step, but this would be prohibitively expensive. We opted to do adaptation online, similar to prior work, which (as you point out) raises issues of potential bias in the MCMC stationary distribution. If the temperature is adapted slowly enough, the distribution will be approximately stationary on the timescale of HMC exploring the space, and of hyperparameter adaptation; therefore, the bias would be no more or less a problem in our setting compared with more typical applications of HMC. For smaller numbers of intermediate distributions, there might be a lag in the hyperparameter adaptation, leading to worse log-likelihood estimates than if we were given the optimal hyperparameters at each step. But this would manifest in a large gap between the bounds, and the user would then need to increase the number of temperatures.\n\nIt\u2019s an interesting question how to adapt HMC hyperparameters in the context of AIS. I suppose one principled solution would be to have a first pass where you run HMC at various temperatures to tune the hyperparameters, and then a second pass where you run AIS without adaptation, and linearly interpolate the hyperparameters chosen in the first pass. This would yield strong mathematical guarantees at the expense of additional computation.\n", "title": "HMC and noise hyperparameters"}, "Sy-o31H_l": {"type": "rebuttal", "replyto": "B1M8JF9xx", "comment": "Thanks for the interesting paper.\n\nI have a couple of queries / comments:\n\nIn the code you provide at https://github.com/tonywu95/eval_gen you use a HMC implementation which adapts the step-size to achieve a target acceptance rate. As you reference in the paper this is taken from the implementation in the Theano tutorial at http://deeplearning.net/tutorial/hmc.html which in turn I think is based on Marc\u2019Aurelio Ranzato's implementation in the code available at http://www.cs.toronto.edu/~ranzato/publications/factored3wayRBM/code/factored3wayBM_04May2010.zip.\n\nAs far as I can tell the implementation does not use an explicitly vanishing / diminishing adaptation scheme? The step size appears to be multiplicatively adapted based on the difference between an exponential average of the acceptance rate for each chain and a target accept rate. This adaptation seems to be applied for every transition step in the AIS forward / reverse passes. Due to the induced dependence of the transitions at each inverse temperature on past states via the adapting step size, it is not clear to me that this will define a valid set of Markov transitions as required (I think?) for validity of the AIS scheme. I very possibly may be missing something here which means this isn't the case but if so it might be worth clarifying why the adaptation scheme is valid here.\n\nPart of my worry is that ensuring a convergent adaptive scheme seems particularly difficult here as while for a stationary target distribution we might expect for the adaptive step-size scheme employed to (roughly) converge if the local geometry of the distribution does not vary too much across the typical set, as the target distribution for each transition differs here, it seems plausible the step size will continue varying significantly across many transitions.\n\nWith regards to the Gaussian observation model used: instead of using a fixed isotropic covariance Gaussian observation model for the GAN and GMMN decoders with variance parameter fit on a validation set, a possible alternative could be to explicitly include an additive Gaussian noise term in the output of the decoder for the GAN / GMMN and use this 'noisy' decoder in the usual training procedure for these models. Though inclusion of an output noise term is atypical in these models there is no reason why it is not possible do so as the overall decoder can still be expressed in the form of a deterministic function of a fixed length vector drawn from a fixed prior density e.g. Gaussian. \n\nMore concretely: if `m` and `s` are two parametric functions (with possibly shared parameters) which specify the mean and standard deviation of a conditional Gaussian density as in a typical VAE decoder,`z_1` is a vector of standard Gaussian variates representing the typical latent representation used in a GAN / GMMN, and `z_2` is a second vector of 'noise' standard Gaussian variates of length equal to the output dimension of `m`, then a decoder defined by\n\n    x = m(z_1) + s(z_1) * z_2\n\nwill naturally define a density with full support on the output space (assuming a strictly positive output to `s`) , have a known joint density on `(x, z_1)` that can be used for marginal likelihood estimation within your framework and still has the form `x = G(z)` (with `z = [z_1; z_2]`) and so the parameters of `m` and `s` can still be trained in a standard GAN / GMMN framework.\n\nAlthough as noted this choice of a decoder model is atypical for a GAN and GMMN, it has the advantage over using a fixed isotropic Gaussian noise model of meaning the generative model trained is the actual one used for marginal likelihood estimation and in allowing models with a non-isotropic covariance in the conditional density on the output given latent representation to be used.\n\n", "title": "Adaptive HMC implementation and Gaussian decoder model"}, "Sk5enxUHl": {"type": "rebuttal", "replyto": "B1M8JF9xx", "comment": "A new version of the paper is updated. We revised the section 2.2 on the introduction to AIS, and several other places according to reviewers' comments.", "title": "A new version of the paper is updated"}, "rkbZ5g8Hl": {"type": "rebuttal", "replyto": "ByuUr2Amx", "comment": "Thank the reviewer for providing helpful comments.\n\nRelative contribution small:\nIt\u2019s encouraging that our writing is clear enough that the ideas seem to flow naturally. But the approach is obvious only in retrospect. There has been a large amount of interest in the questions surrounding likelihoods of decoder-based models, including whether the models are missing modes or memorizing training examples. Our submission is the first to quantitatively analyze these issues using accurate log-likelihood estimates. Anecdotally, in our conversations with other researchers who cared about these questions and were familiar with the basic techniques, nobody suggested using a similar approach.\n\nHere are some of our novel contributions: (1) formulating KDE as simple importance sampling, which shows that it gives a log-likelihood stochastic lower bound for a particular generative model (with Gaussian observations); this let us formulate the problem of estimating the log-likelihoods more accurately under this generative model; (2) using BDMC to validate the log-likelihood estimates in decoder-based models (a very different setting from where it was previously applied); (3) using the q network as the initial distribution, which makes the AIS estimator very efficient for VAEs, (4) using posterior samples as a way to diagnose missing modes. \n\nMuch progress in science comes about because someone designs and validates a new genetic technique and then uses it to measure phenomena that were previously inaccessible. This is exactly what we wanted to achieve in this work: we engineered and validated a much improved log-likelihood estimator (orders of magnitude more accurate than the previous approach!), and then used it to answer important questions about generative models which we previously didn\u2019t have a way to answer.\n\n\nSection 2.3: Thanks reviewer for pointing out the typo with missing \u201clog\u201d. We have corrected it. Note that the expectation is taken over the stochasticity of producing the estimate log p\u2019(x). Mathematically, the inequality holds for every x (not just on average w.r.t. x).\n\nq(z|x): The approximate posterior, i.e., the recognition network is used as the initialization distribution for AIS chains. The x refers to the given data to be evaluated. \n\noverfitting:\nWhat we mean by \u201coverfitting\u201d follows the standard usage in the field. A model overfits if it models idiosyncrasies in the training set, thereby achieving a training likelihood much higher than its generalization (test) likelihood. A model underfits if it fails to model the structure in the training set. Despite the names, the two are not mutually exclusive, i.e. a given model can both overfit and underfit the data. (For instance, if a network somehow memorized 50% of the training examples and ignored the other 50%, it would both overfit and underfit, as reflected in poor likelihood on the training set coupled with a large gap between training and test.)\n\nYou are correct that it\u2019s not generally meaningful to compare the \u201camount of overfitting\u201d of two different models -- overfitting isn\u2019t a quantity we can measure. However, in our experiments, the size of the effect was large: the VAEs overfit substantially, whereas we saw no evidence of overfitting in the case of the GANs or GMMNs.\n\n", "title": "Rebuttal to AnonReviewer4"}, "S1CGdl8Bg": {"type": "rebuttal", "replyto": "rksbBAGEg", "comment": "Thank the reviewer for providing helpful comments.\n\nDifferent number of examples:\nWe ran our experiments on academic scale infrastructure, so we didn\u2019t have the resources to run the maximum number of examples in all conditions. We will release an updated version where all experiments use the maximum number of test examples. However, we reported confidence intervals for the results, and even with only 1000 examples for the training sets, the differences between models were still highly statistically significant.\n\nAIS+encoder:\nAIS works better when the initial distribution is a better match to the target (posterior) distribution. In those cases where an encoder net is available, it ought to provide a better initial distribution than the prior (which is what we used in the rest of the experiments). Therefore, AIS+encoder can reach comparable accuracy in a much smaller number of steps.\n\n# of AIS chains:\nWe have tested different number of independent chains. In our experiments we find that when the number of intermediate distribution goes beyond 1000, the evaluation does not vary much for different choices of number of chains. 16 chains are enough for evaluation.\n\nLarge gaps for GAN-50:\nWe speculate that the posterior distribution might be more complicated in the case of GAN-50. However, the difference between GAN-50 and the other conditions is not necessarily surprising or interesting; there\u2019s no reason that different models ought to have posterior distributions which are equally difficult to sample from. We suspect the fact that the other five models have very similar BDMC gaps is just a coincidence.\n\n\nMinor comments:\nWe have edited table 1 and the reference in the paper\nThey are average value.\nAdding another point for AIS will either make the plot too large in y-axis or x-axis.\nYes the BDMC gap refer to the values in Table 2.\nThanks for pointing out this typo. \n", "title": "Rebuttal to AnonReviewer3"}, "Sk0EFlUSx": {"type": "rebuttal", "replyto": "B1aIVjbVg", "comment": "We thank the reviewer for recognizing its educational value.\n\u201cHow AIS works?\u201d -- We have edited the paper to include a short discussion on this.\n\u201cFigure 2\u201d-- Thanks for pointing out the typo. We changed the caption as the reviewer suggests.\n\u201cUsing reconstruction\u201d -- We agree with the reviewer. Visualizing reconstruction is a way to show one particular property of the model: whether it misses any important modes of the data distribution. And we also agree that this is not a sufficient condition to be a good generative model.  \n\u201cDensity networks\u201d -- We have added the citation.\n\u201cAIS/posterior\u201d-- We edited the paper to show the relevance.\n\u201cMeaningful\u201d-- We changed the phrasing.", "title": "Rebuttal to AnonReviewer2"}, "HkUrWQ7Hx": {"type": "rebuttal", "replyto": "SkdYDMQrl", "comment": "Thanks for the response, it's a bit clarifying.\n\nAs you mention, the Gaussian observation model has been used extensively in the past, that is true. That doesn't mean that it should still be under use. KDE was extensively used in the past as well and now we can see extremely good reasons for not using it altogether. While the choice of each observation model is important, a topic that as you mention discussed at a certain length, both in the paper and in the comments, the fact that you are using an observation model at all has to be justified more than just by saying it's a way to have likelihood well defined. The GANs we use in practice are quite different from the ones you use in your paper by adding that noise. The learned std judging by figure 2, (a) is about 0.1, which is a lot for images normalized to [0, 1]. If you were to compare the Wasserstein distance to the true distribution in a simple experiment you would see a drastic decrease in performance when adding the noise. If you have a distribution P and you create P' by adding noise in the end, what properties does the likelihood of P' tell you about P? This is a question that I think has been swept under the carpet by phrasing P and P' as if they were almost the same thing, while in reality they are very different.\n\nAs a last comment, I didn't mean to ask a full background tutorial or introduction on AIS, but I do think it's important to motivate the method properly since it takes a central role in your paper. Obviously showing the proofs is too extreme, and it is likely my aim to to implement it from scratch from your paper was overly ambitious. However, for those not too familiar with AIS, we end up with little intuition about how or why it works.", "title": "Comments"}, "SkdYDMQrl": {"type": "rebuttal", "replyto": "HkYFmYfrx", "comment": "Thank you for your careful feedback.\n\nobservation model:\nYou\u2019re right that it\u2019s awkward to define a good observation model for GANs and GMMNs which makes the likelihood well-defined. We talk about this issue in Sections 3 and 5.2, and at greater length in Appendix B. We used the Gaussian observation model in order to be consistent with previous work which reported log-likelihood values for GANs and GMMNs. As discussed in Appendix B, Gaussianity is a problematic assumption, and one can improve the likelihood values substantially using a heavier-tailed noise model. However, this effect is much smaller than the log-likelihood differences between GANs and VAEs, so it can\u2019t explain the gap. One could probably do a similar analysis which fits non-isotropic covariance structure, but we couldn\u2019t find a straightforward way to do this.\n\nWe were careful to compare all three models on an equal playing field. I.e., even though it\u2019s straightforward to train VAEs with a more general (e.g. diagonal or full) covariance model, we trained them with the same isotropic Gaussian model as the GANs and GMMNs. After training, their variance parameter was fit using the validation set, just like for the other models.\n\nRegardless of the appropriateness of the Gaussian noise model, our experiments uncovered real phenomena. E.g., analyzing the likelihoods led us to discover the GANs\u2019 and GMMNs\u2019 mode dropping behavior, which is not an artifact of the observation model.\n\nreproducibility:\nThe reader who wants to use our method can run our code: https://github.com/tonywu95/eval_gen\n\nThe reader who wants to reproduce the method from scratch will need to do a bit more homework. AIS and HMC are well-known algorithms in our field; while we gave a mathematically precise presentation of our method, unfortunately there isn\u2019t space in the background section to give a tutorial introduction to AIS. For proofs of the basic properties of AIS, such as the convergence guarantees or the unbiasedness of the estimates, I\u2019d refer you to Neal\u2019s original AIS paper (which fortunately is very readable).\n", "title": "Gaussian observations and reproducibility"}, "HkYFmYfrx": {"type": "rebuttal", "replyto": "B1M8JF9xx", "comment": "I have mixed opinions about this work.\n\nOn the one hand I think it does a really nice job at providing a simple method to evaluate mode dropping and overfitting in generative models, which is one of the most important problems in machine learning now. I can see myself and many more people using these ideas to evaluate aspects of generative models\n\nOn the other hand, there is a constant use of the term \"log-likelihood for GANs\", which is extremely misleading. The log-likelihood of GANs is obviously ill-defined, and the assumption of \"Gaussian observation\" is incredibly false, since the true after-sampling variance that GANs are trained on is 0. You should relate how the model with noise added relates to properties on the actual distribution induced by the generator with no gaussian noise, instead of assuming the generator has Gaussian noise in the end, which is obviously false for a GAN and true for a VAE (which is trained this way since the reconstruction error assumes this kind of noise). I'm not asking for a precise mathematical statement of this relation, but I do think the writing sweeps this issue under the carpet, and the addition of isotropic noise on a distribution with an incredibly complex covariance matrix is more than questionable.\n\nAs a final note, I think section 2.2 which describes the central algorithm is very poorly written. After reading the section several times I have no idea how to implement it or how the sampling process is defined in the end. In my opinion, you should try to describe better:\n\n- Which is the sampling distribution of the estimate of p(x) at time t. I believe this is p(x) = E_{z ~ p_t(z)} [ p(x | z) p(z) / p_t(z) ] but I'm far from sure.\n- Explain why the successive estimator's are unbiased (if it's in the above form this is trivial)\n- Explain why the estimators have less variance as t -> T.\n- Explain what the theoretical guarantees of AIS are.\n\nMinor:\n- Typo in line 5 of page 4, \"produces\" -> \"produce\"\n- I appreciate the wall clock times in figure 2.\n\nOverall I think this is a cool paper, with some great consequences, but I think some issues (especially writing) should be polished.", "title": "Comments"}, "HkSZCwf7g": {"type": "rebuttal", "replyto": "B1M8JF9xx", "comment": "Very interesting paper to read. But I am a little confused that marginal log-likelihood (log p_\\theta(x)) shown in this paper is usually more than 200, while the log p(x) shown in variational auto-encoder on mnist  is usually around -100(Both on 50 dimensions of VAE).  Does your paper show the same log p_\\theta(x) as that in VAE?\n\nAppreciate if you could solve my puzzle. Thanks.  ", "title": "log-likelihood"}, "Hy4bkRl7x": {"type": "rebuttal", "replyto": "ByCFNOy7x", "comment": "1) Yes, f_t(z) is the unnormalized intermediate distributions. The initial distribution has f_1(z) = p_1(z) = p(z), with normalizing constant 1.\n2) Have not tried evaluating the inception score. Note that the inception score is obtained by input the images into \"Inception\" model, which is usually trained on color-images (imagenet). I will try training a MNIST classifier to obtain a \"MNIST\" score if that's needed.\n3) Yes. We report the best numbers for IWAE and KDE evaluation using GPUs and CPUs.\n4) LLD stands for log-likelihood,  see the label on y-axis. Abbreviated because of space limit. ", "title": "reply to AnonReviewer3"}, "B1nvkCx7g": {"type": "rebuttal", "replyto": "SJoeWMyQl", "comment": "It refers to deterministic reconstruction, which can also be interpreted as the mean of the distribution $p_\\sigma(x | z)$.", "title": "reply to AnonReviewer2"}, "ByCFNOy7x": {"type": "review", "replyto": "B1M8JF9xx", "review": "Regarding equations leading to Equation 5, does f_1(z) represents the unnormalized part of p_1(z)=p(z) (which is the prior p(z) in this case according to the text at the top of page 4)? I think f_1(z) = p(z) (or maybe Z_1=1 ?) is needed to obtain Equation 5.\n\nFor the Figure 1, have tried evaluating the images according to the image-quality measure (Salimans et al.)? If so, are the values similar between the three models?\n\nWhen you report computation time, are the implementations of IWAE and KDE use GPU?\n\nAlso, in Figures 1, 2 and 3, what is LLD stands for?# Review\nThis paper proposes a quantitative evaluation for decoder-based generative models that use Annealed Importance Sampling (AIS) to estimate log-likelihoods. Quantitative evaluations are indeed much needed since for some models, like Generative Adversarial Networks (GANs) and Generative Moment Matching Networks (GMMNs), qualitative evaluation of samples is still frequently used to assess their generative capability. Even though, there exist quantitative evaluations like Kernel Density Estimation (KDE), the authors show how AIS is more accurate than KDE and how it can be used to perform fine-grained comparison between generative models (GAN, GMMs and Variational Autoencoders (VAE)).\n\nThe authors report empirical results comparing two different decoder architectures that were both trained, on the continuous MNIST dataset, using the VAE, GAN and GMMN objectives. They also trained an Importance Weighted Autoencoder (IWAE) on binarized MNIST and show that, in this case, the IWAE bound underestimates the true log-likelihoods by at least 1 nat (which is significant for this dataset) according to the AIS evaluation of the same model.\n\n\n# Pros\nTheir evaluation framework is public and is definitely a nice contribution to the community.\n\nThis paper gives some insights about how GAN behaves from log-likelihood perspective. The authors disconfirm the commonly proposed hypothesis that GAN are memorizing training data. The authors also observed that GANs miss important modes of the data distribution.\n\n\n# Cons/Questions\nIt is not clear for me why sometimes the experiments were done using different number of examples (100, 1000, 10000) coming from different sources (trainset, validset, testset or simulation/generated by the model). For instance, in Table 2 why results were not reported using all 10,000 examples of the testing set?\n\nIt is not clear why in Figure 2c, AIS is slower than AIS+encoder? Is the number of intermediate distributions the same in both?\n\n16 independent chains for AIS seems a bit low from what I saw in the literature (e.g. in [Salakhutdinov & Murray, 2008] or [Desjardins etal., 2011], they used 100 chains). Could it be that increasing the number of chains helps tighten the confidence interval reported in Table 2?\n\nI would have like the authors to give their intuitions as to why GAN50 has a BDMC gap of 10 nats, i.e. 1 order of magnitude compared to the others?\n\n\n# Minor comments\nTable 1 is not referenced in the text and lacks description of what the different columns represent.\nFigure 2(a), are the reported values represents the average log-likelihood of 100 (each or total?) training and validation examples of MNIST (as described in Section 5.3.2).\nFigure 2(c), I'm guessing it is on binarized MNIST? Also, why are there fewer points for AIS compared to IWAE and AIS+encoder?\nAre the BDMC gaps mentioned in Section 5.3.1 the same as the ones reported in Table2 ?\nTypo in caption of Figure 3: \"(c) GMMN-10\" but actually showing GMMN-50 according to the graph title and subcaption.", "title": "Geometric average; GPU implementation of WAE and KDE", "rating": "7: Good paper, accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "rksbBAGEg": {"type": "review", "replyto": "B1M8JF9xx", "review": "Regarding equations leading to Equation 5, does f_1(z) represents the unnormalized part of p_1(z)=p(z) (which is the prior p(z) in this case according to the text at the top of page 4)? I think f_1(z) = p(z) (or maybe Z_1=1 ?) is needed to obtain Equation 5.\n\nFor the Figure 1, have tried evaluating the images according to the image-quality measure (Salimans et al.)? If so, are the values similar between the three models?\n\nWhen you report computation time, are the implementations of IWAE and KDE use GPU?\n\nAlso, in Figures 1, 2 and 3, what is LLD stands for?# Review\nThis paper proposes a quantitative evaluation for decoder-based generative models that use Annealed Importance Sampling (AIS) to estimate log-likelihoods. Quantitative evaluations are indeed much needed since for some models, like Generative Adversarial Networks (GANs) and Generative Moment Matching Networks (GMMNs), qualitative evaluation of samples is still frequently used to assess their generative capability. Even though, there exist quantitative evaluations like Kernel Density Estimation (KDE), the authors show how AIS is more accurate than KDE and how it can be used to perform fine-grained comparison between generative models (GAN, GMMs and Variational Autoencoders (VAE)).\n\nThe authors report empirical results comparing two different decoder architectures that were both trained, on the continuous MNIST dataset, using the VAE, GAN and GMMN objectives. They also trained an Importance Weighted Autoencoder (IWAE) on binarized MNIST and show that, in this case, the IWAE bound underestimates the true log-likelihoods by at least 1 nat (which is significant for this dataset) according to the AIS evaluation of the same model.\n\n\n# Pros\nTheir evaluation framework is public and is definitely a nice contribution to the community.\n\nThis paper gives some insights about how GAN behaves from log-likelihood perspective. The authors disconfirm the commonly proposed hypothesis that GAN are memorizing training data. The authors also observed that GANs miss important modes of the data distribution.\n\n\n# Cons/Questions\nIt is not clear for me why sometimes the experiments were done using different number of examples (100, 1000, 10000) coming from different sources (trainset, validset, testset or simulation/generated by the model). For instance, in Table 2 why results were not reported using all 10,000 examples of the testing set?\n\nIt is not clear why in Figure 2c, AIS is slower than AIS+encoder? Is the number of intermediate distributions the same in both?\n\n16 independent chains for AIS seems a bit low from what I saw in the literature (e.g. in [Salakhutdinov & Murray, 2008] or [Desjardins etal., 2011], they used 100 chains). Could it be that increasing the number of chains helps tighten the confidence interval reported in Table 2?\n\nI would have like the authors to give their intuitions as to why GAN50 has a BDMC gap of 10 nats, i.e. 1 order of magnitude compared to the others?\n\n\n# Minor comments\nTable 1 is not referenced in the text and lacks description of what the different columns represent.\nFigure 2(a), are the reported values represents the average log-likelihood of 100 (each or total?) training and validation examples of MNIST (as described in Section 5.3.2).\nFigure 2(c), I'm guessing it is on binarized MNIST? Also, why are there fewer points for AIS compared to IWAE and AIS+encoder?\nAre the BDMC gaps mentioned in Section 5.3.1 the same as the ones reported in Table2 ?\nTypo in caption of Figure 3: \"(c) GMMN-10\" but actually showing GMMN-50 according to the graph title and subcaption.", "title": "Geometric average; GPU implementation of WAE and KDE", "rating": "7: Good paper, accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "SJoeWMyQl": {"type": "review", "replyto": "B1M8JF9xx", "review": "Does \"running the decoder on z\" (page 9) refer to sampling from $p_\\sigma(x | z)$  or deterministic reconstruction?Summary:\nThis paper describes how to estimate log-likelihoods of currently popular decoder-based generative models using annealed importance sampling (AIS) and HMC. It validates the method using bidirectional Monte Carlo on the example of MNIST, and compares the performance of GANs and VAEs.\n\n\nReview:\nAlthough this seems like a fairly straight-forward application of AIS to me (correct me if I missed an important trick to make this work), I very much appreciate the educational value and empirical contributions of this paper. It should lead to clarity in debates around the density estimation performance of GANs, and should enable more people to use AIS.\n\nSpace permitting, it might be a good idea to try to expand the description of AIS. All the components of AIS are mentioned and a basic description of the algorithm is given, but the paper doesn\u2019t explain well \u201cwhy\u201d the algorithm does what it does/why it works.\n\nI was initially confused by the widely different numbers in Figure 2. On first glance my expectation was that this Figure is comparing GAN, GMMN and IWAE (because of the labeling at the bottom and because of the leading words in the caption\u2019s descriptions). Perhaps mention in the caption that (a) and (b) use continuous MNIST and (c) uses discrete MNIST. \u201cGMMN-50\u201d should probably be \u201cGMMN-10\u201d.\n\n\nUsing reconstructions for evaluation of models may be a necessary but is not sufficient condition for a good model. Depending on the likelihood, a posterior sample might have very low density under the prior, for example. It would be great if the authors could point out and discuss the limitations of this test a bit more.\n\n\nMinor:\n\nPerhaps add a reference to MacKay\u2019s density networks (MacKay, 1995) for decoder-based generative models.\n\nIn Section 2.2, the authors write \u201cthe prior over z can be drastically different than the true posterior p(z|x), especially in high dimension\u201d. I think the flow of the paper could be improved here, especially for people less familiar with importance sampling/AIS. I don\u2019t think the relevance of the posterior for importance sampling is clear at this point in the paper.\n\nIn Section 2.3 the authors claim that is often more \u201cmeaningful\u201d to estimate p(x) in log-space because of underflow problems. \u201cMeaningful\u201d seems like the wrong word here. Perhaps revise to say that it\u2019s more practical to estimate log p(x) because of underflow problems, or to say that it\u2019s more meaningful to estimate log p(x) because of its connection to compression/surprise/entropy.", "title": "\"Running the decoder\"", "rating": "7: Good paper, accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "B1aIVjbVg": {"type": "review", "replyto": "B1M8JF9xx", "review": "Does \"running the decoder on z\" (page 9) refer to sampling from $p_\\sigma(x | z)$  or deterministic reconstruction?Summary:\nThis paper describes how to estimate log-likelihoods of currently popular decoder-based generative models using annealed importance sampling (AIS) and HMC. It validates the method using bidirectional Monte Carlo on the example of MNIST, and compares the performance of GANs and VAEs.\n\n\nReview:\nAlthough this seems like a fairly straight-forward application of AIS to me (correct me if I missed an important trick to make this work), I very much appreciate the educational value and empirical contributions of this paper. It should lead to clarity in debates around the density estimation performance of GANs, and should enable more people to use AIS.\n\nSpace permitting, it might be a good idea to try to expand the description of AIS. All the components of AIS are mentioned and a basic description of the algorithm is given, but the paper doesn\u2019t explain well \u201cwhy\u201d the algorithm does what it does/why it works.\n\nI was initially confused by the widely different numbers in Figure 2. On first glance my expectation was that this Figure is comparing GAN, GMMN and IWAE (because of the labeling at the bottom and because of the leading words in the caption\u2019s descriptions). Perhaps mention in the caption that (a) and (b) use continuous MNIST and (c) uses discrete MNIST. \u201cGMMN-50\u201d should probably be \u201cGMMN-10\u201d.\n\n\nUsing reconstructions for evaluation of models may be a necessary but is not sufficient condition for a good model. Depending on the likelihood, a posterior sample might have very low density under the prior, for example. It would be great if the authors could point out and discuss the limitations of this test a bit more.\n\n\nMinor:\n\nPerhaps add a reference to MacKay\u2019s density networks (MacKay, 1995) for decoder-based generative models.\n\nIn Section 2.2, the authors write \u201cthe prior over z can be drastically different than the true posterior p(z|x), especially in high dimension\u201d. I think the flow of the paper could be improved here, especially for people less familiar with importance sampling/AIS. I don\u2019t think the relevance of the posterior for importance sampling is clear at this point in the paper.\n\nIn Section 2.3 the authors claim that is often more \u201cmeaningful\u201d to estimate p(x) in log-space because of underflow problems. \u201cMeaningful\u201d seems like the wrong word here. Perhaps revise to say that it\u2019s more practical to estimate log p(x) because of underflow problems, or to say that it\u2019s more meaningful to estimate log p(x) because of its connection to compression/surprise/entropy.", "title": "\"Running the decoder\"", "rating": "7: Good paper, accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}}}