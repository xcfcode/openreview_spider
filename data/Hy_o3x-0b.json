{"paper": {"title": "Feature Map Variational Auto-Encoders", "authors": ["Lars Maal\u00f8e", "Ole Winther"], "authorids": ["larsma@dtu.dk", "olwi@dtu.dk"], "summary": "We present a generative model that proves state-of-the-art results on gray-scale and natural images.", "abstract": "There have been multiple attempts with variational auto-encoders (VAE) to learn powerful global representations of complex data using a combination of latent stochastic variables and an autoregressive model over the dimensions of the data. However, for the most challenging natural image tasks the purely autoregressive model with stochastic variables still outperform the combined stochastic autoregressive models. In this paper, we present simple additions to the VAE framework that generalize to natural images by embedding spatial information in the stochastic layers. We significantly improve the state-of-the-art results on MNIST, OMNIGLOT, CIFAR10 and ImageNet when the feature map parameterization of the stochastic variables are combined with the autoregressive PixelCNN approach. Interestingly, we also observe close to state-of-the-art results without the autoregressive part. This opens the possibility for high quality image generation with only one forward-pass.\n", "keywords": ["deep learning", "representation learning", "variational auto-encoders", "variational inference", "generative models"]}, "meta": {"decision": "Reject", "comment": "The paper proposes a VAE variant by embedding spatial information with multiple layers of latent variables. Although the paper reports state-of-the-art results on multiple datasets, some results may be due to a bug. This has been discussed, and the author acknowledges the bug. We hope the problem can be fixed, and the paper reconsidered at another venue.\n"}, "review": {"HkYC48PxG": {"type": "review", "replyto": "Hy_o3x-0b", "review": "The paper combines several recent advances on generative modelling including a ladder variational posterior and a PixelCNN decoder together with the proposed convolutional stochastic layers to boost the NLL results of the current VAEs. The numbers in the tables are good but I have several comments on the motivation, originality and experiments.\n\nMost parts of the paper provide a detailed review of the literature. However, the resulting model is quite like a combination of the existing advances and the main contribution of the paper, i.e. the convolution stochastic layer, is not well discussed. Why should we introduce the convolution stochastic layers? Could the layers encode the spatial information better than a deterministic convolutional layer with the same architecture? What's the exact challenge of training VAEs addressed by the convolution stochastic layer? Please strengthen the motivation and originality of the paper.\n\nThough the results are good, I still wonder what is the exact contribution of the convolutional stochastic layers to the NLL results?  Can the authors provide some results without the ladder variational posterior and the PixelCNN decoder on both the gray-scaled and the natural images?\n\nAccording to the experimental setting in the Section 3 (Page 5 Paragraph 2), \"In case of gray-scaled images the stochastic latent layers are dense with sizes 64, 32, 16, 8, 4 (equivalent to S\u00f8nderby et al. (2016)) and for the natural images they are spatial (cf. Table 1). There was no significant difference when using feature maps (as compared to dense layers) for modelling gray-scaled images.\" there is no stochastic convolutional layer.  Then is there anything new in FAME on the gray images? Furthermore, how could FAME advance the previous state-of-the-art? It seems because of other factors instead of the stochastic convolutional layer. \n\nThe results on the natural images are not complete. Please present the generation results on the ImageNet dataset and the reconstruction results on both the CIFAR10 and ImageNet datasets. The quality of the samples on the CIFAR10 dataset seems not competitive to the baseline papers listed in the table. Though the visual quality does not necessarily agree with the NLL results but such large gap is still strange. Besides, why FAME can obtain both good NLL and generation results on the MNIST and OMNIGLOT datasets when there is no stochastic convolutional layer? Meanwhile, why FAME cannot obtain good generation results on the CIFAR10 dataset? Is it because there is a lot randomness in the stochastic convolutional layer? It is better to provide further analysis and it is not safe to say that the stochastic convolutional layer helps learn better latent representations based on only the NNL results.\n\nMinor things:\n\nPlease rewrite the sentence \"When performing reconstructions during training ... while also using the stochastic latent variables z = z 1 , ..., z L.\" in the caption of Figure 1.", "title": "Comments on the motivation, originality and experiments", "rating": "5: Marginally below acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "SyjePb9gz": {"type": "review", "replyto": "Hy_o3x-0b", "review": "The description of the proposed method is very unclear. From the paper it is very difficult to make out exactly what architecture is proposed. I understand that the prior on the z_i in each layer is a pixel-cnn, but what is the posterior? Equations 8 and 9 would suggest it is of the same form (pixel-cnn) but this would be much too slow to sample during training. I'm guessing it is just a factorized Gaussian, with a separate factorized Gaussian pseudo-prior? That is, in figure 1 all solid lines are factorized Gaussians and all dashed lines are pixel-cnns?\n\n* The word \"layers\" is sometimes used to refer to latent variables z, and sometimes to parameterized neural network layers in the encoder and decoder. E.g. \"The top stochastic layer z_L in FAME is a fully-connected dense layer\". No, z_L is a vector of latent variables. Are you saying the encoder produces it using a fully-connected layer?\n* Section 2.2 starts talking about \"deterministic layers h\". Are these part of the encoder or decoder? What is meant by \"number of layers connecting the stochastic latent variables\"?\n* Section 2.3: What is meant by \"reconstruction data\"?\n\nIf my understanding of the method is correct, the novelty is limited. Autoregressive priors were used previously in e.g. the Lossy VAE by Chen et al. and IAF-VAE by Kingma et al. The reported likelihood results are very impressive though, and would be reason for acceptance if correct. However, the quality of the sampled images shown for CIFAR-10 doesn't match the reported likelihood. There are multiple possible reasons for this, but after skimming the code I believe it might be due to a faulty implementation of the variational lower bound. Instead of calculating all quantities in the log domain, the code takes explicit logs and exponents and stabilizes them by adding small quantities \"eps\": this is not guaranteed to give the right result. Please fix this and re-run your experiments. (I.e. in _loss.py don't use x/(exp(y)+eps) but instead use x*exp(-y). Don't use log(var+eps) with var=softplus(x), but instead use var=softplus(x)+eps or parameterize the variance directly in the log domain).", "title": "limited novelty. possibly incorrect?", "rating": "3: Clear rejection", "confidence": "3: The reviewer is fairly confident that the evaluation is correct"}, "Hkk3C-5lM": {"type": "review", "replyto": "Hy_o3x-0b", "review": "Update:  In light of Yoon Kim's retraction of replication, I've downgraded my score until the authors provide further validation (i.e. CIFAR and ImageNet samples).\n\nSummary\n\nThis paper proposes VAE modifications that allow for the use multiple layers of latent variables.  The modifications are: (1) a shared en/decoder parametrization as used in the Ladder VAE [1], (2) the latent variable parameters are functions of a CNN, and (3) use of a PixelCNN decoder [2] that is fed both the last layer of stochastic variables and the input image, as done in [3].  Negative log likelihood (NLL) results on CIFAR 10, binarized MNIST (dynamic and static), OMNIGLOT, and ImageNet (32x32) are reported.  Samples are shown for CIFAR 10, MNIST, and OMNIGLOT.        \n\n\nEvaluation\n\nPros:  The paper\u2019s primary contribution is experimental: SOTA results are achieved for nearly every benchmark image dataset (the exception being statically binarized MNIST, which is only .28 nats off).  This experimental feat is quite impressive, and moreover, in the comments on OpenReview, Yoon Kim claims to have replicated the CIFAR result.  I commend the authors for making their code available already via DropBox.  Lastly, I like how the authors isolated the effect of the concatenation via the \u2018FAME No Concatenation\u2019 results.                 \n\nCons:  The paper provides little novelty in terms of model or algorithmic design, as using a CNN to parametrize the latent variables is the only model detail unique to this paper.  In terms of experiments, the CIFAR samples look a bit blurry for the reported NLL (as others have mentioned in the OpenReview comments).  I find the authors\u2019 claim that FAME is performing superior global modeling interesting.  Is there a way to support this experimentally?  Also, I would have liked to see results w/o the CNN parametrization; how important was this choice?  \n\n\nConclusion\n\nWhile the paper's conceptual novelty is low, the engineering and experimental work required (to combine the three ideas discussed in the summary and evaluate the model on every benchmark image dataset) is commendable.  I recommend the paper\u2019s acceptance for this reason.\n\n\n[1]  C. Sonderby et al., \u201cLadder Variational Autoencoders.\u201d  NIPS 2016.\n[2]  A. van den Oord et al., \u201cConditional Image Generation with PixelCNN Decoders.\u201d ArXiv 2016.\n[3]  I. Gulrajani et al., \u201cPixelVAE: A Latent Variable Model for Natural Images.\u201d  ICLR 2017.\n", "title": "Review: Impressive experimental results but low novelty", "rating": "6: Marginally above acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "ByZxuMamf": {"type": "rebuttal", "replyto": "Hy_o3x-0b", "comment": "Dear reviewers,\n\nThank you for all of your useful feedback. We have used this rebuttal period to investigate our results and have found that\n\n1) the grayscale MNIST and OMNIGLOT result hold and\n2) we too had a bug in the AR model part for the natural color images.\n \nWe have corrected the bug by now and the samples look much better. However, we won\u2019t be able to update the results in due time, which is why we completely understand you not accepting the paper in its current format. We plan to submit to ICML and apologize for the inconvenience.", "title": "Authors final comments"}, "HkWqOPVgf": {"type": "rebuttal", "replyto": "HksGNSfgG", "comment": "Dear anonymous and AnonReviewer3,\n\n* Thank your for spotting the sub-quality sample. We have identified a possible error. We had forgotten to sample the softmax from the auto-regresssive part of the model. This of course have a negative influence on the sample quality but does not affect the test log-likelihood calculation. We will provide a follow-up on this a bit later with new samples. \n\n* We provide the complete code here (Python 3 & Tensorflow 1.2):  https://www.dropbox.com/s/wjhhxff0b0np6xi/FAME-implementation.zip?dl=0. We will also provide the code in a Github repo later. \n\n* We have trained a PixelCNN with an equivalent architecture as the one used for FAME (no R->G->B dependency) and achieved a NLL at 3.34 bits/dim. So we are confident that our code is working properly.\n\n* Finally we would like to note that we forgot to add a \u201clog\u201d in the equation following Eq. 6 in the paper.\n", "title": "General comments and code sharing"}, "SkjKJ5Nlf": {"type": "rebuttal", "replyto": "HyIvKY4ez", "comment": "Yes. In _fame.py lines: 60, 99 and 105, you can see that I call the function using the default arguments mean=0. and var=1.\n\nPlease note that there is a difference between self.mean, self.var and input_mean, input_var.", "title": "line 47"}, "Hy0Pcd4gf": {"type": "rebuttal", "replyto": "HkHWP_Vef", "comment": "Dear AnonReviewer3,\n\nFirst we generate a random tensor N(0,I)->'eps' (line 47) that has the same shape as the input then we calculate z (line 51) by applying the reparameterization trick: https://arxiv.org/pdf/1312.6114.pdf.", "title": "Not a bug"}, "H19apQuyM": {"type": "rebuttal", "replyto": "SJbqRnO0b", "comment": "Dear Yoon Kim and Anonymous,\n\nThank you for your interest in the paper. We have taken the comments seriously and thoroughly reviewed the code without finding any bugs. We have retrained the models and are confident in the results given in the Tables. We actually also found slight improvements compared to the results reported.\n\nFirst of all we would like to answer the questions formulated on the 1st of November by anonymous:\n\nQ1. The Omniglot samples in Figure 4 don't look binary. Are you showing the probabilities instead of the actual samples? Which version of the Omniglot dataset did you use and how did you preprocess it?\n\nYes, we are showing the probabilities. We will include the stochastically binarized samples in the revised version. Unfortunately it is not possible to include them in this OpenReview format, so please see: https://imgur.com/gallery/NRvxO. From the plots we can see comparable results to VLAE. It is hard to distinguish whether one is better over the other by only evaluating the samples, hence the log-likelihood results in the tables should tell the full story.\n\nQ2. The MNIST samples in Figure 4 do look binary, but their edges are far too smooth for stochastically binarized MNIST. In other words, they don't actually look like the data: just compare them to samples on Figure 1 in the VLAE paper (https://arxiv.org/abs/1611.02731). Did you sample each pixel or did you just use the most probable value?\n\nYou are right, we used the most probable value. We will include the stochastically binarized samples in the revised version. Find them here: https://imgur.com/gallery/NRvxO .\n\nQ3. The CIFAR10 samples in Figure 2 have very little local detail and are not nearly sharp and structured enough to correspond to the 2.75 bits/dim result reported in the paper. In my experience, a model generating samples like this should get 3.4 bits/dim at best. What kind of test NLL estimates do you get with a single sample on CIFAR10 and ImageNet?\n\nWe do agree that these samples do not have as much local detail as the samples in VLAE and PixelCNN++. However, we have a very simple PixelCNN parameterization without the R->G->B dependency and all of the additional contributions as the PixelCNN++/VLAE papers have. In our approach the local structure is worse but the global modeling is better. We interpret the better test likelihood score as a sign that visual appeal is not the ultimate way to judge the model. We expect that including a better autoregressive model in FAME will give us the best of both worlds.\n\nFor the camera-ready version we will train FAME with a more complex autoregressive model and visualize the generated images in the final paper for both ImageNet and CIFAR10. We didn't do this experiment, since we did not have the time before the deadline and we were more interested in answering the question to why the additional VAE parameterization in PixelVAE and VLAE didn't give a better bound.\n\nLast but not least we will publish the code on Github upon publishing the paper.\n\n\n", "title": "Answering the questions to the results"}}}