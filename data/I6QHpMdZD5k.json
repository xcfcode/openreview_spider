{"paper": {"title": "Learning to Solve Nonlinear Partial Differential Equation Systems To Accelerate MOSFET Simulation", "authors": ["Seungcheol Han", "Jonghyun Choi", "Sung-Min Hong"], "authorids": ["~Seungcheol_Han1", "~Jonghyun_Choi1", "~Sung-Min_Hong1"], "summary": "Learning a convolutional neural network to approximately solve nonlinear PDE systems to accelerate MOSFET simulation by more than 12x times.", "abstract": "Semiconductor device simulation uses numerical analysis, where a set of coupled nonlinear partial differential equations is solved with the iterative Newton-Raphson method. Since an appropriate initial guess to start the Newton-Raphson method is not available, a solution of practical importance with desired boundary conditions cannot be trivially achieved. Instead, several solutions with intermediate boundary conditions should be calculated to address the nonlinearity and introducing intermediate boundary conditions significantly increases the computation time. In order to accelerate the semiconductor device simulation, we propose to use a neural network to learn an approximate solution for desired boundary conditions. With an initial solution sufficiently close to the final one by a trained neural network, computational cost to calculate several unnecessary solutions is significantly reduced. Specifically, a convolutional neural network for MOSFET (Metal-Oxide-Semiconductor Field-Effect Transistor), the most widely used semiconductor device, are trained in a supervised manner to compute the initial solution. Particularly, we propose to consider device grids with varying size and spacing and derive a compact expression of the solution based upon the electrostatic potential. We empirically show that the proposed method accelerates the simulation by more than 12 times. Results from the local linear regression and a fully-connected network are compared and extension to a complex two-dimensional domain is sketched.", "keywords": ["Partial differential equation", "nonlinear equation", "Newton-Raphson method", "convolutional neural network"]}, "meta": {"decision": "Reject", "comment": "This paper proposes using a neural network to learn an approximate solution for desired boundary conditions to accelerate the semiconductor device simulation. The work shows that speed-up simulation is increased significantly. However, the major concern about this work is the limited contribution to the machine learning community as exposed by the reviewers. "}, "review": {"9qPgD4glxC": {"type": "rebuttal", "replyto": "9koLLmLqEJb", "comment": "Thank you for your feedback!\n\nRegarding your first comment, our approach can be applied to other fields, where a set of nonlinear equations must be solved in an iterative manner (the Newton-Raphson method).\nAlthough our examples are taken from a somewhat unfamiliar field (the semiconductor device simulation) from the viewpoint of the ML society, the basic idea is quite general and applicable to many unrelated fields.\nMoreover, we believe that it is an important task of the major ML conferences to find a new application field of the ML approach.\n\nAt the end of Appendix G, the simulation time of each run is shown. The simulation time really depends on the mesh size. For a large device, typically hours are needed to get the solution. We hope that it can partially address your second comment.\n\nFinally, regarding the number of inference runs, our response to the Reviewer#2 is copied below. Rough guess for the total inference runs can be made:\n\n\"The total number would be determined by a product between the number of users and the number of simulation runs per user. When we consider an academic research group, the user number would be 1 - 10 and the run number per user would be 10 - 100. Therefore, it is really a small number. However, when we consider a semiconductor company developing the next-generation technology, the number increases drastically. The user number would be (at least) 10 - 100. More importantly, an engineer can easily submit 100 - 1000 runs every day during the technology development period. Therefore, in the case of a semiconductor company, the additional cost spent by the developer group can be well justified.\"\n\nThank you for your efforts in reviewing our manuscript.\n", "title": "Thank you for your feedback!"}, "UOjjbhScivE": {"type": "rebuttal", "replyto": "uVfHZ0Z1n6a", "comment": "Thank you for your feedback!\n\nIn the second revised manuscript, we have Subsection 5.3, where comparison with other methods is made.\nThe local linear regression and the fully-connected network are considered and the CNN clearly outperforms them in terms of the numerical stability.\nTwo appendices (Appendix E and Appendix F) are provided to show detailed information about them.\n\nOf course, this work does not introduce a new network architecture to solve the problem at hand.\nHowever, the benchmark against baselines has been newly added during the revision process, as shown in the above paragraph.\n\nInstead, it demonstrates a new application field (the semiconductor device simulation) and a clear performance improvement (at least one order-of-magnitude).\nWe believe that it is an important task of the major ML conferences to find a new application field of the ML approach.\nNowadays, we can easily find many application papers, whose application field is the computational fluid dynamics.\nQuite similarly, another application field which enjoys the advantages of the ML approach can be considered in the ML conferences.  \n\nFinally, we believe that our approach can be applied to other fields, where a set of nonlinear equations must be solved in an iterative manner.\n\nThank you for your efforts in reviewing our manuscript.", "title": "Thank you for your feedback!"}, "RyrtYRt36Zv": {"type": "review", "replyto": "I6QHpMdZD5k", "review": "The paper proposes to use a CNN to compute an initial guess for the iterative Newton-Rhapson solution of a coupled PDE system used for semiconductor device simulation. To do so, the authors construct a \"device template\" which parametrizes the design space. The CNN then maps a device configuration in this 6-dim space to the predicted electrostatic potential in the form of a 64x64 grid. The authors provide an analysis showing why predicting the electrostatic potential alone is sufficient. Overall, this approach can provide a simulation speedup of 12x or more. The authors are also planning to publish the dataset generated for the paper.\n\nThe idea to take a data-driven approach to compute the initial approximate solution in the context of the semiconductor simulation domain is interesting. Most prior work utilizing ML to accelerate PDE solution tried to generate such solutions directly. The path taken here, while seemingly easier, is interesting from an application point of view in that the solver is still used as before, potentially alleviating concerns about the validity of ML-accelerated solutions. The claimed order of magnitude speedup is significant (but see below for some comments on this). The main downside of the paper is the very limited novelty on the ML front (off-the-shelf generator from the DC-GAN paper) and demonstrated applicability to a specific and relatively narrow domain. As such, I recommend against publication at ICLR, and would advise the authors to submit the paper to a venue where the presented advances are likely to be of wider interest.\n\nOne specific point that I believe should be addressed, is to clarify the cost of building the dataset (10k simulations) and training the network, and its impact on the effective simulation speedup. As is, the 12x speedup would seem to apply in the limit of a very large number of network inference runs, and it is unclear if this is a practically relevant setting.\n\nSuggestions for improvements:\n- Explain to the reader explicitly why this is a 2d problem while the device exists in 3d space.\n- What specifically was the validation set used for?\n- In the text it is stated that \"grid spacing is adjusted\". Please explain more how this is done.\n- The text states that the network was trained with backprop. Which specific optimizer was used, and with which hyperparameters?\n- Including parts of the explanations currently in appendix B could make the text clearer and easier to read for people from outside of your field (e.g. the importance of bias ramping, and its relation to the simulation cost).\n", "title": "Use CNN to predict initial guess for the electrostatic potential in a Newton-Rhapson solution", "rating": "4: Ok but not good enough - rejection", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "L8UPMWXyfX": {"type": "rebuttal", "replyto": "Lcfh6QQ4Hzu", "comment": "Thank you for your response about the first revised manuscript. We have just uploaded the second revised one. In the present manuscript, the results of a fully-connected network are added in Subsection 5.3 and Appendix F. We hope that addition of these results further improves the quality of our manuscript.\n\nPoint-by-point responses are provided:\n\n\u2022\t(although it would be good to understand why) Thank you for your comment. We have the following plan. We will pick up several cases, where the CNN is successful but the local linear regression is not. Then, by comparing them, the underlying reason will be investigated.\n\n\u2022\t(It would be better to have some sort of estimate of the number of times such a simulator would be run.) The total number would be determined by a product between the number of users and the number of simulation runs per user. When we consider an academic research group, the user number would be 1 - 10 and the run number per user would be 10 - 100. Therefore, it is really a small number. However, when we consider a semiconductor company developing the next-generation technology, the number increases drastically. The user number would be (at least) 10 - 100. More importantly, an engineer can easily submit 100 - 1000 runs every day during the technology development period. Therefore, in the case of a semiconductor company, the additional cost spent by the developer group can be well justified.\n\nThank you for your efforts in reviewing our manuscript.\n", "title": "Thank you for your feedback!"}, "1eVU81n4x_q": {"type": "rebuttal", "replyto": "eR9pNNG2__M", "comment": "The second revised manuscript is uploaded.\n\nIn Figure 3(b), the fully-connected network tested in this work is shown. It is noted that the network has been designed to have a comparable level of computational complexity in the training phase. However, as shown in Table I and Appendix F, the CNN clearly outperforms the FCN. In Appendix F, we discuss the possible reason of such difference in the performance. \n\nThrough the revision process in conjunction with the reviewers\u2019 comments, we have addressed many issues. Major improvements include:\n\n\u2022\tComparison with the local linear regression (Subsection 5.3 and Appendix E)\n\n\u2022\tComparison with the fully-connected network (Subsection 5.3 and Appendix F)\n\n\u2022\tResults for a MOSFET with an unstructured mesh (Subsection 5.4 and Appendix G)\n\n\u2022\tDiscussion on the efficiency of the proposed approach (Subsubsection 5.2.2)\n\nThank you for your efforts in reviewing our manuscript.", "title": "A fully-connected network is investigated in the second revised manuscript. "}, "xUF5Ysrvi4": {"type": "rebuttal", "replyto": "I6QHpMdZD5k", "comment": "Dear Reviewers and Area Chair of Paper749,\n\nThe second revised manuscript is uploaded. Modified sentences are written in the blue letters. In the second revised manuscript, the appendices are attached to the main document.\n\nThe major improvements in the second revised manuscript are as follow:\n\n\u2022\tResults of the fully-connected network are added. (Figure 3(b), Table I, and Appendix F) \n\n\u2022\tOne appendix for the fully-connected network is added (Appendix F) and one existing appendix for the unstructured mesh is updated (Appendix G)\n\nThe present authors believe that our manuscript has been improved significantly through the revision process in conjunction with the reviewers\u2019 comments. All issues raised by the reviewers (including the local linear regression, an alternative neural network architecture, an unstructured mesh, and efficiency of the proposed approach) are addressed.  Thank you for your valuable comments.\n\nBest regards,\n\nAuthors of Paper749\n", "title": "The second revised manuscript is uploaded."}, "eriGTsuime8": {"type": "review", "replyto": "I6QHpMdZD5k", "review": "The submission proposes speeding up MOSFET simulations by learning the electrostatic field by example.\n\nOn the positive side, the submission reports 12x speedup over running MOSFET simulation. The submission speeds up the simulation by reducing the problem to a lookup of a electrostatic field as a function of 6 parameters of a MOSFET (two doping levels, oxide thickness, the gate length, V_DD, and V_g).\n\nHowever, the application doesn't seem to require a convolutional network.. the input space is only 6-dimensional, so simple techniques ought to work well. When I run into low-dimensional problems like this, I use local linear regression. [1] Namely:\n\n1. Scale each input to lie in [0,1]\n2. Choose a distance h in the 6-dimensional scaled input space (via cross-validating the following procedure)\n3. For any test point, find N points that lie within distance h of the test point\n4. Do weighted linear regression on those N points, with the tricube weighting function scaled to have support h [2]\n5. Evaluate the linear regression once for each output position.\n\nNote that in step 4, you form a NxN correlation matrix once, and perform a Cholesky decomposition on it. Then, for each position in the electrostatic output, you only need to do backsubstitution, which is O(N^2). \n\nThis would be the standard way of solving such a problem. You'd have to show that the neural network was substantially better or cheaper than this technique.\n\nAnother issue is with exactly how you measure the 12x speedup. That speedup time ignores the ~10,000 times you have to run the simulator to generate the training data. If the simulator is run only on the 1,000 test samples, then the simulator has actually slowed down by 10x (i.e., it's cheaper to not generate the training set and only simulate on the test samples). How many times is the simulator expected to run? If the simulator will run 100,000 times (e.g.), then it could be that the 5-d space is sampled densely enough where you can simply perform a nearest neighbor computation and return the electrostatic field out of memory, and do absolutely no interpolation or simulaion.\n\nReferences.\n1. https://en.wikipedia.org/wiki/Local_regression\n2. https://en.wikipedia.org/wiki/Kernel_(statistics)\n", "title": "Unclear whether you need a convolutional neural network to solve a 6-input problem", "rating": "6: Marginally above acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}, "W8K7MQ2qlmk": {"type": "rebuttal", "replyto": "RyrtYRt36Zv", "comment": "The first revised manuscript is uploaded.\n\nIn Subsubsection 5.2.2 of the revised manuscript, discussion on the cost of building the training set is made. The main observation is that the developer and user groups are well separated in this case and the simulation time is the most important metric. Certainly, in this application, a very large number of network inference runs is relevant.\n\nIn Page 3, the reason why the three-dimensional structure can be treated as a two-dimensional one is explained. In Page 5, the meaning of \u201cgrid adjustment\u201d is explicitly written. The optimizer and hyper-parameters are shown in Page 5. Some sentences are taken from Appendix B to make the text clearer.\n\nThank you for your valuable comments.\n", "title": "Many thanks to your detailed comments "}, "1wpDb7rETZA": {"type": "rebuttal", "replyto": "eR9pNNG2__M", "comment": "The first revised manuscript is uploaded.\n\nIn Subsection 5.3 of the revised manuscript, results of the local linear regression are presented. Clearly, the neural network outperforms the local linear regression in terms of the numerical stability.\n\nIn Subsection 5.4 of the revised manuscript, a new MOSFET with an unstructured mesh is considered.  \n\nIn order to include results of an alternative neural network architecture (other than the CNN), we are still working on it. We hope that the additional results can be found in the second revised manuscript.\n", "title": "An alternative architecture will be investigated in the second revised manuscript. "}, "ixG9uF4QfsF": {"type": "rebuttal", "replyto": "eriGTsuime8", "comment": "The first revised manuscript is uploaded.\n\nIn Subsection 5.3 of the revised manuscript, following your valuable comment, results of the local linear regression are presented. The local linear regression really works (as expected) and its results are better than the conventional method. However, the neural network outperforms the local linear regression in terms of the numerical stability. More importantly, the local linear regression requires the densely-sampled dataset at each inference run. We believe that the trained neural network is a more efficient way.\n\nIn Subsubsection 5.2.2 of the revised manuscript, discussion on the cost of building the training set is made. The main observation is that the developer and user groups are well separated in this case and the simulation time is the most important metric. \n\nThank you for your valuable comments.\n", "title": "Subsection 5.3 is added and Subsubsection 5.2.2 is modified."}, "nlpra42YOWd": {"type": "rebuttal", "replyto": "ZHg9PaoU_YW", "comment": "The first revised manuscript is uploaded.\n\nIn Subsection 2.1 of the revised manuscript, the references mentioned in the reviewer comment are introduced. And a new paragraph for https://arxiv.org/abs/2005.04485 is added. \n\nIn Subsection 5.4 of the revised manuscript, a new MOSFET with an unstructured mesh is considered.  \n\nThank you for your valuable comments.\n", "title": "Subsection 2.1 is modified and Subsection 5.4 is added."}, "dZ0PfsQnln7": {"type": "rebuttal", "replyto": "I6QHpMdZD5k", "comment": "Dear Reviewers and Area Chair of Paper749,\n\nThe first revised manuscript is uploaded. In this revised manuscript, we try to resolve several issues raised by the reviewers. Modified sentences are written in the blue letters. In the revised manuscript, the appendices are attached to the main document.\n\nThe major improvements are as follow:\n\n\u2022\tResults of the local linear regression are obtained. (Subsection 5.3) Clearly, the neural network outperforms the local linear regression in terms of the numerical stability. \n\n\u2022\tA new MOSFET with an unstructured mesh is considered. (Subsection 5.4) \n\n\u2022\tDiscussion on the cost of building the training set is made. (Subsubsection 5.2.2)\n\n\u2022\tTwo additional appendices (Appendices E and F)\n\nWe are currently preparing the second revised manuscript, in order to include results of an alternative neural network architecture (other than the CNN).\n\nBest regards,\n\nAuthors of Paper749\n", "title": "The first revised manuscript is uploaded."}, "EfRXjfO58Lu": {"type": "rebuttal", "replyto": "RyrtYRt36Zv", "comment": "Thank you for your valuable comments. They are very useful in improving our manuscript. We are planning to improve the manuscript according to your comments. We will upload the revised manuscript by the end of the discussion stage 1 (November 17). \n\nIn this time, point-by-point responses are provided. \n\n\u2022\tAs pointed out by the reviewer correctly, it takes a long time to construct the training data set. Therefore, the hidden efforts to construct the training data set should be considered, if the device simulator is used only by the one who actually performs the training. We agree that it is not effective. However, it is noted that the semiconductor device simulator is typically developed by a developer group -- a company or a research group -- and distributed over several end users. The important metric is not the training time spent by the developer but the simulation time experienced by the end user.  For an end user, 12 times (or even larger) speedup is very attractive. \n\n\u2022\tThank you for pointing out the 3D problem. The planar MOSFET has the translational symmetry along the third direction. In other words, every physical quantity does not change along the third direction, which is perpendicular to the plane. (See Figure 1(a) and 1(c), for example.) Of course, the state-of-the-art MOSFETs have complex 3D geometry. However, it is beyond our scope in this work. Coping the 3D MOSFET is a very challenging future research topic. \n\n\u2022\tAccording to many valuable suggestions by the reviewer for improvements, the revised manuscript will be prepared. \n\nFinally, thank you for your kind advice to submit our manuscript to other venues. Certainly, we will prepare a manuscript, which is more focused on the application aspect. However, we strongly believe that solving a set of coupled partial differential equations is an important emerging application field even from the machine learning society.  \n\n", "title": "The simulation time experienced by the end user is important. "}, "WESViyUe2mC": {"type": "rebuttal", "replyto": "eR9pNNG2__M", "comment": "Thank you for your valuable comments. Especially, your critical comment, \u201cthe theoretical contributions to machine learning are minimal,\u201d seems to be very important. In order to meet the standards of ICLR, we are planning to improve the manuscript. In the revised manuscript, the following major improvements will be included:\n\n\u2022\tThe linear regression result will be compared with our original result from the neural network. \n\n\u2022\tAlternative neural network architectures (other than the CNN) will be investigated.\n\n\u2022\tA new example for a complex 2D geometry will be prepared. \n\nWe will upload the revised manuscript by the end of the discussion stage 1 (November 17).  \n", "title": "Alternative neural network architectures will be investigated. "}, "DBLJGsR6Ooa": {"type": "rebuttal", "replyto": "eriGTsuime8", "comment": "Thank you for your valuable comments. Your two comments are very useful in improving our manuscript. We are planning to improve the manuscript according to your comments. We will upload the revised manuscript by the end of the discussion stage 1 (November 17). \n\nIn this time, point-by-point responses are provided. \n\n\u2022\tFollowing the first comment, the local linear regression over the 6-dimensional input space (two doping densities, two lengths, and two bias voltages) will be tried and its results will be compared with our original results in the revised manuscript. Thank you for your suggestion. \n\n\u2022\tFor the second comment, as pointed out by the reviewer correctly, it takes a long time to construct the training data set. Therefore, the hidden efforts to construct the training data set should be considered, if the device simulator is used only by the one who actually performs the training. We agree that it is not effective. However, it is noted that the semiconductor device simulator is typically developed by a developer group -- a company or a research group -- and distributed over several end users. Although the number of simulation runs by a single end user can vary depending on his/her need, the total number would be very large. Moreover, since we are interested with the end users, the dense sampling of the input space is not feasible. Therefore, it is desirable for the developer group to distribute a semiconductor device simulation with a trained neural network. The above discussion will be added in the revised manuscript, in order to clarify the motivation of this work.\n", "title": "The local linear regression will be tried. "}, "xJ-XsyTfrC9": {"type": "rebuttal", "replyto": "ZHg9PaoU_YW", "comment": "Thank you for your valuable comments. They are very useful in improving our manuscript. We are planning to improve the manuscript according to your comments. We will upload the revised manuscript by the end of the discussion stage 1 (November 17). \n\nIn this time, point-by-point responses are provided. \n\n\u2022\tThank you for introducing a recent publication, https://arxiv.org/abs/2005.04485. Although we did not know it, it will be very helpful. In the revised manuscript, it will be added in Section 2. And it is noted that the computational fluid dynamics and the semiconductor device simulation are much different research fields. Therefore, we believe that this work still has its merits. \n\n\u2022\tIn the revised manuscript, https://doi.org/10.1016/j.jcp.2019.05.026  and https://arxiv.org/abs/1907.04502 will be discussed in Section 2.\n\n\u2022\tThank you for pointing out the problem related with complex domains. As correctly pointed out by the reviewer, application to the complex 2D domain is an important issue. We admit that our CNN approach is not very suitable to deal with the complex 2D domain. However, we believe that our approach is not restricted to a specific neural network architecture. In order to demonstrate this point, another MOSFET with a complex 2D geometry will be additionally studied in the revised manuscript. We hope that the new example convinces the reviewer that our approach is applicable to more general cases.\n\nFinally, thank you for your kind suggestion to submit our manuscript to an engineering journal. Certainly, we will prepare a manuscript, which is more focused on the application aspect. However, we strongly believe that solving a set of coupled partial differential equations is an important emerging application field even from the machine learning society.  \n", "title": "Results for a complex 2D geometry will be prepared. "}, "AiXaBcd732I": {"type": "rebuttal", "replyto": "VtJZZHVBb0P", "comment": "Thank you for your favorable comments. In order to address many valuable comments by other reviewers, we are planning to improve the manuscript. In the revised manuscript, the following major improvements will be included:\n\n\u2022\tThe linear regression result will be compared with our original result from the neural network. \n\n\u2022\tAlternative neural network architectures (other than the CNN) will be investigated.\n\n\u2022\tA new example for a complex 2D geometry will be prepared. \n\nWe will upload the revised manuscript by the end of the discussion stage 1 (November 17).  \n", "title": "We will prepare a revised manuscript."}, "eR9pNNG2__M": {"type": "review", "replyto": "I6QHpMdZD5k", "review": "The paper proposes a method for generating an initial guess for numerical simulations of semiconductor devices. Using CNNs to generate a better initial guess speeds up simulations by a significant constant factor.\n\nPros:\n(1) The paper addresses an important practical problem with industrial applications.\n(2) The exposition of the underlying theory and the presentation of results is very clear, the paper is well-written.\nEven a non-expert like myself is able to follow the paper.\n(3) The experimental results are promising.\n\nCons:\n(1) Even though this is a good applications paper, the theoretical contributions to machine\nlearning are minimal -- and may not be enough to match ICLR standards.\n(2) More justifications for the chosen architecture in Fig. 3, and better yet -- an experimental\ncomparison of alternative architectures would be interesting to see.\n\nOverall, despite the promising experimental results, I am concerned that the paper may not meet\nthe standards of ICLR, hence my rating.", "title": "Accelerating semiconductor simulations with CNNs", "rating": "5: Marginally below acceptance threshold", "confidence": "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper"}, "ZHg9PaoU_YW": {"type": "review", "replyto": "I6QHpMdZD5k", "review": "The paper proposed to use a CNN as a low-accuracy solver to output a good initial guess from the device parameters and then the solution is refined by an expensive numerical solver to get a good accuracy. The experiment on the MOSFET problem shows that, compared with the conventional numerical solver, this hybrid strategy can accelerate the simulation by more than 12 times.\n\nPros:\n- The proposed hybrid method speeds up the simulation a lot without a sacrifice of accuracy.\n\nMajor comments:\n- This idea of using CNN to output a good initial guess is not new and has been proposed, e.g., in the paper https://arxiv.org/abs/2005.04485 . So there is little contribution in the method.\n- The problem considered in the paper is a 2D rectangle domain, which can be handled by CNN nicely. However, in practice this may not be true. The authors should consider more complex domains. For example, in https://doi.org/10.1016/j.jcp.2019.05.026 CNN is used for complex 2D geometry. In https://arxiv.org/abs/1907.04502 neural network is used to solve Poisson equation in a L-shape domain, which should also be discussed in Section 2.1.\n- This paper has no contribution in machine leaning, and instead it is an application for solving PDEs. Most part of this paper is not relevant to machine learning topics. It may be more suitable to publish this paper in an engineering journal instead of a machine learning conference.", "title": "Mehtod is not new; good engineering application", "rating": "5: Marginally below acceptance threshold", "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"}, "VtJZZHVBb0P": {"type": "review", "replyto": "I6QHpMdZD5k", "review": "Contribution: Authors propose using a neural network to learn an approximate solution for desired boundary conditions in order to accelerate the semiconductor device simulation. They significately reduce the computational cost to calculate several unnecessary solutions when considering an initial solution sufficiently close to the final one by a convolutional neural network (CNN). To compute this initial solution, authors authors train a MOSFET based convolutional neural network. They empirically show that their proposed method accelerates the simulation by more than 12 times.\n\nPros:\n\n1) Proposal is original.\n2) Proposal is fast.", "title": "Authors propose using a ANN to learn an approximate solution for desired boundary conditions in order to accelerate the semiconductor device simulation, They show that the computational cost is significantly reduced. They empirically show that their method accelerates simulation by more than 12 times.", "rating": "7: Good paper, accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}}}